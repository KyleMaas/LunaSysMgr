<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>LunaSysMgr: VirtualKeyboardPreferences.h Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>

</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">LunaSysMgr
   
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
      <li><a href="dirs.htm"><span>Directories</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.htm"><span>File&#160;List</span></a></li>
      <li><a href="globals.htm"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('VirtualKeyboardPreferences_8h.htm','');
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">VirtualKeyboardPreferences.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="VirtualKeyboardPreferences_8h.htm">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/* @@@LICENSE</span>
<a name="l00002"></a>00002 <span class="comment">*</span>
<a name="l00003"></a>00003 <span class="comment">*      Copyright (c) 2010-2012 Hewlett-Packard Development Company, L.P.</span>
<a name="l00004"></a>00004 <span class="comment">*                    2012 MÃ¥ns Andersson &lt;mail@mansandersson.se&gt;</span>
<a name="l00005"></a>00005 <span class="comment">*</span>
<a name="l00006"></a>00006 <span class="comment">* Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span>
<a name="l00007"></a>00007 <span class="comment">* you may not use this file except in compliance with the License.</span>
<a name="l00008"></a>00008 <span class="comment">* You may obtain a copy of the License at</span>
<a name="l00009"></a>00009 <span class="comment">*</span>
<a name="l00010"></a>00010 <span class="comment">* http://www.apache.org/licenses/LICENSE-2.0</span>
<a name="l00011"></a>00011 <span class="comment">*</span>
<a name="l00012"></a>00012 <span class="comment">* Unless required by applicable law or agreed to in writing, software</span>
<a name="l00013"></a>00013 <span class="comment">* distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span>
<a name="l00014"></a>00014 <span class="comment">* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span>
<a name="l00015"></a>00015 <span class="comment">* See the License for the specific language governing permissions and</span>
<a name="l00016"></a>00016 <span class="comment">* limitations under the License.</span>
<a name="l00017"></a>00017 <span class="comment">*</span>
<a name="l00018"></a>00018 <span class="comment">* LICENSE@@@ */</span>
<a name="l00019"></a>00019 
<a name="l00020"></a>00020 
<a name="l00021"></a>00021 
<a name="l00022"></a>00022 
<a name="l00023"></a>00023 <span class="preprocessor">#ifndef VIRTUAL_KEYBOARD_PREFERENCES_H</span>
<a name="l00024"></a>00024 <span class="preprocessor"></span><span class="preprocessor">#define VIRTUAL_KEYBOARD_PREFERENCES_H</span>
<a name="l00025"></a>00025 <span class="preprocessor"></span>
<a name="l00026"></a>00026 <span class="preprocessor">#include &lt;string&gt;</span>
<a name="l00027"></a>00027 <span class="preprocessor">#include &lt;vector&gt;</span>
<a name="l00028"></a>00028 
<a name="l00029"></a>00029 <span class="preprocessor">#include &quot;<a class="code" href="VirtualKeyboard_8h.htm">VirtualKeyboard.h</a>&quot;</span>
<a name="l00030"></a>00030 <span class="preprocessor">#include &quot;qobject.h&quot;</span>
<a name="l00031"></a>00031 
<a name="l00032"></a><a class="code" href="classVirtualKeyboardPreferences.htm">00032</a> <span class="keyword">class </span><a class="code" href="classVirtualKeyboardPreferences.htm">VirtualKeyboardPreferences</a> : <span class="keyword">public</span> <a class="code" href="classQObject.htm">QObject</a>
<a name="l00033"></a>00033 {
<a name="l00034"></a>00034         Q_OBJECT
<a name="l00035"></a>00035 
<a name="l00036"></a>00036         <span class="keyword">struct </span>SKeyboardCombo
<a name="l00037"></a>00037         {
<a name="l00038"></a>00038                 <span class="keywordtype">void</span>    clear()                                                                         { keyboardLanguage.clear(); keymap.clear(); autoCorrectLanguage.clear(); }
<a name="l00039"></a>00039                 <span class="keywordtype">void</span>    <span class="keyword">set</span>(<span class="keyword">const</span> std::string &amp; keyboardLanguage_)      { keyboardLanguage = keyboardLanguage_; keymap.clear(); autoCorrectLanguage.clear(); }
<a name="l00040"></a>00040                 <span class="keywordtype">void</span>    <span class="keyword">set</span>(<span class="keyword">const</span> std::string &amp; keyboardLanguage_, <span class="keyword">const</span> std::string &amp; autoCorrectLanguage_)
<a name="l00041"></a>00041                                                                                                                         { keyboardLanguage = keyboardLanguage_; autoCorrectLanguage = autoCorrectLanguage_; }
<a name="l00042"></a>00042                 <span class="keywordtype">void</span>    <span class="keyword">set</span>(<span class="keyword">const</span> std::string &amp; keyboardLanguage_, <span class="keyword">const</span> std::string &amp; keymap_, <span class="keyword">const</span> std::string &amp; autoCorrectLanguage_)
<a name="l00043"></a>00043                                                                                                                         { keyboardLanguage = keyboardLanguage_; keymap = keymap_; autoCorrectLanguage = autoCorrectLanguage_; }
<a name="l00044"></a>00044                 <span class="keywordtype">void</span>    setKeymap(<span class="keyword">const</span> std::string &amp; keymap_)      { keymap = keymap_; }
<a name="l00045"></a>00045 
<a name="l00046"></a>00046                 <span class="keywordtype">bool</span>    empty()<span class="keyword"> const                                                           </span>{ <span class="keywordflow">return</span> keyboardLanguage.empty() &amp;&amp; keymap.empty() &amp;&amp; autoCorrectLanguage.empty(); }
<a name="l00047"></a>00047                 <span class="keywordtype">bool</span>    operator==(SKeyboardCombo &amp; rhs)                        { <span class="keywordflow">return</span> keyboardLanguage == rhs.keyboardLanguage &amp;&amp; autoCorrectLanguage == rhs.autoCorrectLanguage; }
<a name="l00048"></a>00048                 <span class="keywordtype">bool</span>    operator==(<span class="keyword">const</span> SKeyboardCombo &amp; rhs)          { <span class="keywordflow">return</span> keyboardLanguage == rhs.keyboardLanguage &amp;&amp; autoCorrectLanguage == rhs.autoCorrectLanguage; }
<a name="l00049"></a>00049                 <span class="keywordtype">bool</span>    operator!=(SKeyboardCombo &amp; rhs)                        { <span class="keywordflow">return</span> keyboardLanguage != rhs.keyboardLanguage || autoCorrectLanguage != rhs.autoCorrectLanguage; }
<a name="l00050"></a>00050                 <span class="keywordtype">bool</span>    operator!=(<span class="keyword">const</span> SKeyboardCombo &amp; rhs)          { <span class="keywordflow">return</span> keyboardLanguage != rhs.keyboardLanguage || autoCorrectLanguage != rhs.autoCorrectLanguage; }
<a name="l00051"></a>00051 
<a name="l00052"></a>00052                 std::string keyboardLanguage;
<a name="l00053"></a>00053                 std::string     keymap;
<a name="l00054"></a>00054                 std::string autoCorrectLanguage;
<a name="l00055"></a>00055         };
<a name="l00056"></a>00056 
<a name="l00057"></a>00057 <span class="keyword">public</span> Q_SLOTS:
<a name="l00058"></a>00058 
<a name="l00059"></a>00059         <span class="keywordtype">void</span> <a class="code" href="classVirtualKeyboardPreferences.htm#a77b748e1d6ecec11520cc015ea56d055">bootFinished</a>();
<a name="l00060"></a>00060 
<a name="l00061"></a>00061 <span class="keyword">public</span>:
<a name="l00062"></a>00062         <a class="code" href="classVirtualKeyboardPreferences.htm#abe63f7678ef8dd0fe8856ea702ea87de">VirtualKeyboardPreferences</a>();
<a name="l00063"></a>00063 
<a name="l00064"></a>00064         <span class="comment">// An instance always exists, hence the reference as opposed to a pointer...</span>
<a name="l00065"></a>00065         <span class="keyword">static</span> <a class="code" href="classVirtualKeyboardPreferences.htm">VirtualKeyboardPreferences</a> &amp; <a class="code" href="classVirtualKeyboardPreferences.htm#a29562607f76cd7a21d2069109787dfab">instance</a>();
<a name="l00066"></a>00066 
<a name="l00067"></a>00067         <span class="comment">// This is the only way to get access to the virtual keyboard outside of its implementation.</span>
<a name="l00068"></a>00068         <span class="comment">// Will return NULL when it&#39;s not yet created, when in WebAppMgr, or when there is none (physical keyboard...)</span>
<a name="l00069"></a><a class="code" href="classVirtualKeyboardPreferences.htm#a42e5631fe55c5a6034c71700f94e06c0">00069</a>         <a class="code" href="classVirtualKeyboard.htm">VirtualKeyboard</a> *                       <a class="code" href="classVirtualKeyboardPreferences.htm#a42e5631fe55c5a6034c71700f94e06c0">virtualKeyboard</a>()<span class="keyword"> const                                 </span>{ <span class="keywordflow">return</span> mVirtualKeyboard; }
<a name="l00070"></a>00070 
<a name="l00071"></a>00071         <span class="keywordtype">void</span>                                            <a class="code" href="classVirtualKeyboardPreferences.htm#a6a204a29e8f89e9d61e4df79ed6360de">applyInitSettings</a>(<a class="code" href="classVirtualKeyboard.htm">VirtualKeyboard</a> * keyboard);
<a name="l00072"></a>00072 
<a name="l00073"></a>00073     <span class="keywordtype">void</span>                        <a class="code" href="classVirtualKeyboardPreferences.htm#a2d9130be2937e60eafe714eb08c58000">applyFirstUseSettings</a>();
<a name="l00074"></a>00074     <span class="keywordtype">void</span>                        <a class="code" href="classVirtualKeyboardPreferences.htm#abd221b41ea7fa1bf093163b21cc60ab8">localeChanged</a>();
<a name="l00075"></a>00075     
<a name="l00076"></a>00076         <span class="keywordtype">void</span>                                            <a class="code" href="classVirtualKeyboardPreferences.htm#a06971936c338e3f00ba72216395f1cb3">selectKeymap</a>(<span class="keyword">const</span> std::string keymap);
<a name="l00077"></a>00077         <span class="keywordtype">void</span>                                            <a class="code" href="classVirtualKeyboardPreferences.htm#aaec7ea8e9293ffe14514a957cfc09d8d">selectNextKeyboardCombo</a>();
<a name="l00078"></a>00078         <span class="keywordtype">void</span>                                            <a class="code" href="classVirtualKeyboardPreferences.htm#a8adaf4c0d6d21b1479a0f336b23939de">selectKeyboardCombo</a>(<span class="keywordtype">int</span> index);
<a name="l00079"></a>00079         <span class="keywordtype">void</span>                                            <a class="code" href="classVirtualKeyboardPreferences.htm#ac09205b09df408a5eb9c336ffeff83cd">selectLayoutCombo</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> * layoutName);
<a name="l00080"></a>00080         <span class="keywordtype">void</span>                                            <a class="code" href="classVirtualKeyboardPreferences.htm#ac5fd4e7849ed5ae5c4b230a6bf3b1f49">selectKeyboardSize</a>(<span class="keywordtype">int</span> size);   <span class="comment">// 0 is default, 1 is large, -1 small, -2 extra small...</span>
<a name="l00081"></a><a class="code" href="classVirtualKeyboardPreferences.htm#adabcb54ad9aa8c92f50fc4510ca32ebe">00081</a>         <span class="keywordtype">int</span>                                                     <a class="code" href="classVirtualKeyboardPreferences.htm#adabcb54ad9aa8c92f50fc4510ca32ebe">getKeyboardComboCount</a>()<span class="keyword"> const                   </span>{ <span class="keywordflow">return</span> mCombos.size(); }
<a name="l00082"></a><a class="code" href="classVirtualKeyboardPreferences.htm#ac557094526a0156079ce85b8beaf4a09">00082</a>         <span class="keyword">const</span> SKeyboardCombo &amp;          <a class="code" href="classVirtualKeyboardPreferences.htm#ac557094526a0156079ce85b8beaf4a09">getkeyboardCombo</a>(<span class="keywordtype">int</span> index)<span class="keyword"> const               </span>{ <span class="keywordflow">return</span> mCombos[index]; }
<a name="l00083"></a>00083 
<a name="l00084"></a>00084         SKeyboardCombo                          <a class="code" href="classVirtualKeyboardPreferences.htm#a92ee3c11ff4f6ca804e95ac7c13ffde1">getDefault</a>();
<a name="l00085"></a>00085         <span class="keywordtype">void</span>                                            <a class="code" href="classVirtualKeyboardPreferences.htm#a3e97b0464e8d2fde5ac47090f5f494e4">createDefaultKeyboards</a>();
<a name="l00086"></a>00086         <span class="keywordtype">void</span>                                            <a class="code" href="classVirtualKeyboardPreferences.htm#a4ef622c1dc806786e15994315ee241cd">clearDefaultDeyboards</a>();
<a name="l00087"></a>00087         <span class="keywordtype">void</span>                                            <a class="code" href="classVirtualKeyboardPreferences.htm#a7551a0b1111bedc9a88dd26967c8265f">setTapSounds</a>(<span class="keywordtype">bool</span> on);
<a name="l00088"></a>00088 
<a name="l00089"></a>00089         <span class="keywordtype">void</span>                                            <a class="code" href="classVirtualKeyboardPreferences.htm#a55ed7e6d0b81b65b24ed1279fca8b711">virtualKeyboardPreferencesChanged</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> * prefs);
<a name="l00090"></a>00090         <span class="keywordtype">void</span>                                            <a class="code" href="classVirtualKeyboardPreferences.htm#a4262b08cc4097640d85f03a12debd2b7">virtualKeyboardSettingsChanged</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> * settings);
<a name="l00091"></a>00091         <span class="keywordtype">void</span>                                            <a class="code" href="classVirtualKeyboardPreferences.htm#a762665e17a70880e44ba5c0d5cec11b5">virtualKeyboardSelectedKeymapsChanged</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> * selectedKeymaps);
<a name="l00092"></a>00092 
<a name="l00093"></a><a class="code" href="classVirtualKeyboardPreferences.htm#ad1397cbd5e3ce7dce4303977cc8f4e26">00093</a>         <span class="keywordtype">bool</span>                                            <a class="code" href="classVirtualKeyboardPreferences.htm#ad1397cbd5e3ce7dce4303977cc8f4e26">getTapSounds</a>()<span class="keyword"> const                                    </span>{ <span class="keywordflow">return</span> mTapSounds; }
<a name="l00094"></a><a class="code" href="classVirtualKeyboardPreferences.htm#a4d6a91560f6b95191d27ae91ae35aac1">00094</a>         <span class="keywordtype">bool</span>                                            <a class="code" href="classVirtualKeyboardPreferences.htm#a4d6a91560f6b95191d27ae91ae35aac1">getSpaces2period</a>()<span class="keyword"> const                                </span>{ <span class="keywordflow">return</span> mSpaces2period; }
<a name="l00095"></a>00095         <span class="keywordtype">void</span>                                            <a class="code" href="classVirtualKeyboardPreferences.htm#ac423a27ba33fe195d34ab401964aea8e">activateCombo</a>();
<a name="l00096"></a>00096 
<a name="l00097"></a>00097 <span class="keyword">private</span>:
<a name="l00098"></a>00098         <span class="keywordtype">void</span>                                            saveSettings();
<a name="l00099"></a>00099         <span class="keywordtype">void</span>                                            savePreferences(<span class="keyword">const</span> std::vector&lt;SKeyboardCombo&gt; &amp; combos);            <span class="comment">// normaly only ever done by the prefs app. For testing only.</span>
<a name="l00100"></a>00100 
<a name="l00101"></a>00101         <span class="keywordtype">bool</span>                                            mTapSounds;                                                     <span class="comment">// should key presses make a sound?</span>
<a name="l00102"></a>00102         <span class="keywordtype">bool</span>                                            mSpaces2period;                                         <span class="comment">// should two-spaces be converted to a period, Ã  la iPhone &amp; Blackberry?</span>
<a name="l00103"></a>00103         <span class="keywordtype">int</span>                                                     mKeyboardSize;
<a name="l00104"></a>00104 
<a name="l00105"></a>00105         <span class="keywordtype">bool</span>                                            mSettingsReceived;
<a name="l00106"></a>00106         <span class="keywordtype">bool</span>                                            mPrefsReceived;
<a name="l00107"></a>00107         <span class="keywordtype">bool</span>                                            mSelectedKeymapsReceived;
<a name="l00108"></a>00108 
<a name="l00109"></a>00109         std::vector&lt;SKeyboardCombo&gt;     mCombos;
<a name="l00110"></a>00110         SKeyboardCombo                          mActiveCombo;
<a name="l00111"></a>00111 
<a name="l00112"></a>00112         <a class="code" href="classVirtualKeyboard.htm">VirtualKeyboard</a> *                       mVirtualKeyboard;
<a name="l00113"></a>00113 };
<a name="l00114"></a>00114 
<a name="l00115"></a><a class="code" href="VirtualKeyboardPreferences_8h.htm#a32c9f9bdfbbf69f23cf619ddfb58478b">00115</a> <span class="preprocessor">#define PALM_VIRTUAL_KEYBOARD_PREFS                             &quot;x_palm_virtualkeyboard_prefs&quot;</span>
<a name="l00116"></a><a class="code" href="VirtualKeyboardPreferences_8h.htm#a75cf9cb86137e01f66d11f08b2e13d7c">00116</a> <span class="preprocessor"></span><span class="preprocessor">#define PALM_VIRTUAL_KEYBOARD_SETTINGS                  &quot;x_palm_virtualkeyboard_settings&quot;</span>
<a name="l00117"></a><a class="code" href="VirtualKeyboardPreferences_8h.htm#a54c175b2c4b2fb7882f00209666b5725">00117</a> <span class="preprocessor"></span><span class="preprocessor">#define PALM_VIRTUAL_KEYBOARD_LAYOUTS                   &quot;x_palm_virtualkeyboard_layouts&quot;</span>
<a name="l00118"></a><a class="code" href="VirtualKeyboardPreferences_8h.htm#ae6e7f8a1d8bd61ac99153bf3a3176d26">00118</a> <span class="preprocessor"></span><span class="preprocessor">#define PALM_VIRTUAL_KEYBOARD_SELECTED_KEYMAPS  &quot;x_palm_virtualkeyboard_selected_keymaps&quot;</span>
<a name="l00119"></a>00119 <span class="preprocessor"></span>
<a name="l00120"></a>00120 <span class="preprocessor">#endif // VIRTUAL_KEYBOARD_PREFERENCES_H</span>
</pre></div></div><!-- contents -->
</div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Properties</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Defines</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="VirtualKeyboardPreferences_8h.htm">VirtualKeyboardPreferences.h</a>      </li>

    <li class="footer">Generated on Fri Oct 5 2012 19:52:26 for LunaSysMgr by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.6.1 </li>
   </ul>
 </div>


</body>
</html>
