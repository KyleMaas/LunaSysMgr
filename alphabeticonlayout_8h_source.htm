<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>LunaSysMgr: alphabeticonlayout.h Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>

</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">LunaSysMgr
   
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
      <li><a href="dirs.htm"><span>Directories</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.htm"><span>File&#160;List</span></a></li>
      <li><a href="globals.htm"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('alphabeticonlayout_8h.htm','');
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">alphabeticonlayout.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="alphabeticonlayout_8h.htm">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/* @@@LICENSE</span>
<a name="l00002"></a>00002 <span class="comment">*</span>
<a name="l00003"></a>00003 <span class="comment">*      Copyright (c) 2010-2012 Hewlett-Packard Development Company, L.P.</span>
<a name="l00004"></a>00004 <span class="comment">*</span>
<a name="l00005"></a>00005 <span class="comment">* Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span>
<a name="l00006"></a>00006 <span class="comment">* you may not use this file except in compliance with the License.</span>
<a name="l00007"></a>00007 <span class="comment">* You may obtain a copy of the License at</span>
<a name="l00008"></a>00008 <span class="comment">*</span>
<a name="l00009"></a>00009 <span class="comment">* http://www.apache.org/licenses/LICENSE-2.0</span>
<a name="l00010"></a>00010 <span class="comment">*</span>
<a name="l00011"></a>00011 <span class="comment">* Unless required by applicable law or agreed to in writing, software</span>
<a name="l00012"></a>00012 <span class="comment">* distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span>
<a name="l00013"></a>00013 <span class="comment">* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span>
<a name="l00014"></a>00014 <span class="comment">* See the License for the specific language governing permissions and</span>
<a name="l00015"></a>00015 <span class="comment">* limitations under the License.</span>
<a name="l00016"></a>00016 <span class="comment">*</span>
<a name="l00017"></a>00017 <span class="comment">* LICENSE@@@ */</span>
<a name="l00018"></a>00018 
<a name="l00019"></a>00019 
<a name="l00020"></a>00020 
<a name="l00021"></a>00021 
<a name="l00022"></a>00022 <span class="preprocessor">#ifndef ALPHABETICONLAYOUT_H_</span>
<a name="l00023"></a>00023 <span class="preprocessor"></span><span class="preprocessor">#define ALPHABETICONLAYOUT_H_</span>
<a name="l00024"></a>00024 <span class="preprocessor"></span>
<a name="l00025"></a>00025 <span class="preprocessor">#include &quot;<a class="code" href="iconlayout_8h.htm">iconlayout.h</a>&quot;</span>
<a name="l00026"></a>00026 <span class="preprocessor">#include &quot;<a class="code" href="icon_8h.htm">icon.h</a>&quot;</span>
<a name="l00027"></a>00027 
<a name="l00028"></a>00028 <span class="preprocessor">#include &lt;QList&gt;</span>
<a name="l00029"></a>00029 <span class="preprocessor">#include &lt;QString&gt;</span>
<a name="l00030"></a>00030 <span class="preprocessor">#include &lt;QChar&gt;</span>
<a name="l00031"></a>00031 <span class="preprocessor">#include &lt;QDebug&gt;</span>
<a name="l00032"></a>00032 <span class="preprocessor">#include &lt;QMap&gt;</span>
<a name="l00033"></a>00033 <span class="preprocessor">#include &lt;QSet&gt;</span>
<a name="l00034"></a>00034 <span class="preprocessor">#include &lt;QPair&gt;</span>
<a name="l00035"></a>00035 
<a name="l00036"></a>00036 <span class="keyword">class </span><a class="code" href="classAlphabetIconLayout.htm">AlphabetIconLayout</a>;
<a name="l00037"></a>00037 <span class="keyword">class </span><a class="code" href="classAlphabetPage.htm">AlphabetPage</a>;
<a name="l00038"></a>00038 <span class="keyword">class </span><a class="code" href="classPixmapObject.htm">PixmapObject</a>;
<a name="l00039"></a>00039 <span class="keyword">class </span><a class="code" href="classHorizontalDivider.htm">HorizontalDivider</a>;
<a name="l00040"></a>00040 <span class="keyword">class </span><a class="code" href="classHorizontalLabeledDivider.htm">HorizontalLabeledDivider</a>;
<a name="l00041"></a>00041 <span class="keyword">class </span><a class="code" href="classIconReorderAnimation.htm">IconReorderAnimation</a>;
<a name="l00042"></a>00042 <span class="keyword">class </span><a class="code" href="classQStateMachine.htm">QStateMachine</a>;
<a name="l00043"></a>00043 <span class="keyword">class </span><a class="code" href="classQState.htm">QState</a>;
<a name="l00044"></a>00044 <span class="keyword">class </span>QAbstractAnimation;
<a name="l00045"></a>00045 <span class="keyword">class </span>QPropertyAnimation;
<a name="l00046"></a>00046 
<a name="l00047"></a><a class="code" href="classIconRowAlphaRange.htm">00047</a> <span class="keyword">class </span><a class="code" href="classIconRowAlphaRange.htm">IconRowAlphaRange</a>
<a name="l00048"></a>00048 {
<a name="l00049"></a>00049 <span class="keyword">public</span>:
<a name="l00050"></a><a class="code" href="classIconRowAlphaRange.htm#a9bd38abb1db3e32a0ba3e141d7a52f08">00050</a>         quint32 <a class="code" href="classIconRowAlphaRange.htm#a9bd38abb1db3e32a0ba3e141d7a52f08">m_startRowNum</a>;
<a name="l00051"></a><a class="code" href="classIconRowAlphaRange.htm#a1ff97e8b43d0fdd56617b70bed63eb62">00051</a>         quint32 <a class="code" href="classIconRowAlphaRange.htm#a1ff97e8b43d0fdd56617b70bed63eb62">m_endRowNum</a>;
<a name="l00052"></a>00052 };
<a name="l00053"></a><a class="code" href="classIconRowAlpha.htm">00053</a> <span class="keyword">class </span><a class="code" href="classIconRowAlpha.htm">IconRowAlpha</a> : <span class="keyword">public</span> <a class="code" href="classIconRow.htm">IconRow</a>
<a name="l00054"></a>00054 {
<a name="l00055"></a>00055 <span class="keyword">public</span>:
<a name="l00056"></a>00056         <a class="code" href="classIconRowAlpha.htm#a18833efeca89d1196caaa4717afd0036">IconRowAlpha</a>(<a class="code" href="classAlphabetIconLayout.htm">AlphabetIconLayout</a> * p_owner);
<a name="l00057"></a>00057         <a class="code" href="classIconRowAlpha.htm#a18833efeca89d1196caaa4717afd0036">IconRowAlpha</a>(<a class="code" href="classAlphabetIconLayout.htm">AlphabetIconLayout</a> * p_owner,<span class="keyword">const</span> QString&amp; alphaDesignator);
<a name="l00058"></a>00058         <a class="code" href="classIconRowAlpha.htm#a18833efeca89d1196caaa4717afd0036">IconRowAlpha</a>(<a class="code" href="classAlphabetIconLayout.htm">AlphabetIconLayout</a> * p_owner,<span class="keyword">const</span> QChar&amp; alphaDesignator);
<a name="l00059"></a>00059         <span class="keyword">virtual</span> <a class="code" href="classIconRowAlpha.htm#af82b9fb7c301af254ddee4f54814130c">~IconRowAlpha</a>();
<a name="l00060"></a>00060 
<a name="l00061"></a>00061         <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classIconRowAlpha.htm#a08c4f43f0962e4ce05f6d192785a689c">appendCell</a>(<a class="code" href="classIconCell.htm">IconCell</a> * p_cell);
<a name="l00062"></a>00062         <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classIconRowAlpha.htm#aefbec89e94417980e261e28f9bea4eee">addCell</a>(<a class="code" href="classIconCell.htm">IconCell</a> * p_cell,<span class="keyword">const</span> quint32 index);    <span class="comment">//index &gt; list size = append</span>
<a name="l00063"></a>00063         <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classIconRowAlpha.htm#a8a907fb8d0ae17306ad346e76f6c332c">appendCellAndAlignVerticallyToCell</a>(<a class="code" href="classIconCell.htm">IconCell</a> * p_cell,<span class="keyword">const</span> quint32 alignToCellIndex);
<a name="l00064"></a>00064         <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classIconRowAlpha.htm#a5738ce68f8dc1e81fe003618acb0ec7e">addCellAndAlignVerticallyToCell</a>(<a class="code" href="classIconCell.htm">IconCell</a> * p_cell,<span class="keyword">const</span> quint32 index,<span class="keyword">const</span> quint32 alignToCellIndex);
<a name="l00065"></a>00065 
<a name="l00066"></a>00066         <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classIconRowAlpha.htm#aa02f62c5f574ae943c0a94fa5ea40097">paintOffscreen</a>(<a class="code" href="classPixmapHugeObject.htm">PixmapHugeObject</a> * p_hugePmo);
<a name="l00067"></a>00067 
<a name="l00068"></a>00068         <span class="comment">//remove() is done by the IconRow base class...remove fn is the same regardless of alpha nature of this row</span>
<a name="l00069"></a>00069 
<a name="l00070"></a>00070         <span class="keyword">static</span> <span class="keywordtype">bool</span> <a class="code" href="classIconRowAlpha.htm#a94070cf751281f95d33505c8b0d89ed8">iconCellLessThan</a>(<span class="keyword">const</span> <a class="code" href="classIconCell.htm">IconCell</a> * p_a, <span class="keyword">const</span> <a class="code" href="classIconCell.htm">IconCell</a> * p_b);
<a name="l00071"></a>00071 
<a name="l00072"></a>00072         <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classIconRowAlpha.htm#a8f825ff96bb0c36107973ee0fd0da5bf" title="THIS ONE SHOULD DO A FULL RELAYOUT,.">relayout</a>(<span class="keywordtype">bool</span> force=<span class="keyword">false</span>);
<a name="l00073"></a>00073 
<a name="l00074"></a><a class="code" href="classIconRowAlpha.htm#a95e5c015776d7e0adc71fe373435709b">00074</a>         QString <a class="code" href="classIconRowAlpha.htm#a95e5c015776d7e0adc71fe373435709b">m_alphaDesignator</a>;
<a name="l00075"></a><a class="code" href="classIconRowAlpha.htm#a4c07eb3bba867290401e44a04dc57daa">00075</a>         <span class="keywordtype">bool</span> <a class="code" href="classIconRowAlpha.htm#a4c07eb3bba867290401e44a04dc57daa">m_layoutSync</a>;              <span class="comment">//true if no append/add/remove has occured since last relayout of the row and cell geoms</span>
<a name="l00076"></a>00076                                                         <span class="comment">// false if a relayout is needed due to a mod of the icon list</span>
<a name="l00077"></a>00077                                                         <span class="comment">// expected to be used by the AlphabetIconLayout class to keep track of batched mods</span>
<a name="l00078"></a>00078 
<a name="l00079"></a>00079         <span class="keyword">friend</span> QDataStream &amp; <a class="code" href="classIconRowAlpha.htm#aeb4b78a7f7e695a5b1ade3e750d9ffc9">operator&lt;&lt; </a>(QDataStream&amp; stream, <span class="keyword">const</span> <a class="code" href="classIconRowAlpha.htm">IconRowAlpha</a>&amp; s);
<a name="l00080"></a>00080         <span class="keyword">friend</span> QDataStream &amp; <a class="code" href="classIconRowAlpha.htm#a27c4f32d17b875803756c018f64d376a">operator&gt;&gt; </a>(QDataStream&amp; stream, <a class="code" href="classIconRowAlpha.htm">IconRowAlpha</a>&amp; s);
<a name="l00081"></a>00081         <span class="keyword">friend</span> QDebug <a class="code" href="classIconRowAlpha.htm#aeb4b78a7f7e695a5b1ade3e750d9ffc9">operator&lt;&lt;</a>(QDebug dbg, <span class="keyword">const</span> <a class="code" href="classIconRowAlpha.htm">IconRowAlpha</a> &amp;s);
<a name="l00082"></a>00082 };
<a name="l00083"></a>00083 
<a name="l00084"></a><a class="code" href="classAlphabetIconLayout.htm">00084</a> <span class="keyword">class </span><a class="code" href="classAlphabetIconLayout.htm">AlphabetIconLayout</a> : <span class="keyword">public</span> <a class="code" href="classIconLayout.htm">IconLayout</a>
<a name="l00085"></a>00085 {
<a name="l00086"></a>00086         Q_OBJECT
<a name="l00087"></a>00087 <span class="keyword">public</span>:
<a name="l00088"></a>00088 
<a name="l00089"></a><a class="code" href="classAlphabetIconLayout.htm#a22722dcc75adfb04fdbd6f34741b483b">00089</a>         <span class="keyword">friend</span> <span class="keyword">class </span><a class="code" href="classIconRowAlpha.htm">IconRowAlpha</a>;
<a name="l00090"></a><a class="code" href="classAlphabetIconLayout.htm#ae752b16c3c5b25a0dea55273892aaa45">00090</a>         <span class="keyword">friend</span> <span class="keyword">class </span><a class="code" href="classAlphabetPage.htm">AlphabetPage</a>;
<a name="l00091"></a>00091 
<a name="l00092"></a>00092         <a class="code" href="classAlphabetIconLayout.htm#ac42ce8d4123ee78312a508bf46e76643">AlphabetIconLayout</a>(<a class="code" href="classAlphabetPage.htm">AlphabetPage</a> * p_owner);
<a name="l00093"></a>00093         <span class="keyword">virtual</span> <a class="code" href="classAlphabetIconLayout.htm#a7652d4ee1e95d86db73056ee1ad658d3">~AlphabetIconLayout</a>();
<a name="l00094"></a>00094 
<a name="l00095"></a><a class="code" href="classAlphabetIconLayout.htm#af1b471ffb5e78e6a222ac857a61ff97a">00095</a>         QRectF <a class="code" href="classAlphabetIconLayout.htm#af1b471ffb5e78e6a222ac857a61ff97a">constGeometry</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <a class="code" href="classIconLayout.htm#a01b5aca57aa74e599242e1169a038850">m_geom</a>; }
<a name="l00096"></a>00096 
<a name="l00097"></a>00097         <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="classAlphabetIconLayout.htm#a8379178b536df9af8e35be8ce810e16d">initDefaultEmptyLayoutFullEnglishAlpha</a>(<a class="code" href="classAlphabetIconLayout.htm">AlphabetIconLayout</a>&amp; layout);
<a name="l00098"></a>00098         <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="classAlphabetIconLayout.htm#a389c2866dc265e3155a9c0fcc185b5a9">initLayoutFromSequentialIconListFullEnglishAlpha</a>(<a class="code" href="classAlphabetIconLayout.htm">AlphabetIconLayout</a>&amp; layout,
<a name="l00099"></a>00099                                                                                                 <span class="keyword">const</span> <a class="code" href="icon_8h.htm#a3f167fd98d583799fab4f721ff2d2b6f">IconList</a> iconList);
<a name="l00100"></a>00100 
<a name="l00101"></a>00101         <span class="comment">//this version disregards m_intraAlphaRowSpace and m_interAlphaRowSpace and resets them to rowSpace</span>
<a name="l00102"></a>00102         <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classAlphabetIconLayout.htm#a45abcca4919ac71e5056d82e3158dce0">setLayoutUniformRowSpacing</a>(<span class="keyword">const</span> qreal rowSpace,<span class="keyword">const</span> quint32 anchorRowNum=0);
<a name="l00103"></a>00103         <span class="comment">//variant that allows indiv. spec</span>
<a name="l00104"></a>00104         <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classAlphabetIconLayout.htm#a68c52cb54dbe81943d24545b862f2d3e">setLayoutRowSpacing</a>(<span class="keyword">const</span> qreal intraAlphaRowSpace,
<a name="l00105"></a>00105                                                                                         <span class="keyword">const</span> qreal interAlphaRowSpace,
<a name="l00106"></a>00106                                                                                         <span class="keyword">const</span> quint32 anchorRowNum=0);
<a name="l00107"></a>00107 
<a name="l00108"></a>00108         <span class="comment">//this version does it according to whatever is stored in IconLayoutSettings</span>
<a name="l00109"></a>00109         <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classAlphabetIconLayout.htm#aa4958f9fb4e3ea8913bf164ad97ed122">resetLayoutRowSpacingToDefaultSettings</a>();
<a name="l00110"></a>00110 
<a name="l00111"></a>00111         <span class="comment">//each returns a list of operations needed to move the OTHER icons around (icons already in the layout)</span>
<a name="l00112"></a>00112         <span class="keyword">virtual</span> QList&lt;IconOperation&gt; <a class="code" href="classAlphabetIconLayout.htm#aea6dd58dc52e699f3cc82edf7ef5331e">addIconAt</a>(quint32 row,quint32 column);
<a name="l00113"></a>00113         <span class="keyword">virtual</span> QList&lt;IconOperation&gt; <a class="code" href="classAlphabetIconLayout.htm#a2637e6c56fb990bd52bc30fb7e9981b1">removeIconFrom</a>(quint32 row,quint32 column);
<a name="l00114"></a>00114 
<a name="l00115"></a>00115         <span class="keyword">virtual</span> QList&lt;quint32&gt; <a class="code" href="classAlphabetIconLayout.htm#ae8676380c5da0acf54077c6b764234b2">rowListForAlpha</a>(<span class="keyword">const</span> QString&amp; alphaDesignator);
<a name="l00116"></a>00116 
<a name="l00117"></a>00117         <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classAlphabetIconLayout.htm#af35e6e780f6c62a30eec9e500e3a04c3">paint</a>(QPainter * painter);
<a name="l00118"></a>00118         <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classAlphabetIconLayout.htm#af35e6e780f6c62a30eec9e500e3a04c3">paint</a>(<span class="keyword">const</span> QPointF&amp; translate,QPainter * painter);
<a name="l00119"></a>00119         <span class="comment">//      (ScrollableObject--&gt;ScrollingLayoutRenderer--&gt;here)</span>
<a name="l00120"></a>00120         <span class="comment">//      &quot;clipping&quot;, but by only drawing from the source area specified. sourceRect guaranteed to be within</span>
<a name="l00121"></a>00121         <span class="comment">//              m_geom space</span>
<a name="l00122"></a>00122         <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classAlphabetIconLayout.htm#af35e6e780f6c62a30eec9e500e3a04c3">paint</a>(QPainter * painter, <span class="keyword">const</span> QRectF&amp; sourceRect);
<a name="l00123"></a>00123         <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classAlphabetIconLayout.htm#af35e6e780f6c62a30eec9e500e3a04c3">paint</a>(QPainter * painter, <span class="keyword">const</span> QRectF&amp; sourceRect,qint32 renderOpt);
<a name="l00124"></a>00124 
<a name="l00125"></a>00125         <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classAlphabetIconLayout.htm#a6dc4b2f2e112f4ac61ae3f805a548150">paintOffscreen</a>(QPainter * painter);
<a name="l00126"></a>00126         <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classAlphabetIconLayout.htm#a6dc4b2f2e112f4ac61ae3f805a548150">paintOffscreen</a>(<a class="code" href="classPixmapObject.htm">PixmapObject</a> * p_pmo);
<a name="l00127"></a>00127         <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classAlphabetIconLayout.htm#a6dc4b2f2e112f4ac61ae3f805a548150">paintOffscreen</a>(<a class="code" href="classPixmapHugeObject.htm">PixmapHugeObject</a> * p_hugePmo);
<a name="l00128"></a>00128 
<a name="l00129"></a>00129         <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classAlphabetIconLayout.htm#ac62485282bf6edf1a655c5779ef99388">enableAutoPaint</a>();
<a name="l00130"></a>00130         <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classAlphabetIconLayout.htm#ab07cd4801fd05a611a32162d3db7c07c">disableAutoPaint</a>();
<a name="l00131"></a>00131 
<a name="l00132"></a>00132         <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classAlphabetIconLayout.htm#aa3bcea14034a44e11ccb600a652c8382">relayout</a>(<span class="keywordtype">bool</span> force=<span class="keyword">false</span>);
<a name="l00133"></a>00133         <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classAlphabetIconLayout.htm#ae6268a54400fc88895f90bc9a03b8ee3">resizeWidth</a>(<span class="keyword">const</span> quint32 w);
<a name="l00134"></a>00134         <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classAlphabetIconLayout.htm#ad3e0f10bca28c3206b2e4d1d3424058f">setPosition</a>(<span class="keyword">const</span> QPointF&amp; pos);
<a name="l00135"></a>00135         <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classAlphabetIconLayout.htm#acc0425fb466b7f2c5a7a6cb07919af20">setUniformCellSize</a>(<span class="keyword">const</span> QSize&amp; size);
<a name="l00136"></a>00136 
<a name="l00137"></a>00137         <span class="keyword">virtual</span> <a class="code" href="classIconCell.htm">IconCell</a> * <a class="code" href="classAlphabetIconLayout.htm#a741a66b8f930babcf114bce358215834">iconCellAtLayoutCoordinate</a>(<span class="keyword">const</span> QPointF&amp; coordinate);
<a name="l00138"></a>00138         <span class="keyword">virtual</span> <a class="code" href="classIconCell.htm">IconCell</a> * <a class="code" href="classAlphabetIconLayout.htm#a741a66b8f930babcf114bce358215834">iconCellAtLayoutCoordinate</a>(<span class="keyword">const</span> QPointF&amp; layoutCoordinate,QPoint&amp; r_gridCoordinate);
<a name="l00139"></a>00139 
<a name="l00140"></a>00140         <span class="keyword">virtual</span> <a class="code" href="classIconCell.htm">IconCell</a> * <a class="code" href="classAlphabetIconLayout.htm#a2e70c6924f24910a2933143313bcf564">findIconByUid</a>(<span class="keyword">const</span> QUuid&amp; iconUid,QPoint&amp; r_gridCoordinate);
<a name="l00141"></a>00141 
<a name="l00142"></a>00142         <span class="keyword">virtual</span> qreal   <a class="code" href="classAlphabetIconLayout.htm#a1d5f57626d2f413bb0e0d9fea9b1e484">verticalDistanceToNearestUpperRow</a>(<span class="keyword">const</span> QPointF&amp; layoutCoordinate);
<a name="l00143"></a>00143         <span class="keyword">virtual</span> qreal   <a class="code" href="classAlphabetIconLayout.htm#ad274673c9de7e49dfcbc8a85f7514572">verticalDistanceToNearestLowerRow</a>(<span class="keyword">const</span> QPointF&amp; layoutCoordinate);
<a name="l00144"></a>00144 
<a name="l00145"></a>00145         <span class="keyword">virtual</span> quint32 <a class="code" href="classAlphabetIconLayout.htm#a42dc64f7431f5d02bf3ebfd044bbc2dc">maximumRowHeight</a>() <span class="keyword">const</span>;
<a name="l00146"></a>00146         <span class="keyword">virtual</span> quint32 <a class="code" href="classAlphabetIconLayout.htm#af24934e4e81a1fc1392c7471a3059751">minimumRowHeight</a>() <span class="keyword">const</span>;
<a name="l00147"></a>00147 
<a name="l00148"></a>00148         <span class="keyword">friend</span> QDataStream &amp; <a class="code" href="classAlphabetIconLayout.htm#a36a87f1ad0216cc7c7e33d0d05e133d1">operator&lt;&lt; </a>(QDataStream&amp; stream, <span class="keyword">const</span> <a class="code" href="classAlphabetIconLayout.htm">AlphabetIconLayout</a>&amp; s);
<a name="l00149"></a>00149         <span class="keyword">friend</span> QDataStream &amp; <a class="code" href="classAlphabetIconLayout.htm#a1480fb3bbf7b5903d35f43508ced05ee">operator&gt;&gt; </a>(QDataStream&amp; stream, <a class="code" href="classAlphabetIconLayout.htm">AlphabetIconLayout</a>&amp; s);
<a name="l00150"></a>00150         <span class="keyword">friend</span> QDebug <a class="code" href="classAlphabetIconLayout.htm#a36a87f1ad0216cc7c7e33d0d05e133d1">operator&lt;&lt;</a>(QDebug dbg, <span class="keyword">const</span> <a class="code" href="classAlphabetIconLayout.htm">AlphabetIconLayout</a> &amp;s);
<a name="l00151"></a>00151 
<a name="l00153"></a>00153 
<a name="l00154"></a>00154         <span class="comment">// returns false if can&#39;t track at the moment</span>
<a name="l00155"></a>00155         <span class="comment">// if return == true, then the r_iconUid param holds value1 = ORIGINAL icon uid, and value2 = COPY (floating icon; the one being</span>
<a name="l00156"></a>00156         <span class="comment">// designed so that iconCellAtLayoutCoordinate() result can be passed right in</span>
<a name="l00157"></a>00157         <span class="comment">//      (it will correctly handle null (not found) icon cell)</span>
<a name="l00158"></a>00158         <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classAlphabetIconLayout.htm#a181b5df8a399d0b078653d2cd2fee564">startTrackingIcon</a>(<span class="keyword">const</span> QPointF&amp; layoutCoordinate,QPair&lt;QUuid,QUuid&gt;&amp; r_iconUids);
<a name="l00159"></a>00159         <span class="comment">//trackedIconLeavingLayout(): used instead of stopTrackingIcon() when the icon has changed hands;</span>
<a name="l00160"></a>00160         <span class="comment">//      e.g. been moved to another page/layout</span>
<a name="l00161"></a>00161         <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classAlphabetIconLayout.htm#a4ccf83e363b08f735fe9167413a3694e">trackedIconLeavingLayout</a>(<span class="keyword">const</span> QUuid&amp; trackedIconUid);
<a name="l00162"></a>00162         <span class="comment">//stopTrackingIcon(): used when the icon has stayed in the page/layout, but just been dropped</span>
<a name="l00163"></a>00163         <span class="comment">//      by the user</span>
<a name="l00164"></a>00164         <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classAlphabetIconLayout.htm#a850d35f415cf1e8850e47fbfb9491c29">stopTrackingIcon</a>(<span class="keyword">const</span> QUuid&amp; trackedIconUid);
<a name="l00165"></a>00165         <span class="comment">//provide the TRACKED icon&#39;s uid, not the original&#39;s uid</span>
<a name="l00166"></a>00166         <span class="keyword">virtual</span> <a class="code" href="classIconBase.htm">IconBase</a> * <a class="code" href="classAlphabetIconLayout.htm#aa248276812b8d28d125c3c6f8022463d">getTrackedIcon</a>(<span class="keyword">const</span> QUuid&amp; trackedIconUid);
<a name="l00167"></a>00167 
<a name="l00168"></a>00168         <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classAlphabetIconLayout.htm#aaf499a7d84d64f41f02217f41fe1f787">stopTrackingAll</a>();
<a name="l00169"></a>00169         <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classAlphabetIconLayout.htm#a3a7c8982ebd5a590e861d1cad3d19b0f">commitTracked</a>(<span class="keyword">const</span> QUuid&amp; iconUid);
<a name="l00170"></a>00170 
<a name="l00171"></a>00171         <span class="comment">//animationForTrackedIconFinal(): create and return an animation that is made to &quot;finalize&quot; the moved icon. In the case of an alpha layout,</span>
<a name="l00172"></a>00172         <span class="comment">// this will simply make the icon disappear.</span>
<a name="l00173"></a>00173         <span class="comment">// NOTE: when the icon is actually sent to another page, than THAT page will handle its final animation,</span>
<a name="l00174"></a>00174         <span class="comment">//              so it would not be correct to create animations here that do this type of thing.</span>
<a name="l00175"></a>00175         <span class="keyword">virtual</span> QAbstractAnimation * <a class="code" href="classAlphabetIconLayout.htm#ad35dd27e3e507bdbbdf7282384077960">animationForTrackedIconFinal</a>(<span class="keyword">const</span> QUuid&amp; trackedIconUid);
<a name="l00176"></a>00176 
<a name="l00177"></a>00177         <span class="comment">//Just like stopTracking__() and commit___() operate under normal circumstances and try to let animations finish,</span>
<a name="l00178"></a>00178         <span class="comment">//cancelAllReorder() kills all animations instantly and immediately locks all icons into their final state, as if</span>
<a name="l00179"></a>00179         <span class="comment">// the normal reorders were allowed to finish. This is useful in case of some drastic UI change, like an incoming call,</span>
<a name="l00180"></a>00180         <span class="comment">// a rotation of the screen, the launcher being dismissed, apps being deleted, etc...</span>
<a name="l00181"></a>00181         <span class="comment">// the function has no return value because it cannot fail; if it fails to do anything, then a crash will likely follow</span>
<a name="l00182"></a>00182         <span class="comment">// (or at the very least, a very inconsistent, mostly unusable launcher UI state)</span>
<a name="l00183"></a>00183         <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classAlphabetIconLayout.htm#aebec2fc09ac0a1be4de55c1c7b681b60">cancelAllReorder</a>();
<a name="l00184"></a>00184         <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classAlphabetIconLayout.htm#a1098dc96422a909e0962948ca24c2697">commitTrackedImmediately</a>(<span class="keyword">const</span> QUuid&amp; iconUid);
<a name="l00185"></a>00185 
<a name="l00186"></a>00186         <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classAlphabetIconLayout.htm#a7b23fb2231b69ff35993aef893c01df4">removeIconCell</a>(<span class="keyword">const</span> QPoint&amp; gridCoordinate);
<a name="l00187"></a>00187 
<a name="l00188"></a>00188 <span class="keyword">protected</span>:
<a name="l00189"></a><a class="code" href="classAlphabetIconLayout.htm#a091f9a7a9c23448a6c7fe0b045791f34">00189</a>         <span class="keyword">typedef</span> QList&lt;IconRowAlpha *&gt; <a class="code" href="classAlphabetIconLayout.htm#a091f9a7a9c23448a6c7fe0b045791f34">IconRowAlphaList</a>;
<a name="l00190"></a><a class="code" href="classAlphabetIconLayout.htm#a7ae06432ac4bed8868fef65ae632b38a">00190</a>         <span class="keyword">typedef</span> IconRowAlphaList::const_iterator <a class="code" href="classAlphabetIconLayout.htm#a7ae06432ac4bed8868fef65ae632b38a">IconRowConstIter</a>;
<a name="l00191"></a><a class="code" href="classAlphabetIconLayout.htm#ac662532a845531d9d9006c03013b530b">00191</a>         <span class="keyword">typedef</span> IconRowAlphaList::iterator <a class="code" href="classAlphabetIconLayout.htm#ac662532a845531d9d9006c03013b530b">IconRowIter</a>;
<a name="l00192"></a><a class="code" href="classAlphabetIconLayout.htm#a25d5af327637245918c694203a08a274">00192</a>         <a class="code" href="classAlphabetIconLayout.htm#a091f9a7a9c23448a6c7fe0b045791f34">IconRowAlphaList</a> <a class="code" href="classAlphabetIconLayout.htm#a25d5af327637245918c694203a08a274">m_iconRows</a>;    <span class="comment">//always sorted in order of IconRow::m_logicalRowNumber,</span>
<a name="l00193"></a>00193                                                                                 <span class="comment">//which for the alpha layout is also alpha order</span>
<a name="l00194"></a>00194 
<a name="l00195"></a><a class="code" href="classAlphabetIconLayout.htm#ad2dd5a25bf4a25dd1b542ba455d5084e">00195</a>         <span class="keyword">typedef</span> QMap&lt;QString,HorizontalDivider *&gt; <a class="code" href="classAlphabetIconLayout.htm#ad2dd5a25bf4a25dd1b542ba455d5084e">RowDividerMap</a>;
<a name="l00196"></a><a class="code" href="classAlphabetIconLayout.htm#ad94d5cb17a8b1e941f707c82710a6a02">00196</a>         <span class="keyword">typedef</span> RowDividerMap::const_iterator <a class="code" href="classAlphabetIconLayout.htm#ad94d5cb17a8b1e941f707c82710a6a02">RowDividerMapConstIter</a>;
<a name="l00197"></a><a class="code" href="classAlphabetIconLayout.htm#aa35c0840e38b1925a455950a1ec103f5">00197</a>         <span class="keyword">typedef</span> RowDividerMap::iterator <a class="code" href="classAlphabetIconLayout.htm#aa35c0840e38b1925a455950a1ec103f5">RowDividerMapIter</a>;
<a name="l00198"></a><a class="code" href="classAlphabetIconLayout.htm#a3c1d28f6e7d59979f1f686be9ad40bfe">00198</a>         <a class="code" href="classAlphabetIconLayout.htm#ad2dd5a25bf4a25dd1b542ba455d5084e">RowDividerMap</a> <a class="code" href="classAlphabetIconLayout.htm#a3c1d28f6e7d59979f1f686be9ad40bfe">m_rowDividers</a>;
<a name="l00199"></a>00199 
<a name="l00200"></a><a class="code" href="classAlphabetIconLayout.htm#a85bee569639dceb844ba8bbb99bfb4fe">00200</a>         <span class="keywordtype">bool</span> <a class="code" href="classAlphabetIconLayout.htm#a85bee569639dceb844ba8bbb99bfb4fe">m_layoutSync</a>;                      <span class="comment">//true if no append/add/remove has occured since last relayout of the row and cell geoms</span>
<a name="l00201"></a>00201                                                                 <span class="comment">// false if a relayout is needed due to a mod of the icon list</span>
<a name="l00202"></a>00202                                                                 <span class="comment">// expected to be used by owner Page to keep track of batched mods</span>
<a name="l00203"></a>00203                                                                 <span class="comment">// (see IconRowAlpha)</span>
<a name="l00204"></a><a class="code" href="classAlphabetIconLayout.htm#ad19aaac1bfee7c7792156c52faab4937">00204</a>         quint32 <a class="code" href="classAlphabetIconLayout.htm#ad19aaac1bfee7c7792156c52faab4937">m_relayoutCount</a>;        <span class="comment">//every time relayout() is run, this gets incremented. It&#39;s used for both positioning initially,</span>
<a name="l00205"></a>00205                                                                 <span class="comment">// when no anchor row has a valid position, and also for statistics and performance monitoring</span>
<a name="l00206"></a>00206 
<a name="l00207"></a><a class="code" href="classAlphabetIconLayout.htm#a5d8008ad0ac588283a3975b1d6fb7b9b">00207</a>         <span class="keywordtype">bool</span>                                            <a class="code" href="classAlphabetIconLayout.htm#a5d8008ad0ac588283a3975b1d6fb7b9b">m_disabledPaint</a>;                <span class="comment">//keeps the layout from painting itself (see paint())</span>
<a name="l00208"></a>00208 
<a name="l00209"></a><a class="code" href="classAlphabetIconLayout.htm#a866750f0fb5ca49c6f9564a97f63fa6d">00209</a>         <span class="keywordtype">bool</span>    <a class="code" href="classAlphabetIconLayout.htm#a866750f0fb5ca49c6f9564a97f63fa6d">m_usingReorderModeGraphics</a>;
<a name="l00210"></a>00210 
<a name="l00211"></a>00211         <span class="comment">//all units here in pixels</span>
<a name="l00212"></a><a class="code" href="classAlphabetIconLayout.htm#a561c08959989bdf51370ece20ff1a2aa">00212</a>         quint32 <a class="code" href="classAlphabetIconLayout.htm#a561c08959989bdf51370ece20ff1a2aa">m_maxWidthForRows</a>;
<a name="l00213"></a><a class="code" href="classAlphabetIconLayout.htm#a18358b844846d66d65b6ffdbaf6d4149">00213</a>         quint32 <a class="code" href="classAlphabetIconLayout.htm#a18358b844846d66d65b6ffdbaf6d4149">m_maxIconsPerRow</a>;
<a name="l00214"></a><a class="code" href="classAlphabetIconLayout.htm#a9d2e71347a84e07f7da3e9de6cf3e9da">00214</a>         qint32 <a class="code" href="classAlphabetIconLayout.htm#a9d2e71347a84e07f7da3e9de6cf3e9da">m_horizIconSpacingAdjust</a>;
<a name="l00215"></a>00215 
<a name="l00216"></a>00216         <span class="comment">//      Layout adjustments - all of this comes from IconLayoutSettings</span>
<a name="l00217"></a><a class="code" href="classAlphabetIconLayout.htm#a786b8cbd08220567e47d4673ce91fa72">00217</a>         quint32 <a class="code" href="classAlphabetIconLayout.htm#a786b8cbd08220567e47d4673ce91fa72">m_leftMarginForDividers</a>;
<a name="l00218"></a><a class="code" href="classAlphabetIconLayout.htm#a8bf5d4d20020db89c2755622f1c45863">00218</a>         quint32 <a class="code" href="classAlphabetIconLayout.htm#a8bf5d4d20020db89c2755622f1c45863">m_topMarginForDividers</a>;
<a name="l00219"></a><a class="code" href="classAlphabetIconLayout.htm#aed22d4fd85497053de2f4358fcfe61d5">00219</a>         quint32 <a class="code" href="classAlphabetIconLayout.htm#aed22d4fd85497053de2f4358fcfe61d5">m_leftMarginForRows</a>;
<a name="l00220"></a><a class="code" href="classAlphabetIconLayout.htm#a79d880799ca2b1899b108c2b086ff164">00220</a>         quint32 <a class="code" href="classAlphabetIconLayout.htm#a79d880799ca2b1899b108c2b086ff164">m_topMarginForRows</a>;
<a name="l00222"></a>00222 
<a name="l00223"></a>00223 
<a name="l00224"></a><a class="code" href="classAlphabetIconLayout.htm#ad9b6e5124d77d0211d3278f4c5b6eb14">00224</a>         quint32 <a class="code" href="classAlphabetIconLayout.htm#ad9b6e5124d77d0211d3278f4c5b6eb14">m_intraAlphaRowSpace</a>;           <span class="comment">//between two rows in the same alpha designator</span>
<a name="l00225"></a><a class="code" href="classAlphabetIconLayout.htm#a2944ec9d45171e72833795832e49c985">00225</a>         quint32 <a class="code" href="classAlphabetIconLayout.htm#a2944ec9d45171e72833795832e49c985">m_interAlphaRowSpace</a>;           <span class="comment">//between two rows in adjacent alpha designators;</span>
<a name="l00226"></a>00226                                                                                 <span class="comment">//make sure to leave room for separator bar, etc</span>
<a name="l00227"></a>00227 
<a name="l00228"></a><a class="code" href="classAlphabetIconLayout.htm#aeac01e5419e5466274ab11ebf8de89d2">00228</a>         quint32 <a class="code" href="classAlphabetIconLayout.htm#aeac01e5419e5466274ab11ebf8de89d2">m_anchorRow</a>;                    <span class="comment">//the current anchor row (from which (re)layouts are performed)</span>
<a name="l00229"></a>00229 
<a name="l00230"></a><a class="code" href="classAlphabetIconLayout.htm#a89f08255cec5aa6a17d89f83c73b0ac9">00230</a>         QSize   <a class="code" href="classAlphabetIconLayout.htm#a89f08255cec5aa6a17d89f83c73b0ac9">m_iconCellSize</a>;                         <span class="comment">//calculated from page size and m_maxIconsPerRow...see initLayout...()</span>
<a name="l00231"></a><a class="code" href="classAlphabetIconLayout.htm#aab3b24fe9ae4ce81953271686a83cbc2">00231</a>         quint32 <a class="code" href="classAlphabetIconLayout.htm#aab3b24fe9ae4ce81953271686a83cbc2">m_horizIconSpacing</a>;                     <span class="comment">//(ditto)...takes into account m_horizIconSpacingAdjust;</span>
<a name="l00232"></a>00232 
<a name="l00233"></a><a class="code" href="classAlphabetIconLayout.htm#acf7a4909eb82b009efc65ffd83499a77">00233</a>         QSize   <a class="code" href="classAlphabetIconLayout.htm#acf7a4909eb82b009efc65ffd83499a77">m_layoutSizeInPixels</a>;           <span class="comment">//for rendering offscreen</span>
<a name="l00234"></a>00234 
<a name="l00235"></a><a class="code" href="classAlphabetIconLayout.htm#af3b769a1321de714748023096ca314f0">00235</a>         quint32 <a class="code" href="classAlphabetIconLayout.htm#af3b769a1321de714748023096ca314f0">m_minRowHeight</a>;
<a name="l00236"></a><a class="code" href="classAlphabetIconLayout.htm#a29fce70178f10203bd10481410cad45f">00236</a>         quint32 <a class="code" href="classAlphabetIconLayout.htm#a29fce70178f10203bd10481410cad45f">m_maxRowHeight</a>;
<a name="l00237"></a>00237 
<a name="l00238"></a>00238 <span class="keyword">protected</span>:
<a name="l00239"></a>00239 
<a name="l00240"></a>00240         <span class="comment">//disposes of the icon copy made while tracking a floating icon (&quot;reorder&quot;, &#39;cept alphalayouts don&#39;t really reorder)</span>
<a name="l00241"></a>00241         <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classAlphabetIconLayout.htm#af8646772db35fe5eb21e3fbb25f47291">destroyTrackedIcon</a>(<span class="keyword">const</span> QUuid&amp; iconUid);
<a name="l00242"></a>00242 
<a name="l00243"></a>00243         <span class="comment">//deletes all the rows (but not the cells contained) and re-inits my state variables to reflect the change</span>
<a name="l00245"></a>00245 <span class="comment"></span>        <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classAlphabetIconLayout.htm#abf8c1a93421333935e02f8f0a06303f6" title="used by relayoutExisting()">destroyAllRows</a>();
<a name="l00246"></a>00246 
<a name="l00247"></a>00247         <span class="comment">// all the icon cells, starting with the leftmost cell of the top row, and ending with the rightmost cell in the bottom row</span>
<a name="l00248"></a>00248         <span class="comment">//WARNING: DO NOT HOLD REF TO ANYTHING FROM THE RETURN OF THIS FN. It could be invalidated at any time (whenever an add/remove or relayout happens)</span>
<a name="l00249"></a>00249         <span class="keyword">virtual</span> QList&lt;IconCell *&gt; <a class="code" href="classAlphabetIconLayout.htm#a82b931518bb83f67bf6e65d3ae109a6f">iconCellsInFlowOrder</a>();
<a name="l00250"></a>00250 
<a name="l00251"></a>00251         <span class="comment">//TODO: return an error code as appropriate; calculations can fail if either the page width is too small or icon size if too great</span>
<a name="l00252"></a>00252         <span class="keyword">virtual</span> qint32 <a class="code" href="classAlphabetIconLayout.htm#af7aea7342ac0e16eef87798a62c8b04f">calculateAndSetHorizontalSpaceParameters</a>();
<a name="l00253"></a>00253 
<a name="l00254"></a>00254         <span class="comment">/*</span>
<a name="l00255"></a>00255 <span class="comment">         * when resizing the layout when it has already been done, there is a potential that rows may need to be added</span>
<a name="l00256"></a>00256 <span class="comment">         * (when the width shrinks) or rows may need to be removed (when the width expands)</span>
<a name="l00257"></a>00257 <span class="comment">         *</span>
<a name="l00258"></a>00258 <span class="comment">         * This function will handle these adds and removes. It is a counterpart to relayout(); that function is kind of a misnomer</span>
<a name="l00259"></a>00259 <span class="comment">         *      since it doesn&#39;t really RE-layout...it is more for initial layouts</span>
<a name="l00260"></a>00260 <span class="comment">         *</span>
<a name="l00261"></a>00261 <span class="comment">         *      TODO: initially, this will delete all the rows but keep the cells, and then recreate the rows, adding/removing as necessary.</span>
<a name="l00262"></a>00262 <span class="comment">         *              This can be made more efficient, but I don&#39;t have time right now, due to Demo-Demo-Demo!</span>
<a name="l00263"></a>00263 <span class="comment">         */</span>
<a name="l00264"></a>00264         <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classAlphabetIconLayout.htm#a6a1e3b63039f13d3b84f544275be1c47">relayoutExisting</a>();
<a name="l00265"></a>00265 
<a name="l00266"></a>00266         <span class="keyword">static</span> <span class="keywordtype">bool</span> <a class="code" href="classAlphabetIconLayout.htm#af38099dbabf853cca395e7f2bfca01c6">iconRowLessThan</a>(<span class="keyword">const</span> <a class="code" href="classIconRowAlpha.htm">IconRowAlpha</a> * p_a,<span class="keyword">const</span> <a class="code" href="classIconRowAlpha.htm">IconRowAlpha</a> * p_b);
<a name="l00267"></a>00267 
<a name="l00268"></a>00268         <span class="comment">/*</span>
<a name="l00269"></a>00269 <span class="comment">         * TODO:        a higher level function that does true alpha insert (see caution)</span>
<a name="l00270"></a>00270 <span class="comment">         *</span>
<a name="l00271"></a>00271 <span class="comment">         * CAUTION: not a true alphabetic insert! It only inserts into the proper alpha ROW. It will NOT re-alpha-sort the icons within the row</span>
<a name="l00272"></a>00272 <span class="comment">         *                      and more importantly, it will not swap between rows that are the same Alpha, in the case where an extra row of the same Alpha was added</span>
<a name="l00273"></a>00273 <span class="comment">         *                      because the max number of icons per row were reached in the existing ones.</span>
<a name="l00274"></a>00274 <span class="comment">         *              The way to use this function to maintain true alphabetic order within rows and between rows is to pre-alphasort a list of icons to be inserted</span>
<a name="l00275"></a>00275 <span class="comment">         *              and then call this function sequentially on the list</span>
<a name="l00276"></a>00276 <span class="comment">         *</span>
<a name="l00277"></a>00277 <span class="comment">         * Inserts the icon into the row where it alphabetically belongs.</span>
<a name="l00278"></a>00278 <span class="comment">         * This is totally different than the addIconAt function which isn&#39;t &quot;smart&quot;; this function actually</span>
<a name="l00279"></a>00279 <span class="comment">         * chooses the row and column where the icon belongs.</span>
<a name="l00280"></a>00280 <span class="comment">         * Mostly useful for initializing a layout initially. Generally NOT useful at user-visible runtime since</span>
<a name="l00281"></a>00281 <span class="comment">         * it will not calculate any of the animations needed to display the &quot;add&quot;</span>
<a name="l00282"></a>00282 <span class="comment">         *</span>
<a name="l00283"></a>00283 <span class="comment">         * Also, it will not automatically adjust the layout geoms of the icon cells. It is expected a caller</span>
<a name="l00284"></a>00284 <span class="comment">         * will be handling this.</span>
<a name="l00285"></a>00285 <span class="comment">         *</span>
<a name="l00286"></a>00286 <span class="comment">         * returns either 0 if it inserted into an existing row or took no action, or (row index)+1 if it had to insert a new row</span>
<a name="l00287"></a>00287 <span class="comment">         * this value helps the caller determine if it needs to run a relayout of rows, and possibly optimize the relayout</span>
<a name="l00288"></a>00288 <span class="comment">         * over only some rows</span>
<a name="l00289"></a>00289 <span class="comment">         *</span>
<a name="l00290"></a>00290 <span class="comment">         * It also sets the m_layoutSync variable if any layout state was modified (this disambiguates return=0)</span>
<a name="l00291"></a>00291 <span class="comment">         *</span>
<a name="l00292"></a>00292 <span class="comment">         */</span>
<a name="l00293"></a>00293         <span class="keyword">virtual</span> quint32 <a class="code" href="classAlphabetIconLayout.htm#a0e8eb0af7552a5e565a3817847ef07da">insertAlphabetically</a>(<a class="code" href="classIconBase.htm">IconBase</a> * p_icon);
<a name="l00294"></a>00294 
<a name="l00295"></a>00295         <span class="comment">//this is its counterpart, used for relayoutExisting()</span>
<a name="l00296"></a>00296         <span class="keyword">virtual</span> quint32 <a class="code" href="classAlphabetIconLayout.htm#a0e8eb0af7552a5e565a3817847ef07da">insertAlphabetically</a>(<a class="code" href="classIconCell.htm">IconCell</a> * p_cell);
<a name="l00297"></a>00297 
<a name="l00298"></a>00298         <span class="keyword">virtual</span> <a class="code" href="classHorizontalLabeledDivider.htm">HorizontalLabeledDivider</a> * <a class="code" href="classAlphabetIconLayout.htm#ad7d49eb046e094be9475030ba7993081">createNewDivider</a>(<span class="keyword">const</span> QString&amp; alphaLabel);
<a name="l00299"></a>00299         <span class="keyword">virtual</span> QSize <a class="code" href="classAlphabetIconLayout.htm#a41a76ce7881f77d2b2f4b916c547892c">horizontalDividerSize</a>();
<a name="l00300"></a>00300 
<a name="l00301"></a>00301         QPropertyAnimation * <a class="code" href="classAlphabetIconLayout.htm#ac8f35c952d4e097f53af73ae098ea319">fadeAnimationForTrackedIcon</a>(<a class="code" href="classIconBase.htm">IconBase</a> * p_icon);
<a name="l00302"></a>00302 
<a name="l00303"></a>00303 Q_SIGNALS:
<a name="l00304"></a>00304 
<a name="l00305"></a>00305         <span class="comment">//              These two signals are the overall indicators of when a reordering begins and ends.</span>
<a name="l00306"></a>00306         <span class="comment">//              reordering here means more than just &quot;reorder pending&quot; (vs moving/float icon tracking),</span>
<a name="l00307"></a>00307         <span class="comment">//              it means *overall* reorder , i.e. the state is not consistent from the POV of the outside world</span>
<a name="l00308"></a>00308         <span class="keywordtype">void</span> <a class="code" href="classAlphabetIconLayout.htm#a44b56f17479a377d999035a36180a01f">signalReorderStarted</a>();
<a name="l00309"></a>00309         <span class="keywordtype">void</span> <a class="code" href="classAlphabetIconLayout.htm#a099e4c43281667298d158986d45090a4">signalReorderEnded</a>();
<a name="l00310"></a>00310 
<a name="l00311"></a>00311         <span class="comment">//              these are for the FSM !ONLY!</span>
<a name="l00312"></a>00312         <span class="keywordtype">void</span> <a class="code" href="classAlphabetIconLayout.htm#a5350e2835a1b494bbd100606b9b70b5c">signalFSMTrackStarted_Trigger</a>();
<a name="l00313"></a>00313         <span class="keywordtype">void</span> <a class="code" href="classAlphabetIconLayout.htm#a76cf721c63da8f34dd92c86d2329c50d">signalFSMTrackEnded_Trigger</a>();
<a name="l00314"></a>00314         <span class="keywordtype">void</span> <a class="code" href="classAlphabetIconLayout.htm#a5f882e306ff84af0c60c64b49535c17b">signalFSMLastTrackEndedTrigger</a>();                  <span class="comment">//TODO:  see slotTrackForIconEnded() below</span>
<a name="l00315"></a>00315         <span class="keywordtype">void</span> <a class="code" href="classAlphabetIconLayout.htm#a4d223bfdc17bfa26a6d6f75d6a4ec04a">signalFSMReorderStarted_Trigger</a>();
<a name="l00316"></a>00316         <span class="keywordtype">void</span> <a class="code" href="classAlphabetIconLayout.htm#ae05b9467d18544b1d4f42e197d46fb33">signalFSMReorderEnded_Trigger</a>();
<a name="l00317"></a>00317 
<a name="l00318"></a>00318 <span class="keyword">protected</span> Q_SLOTS:
<a name="l00319"></a>00319 
<a name="l00320"></a>00320         <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classAlphabetIconLayout.htm#a31b312abe0e40f1917bde0c8af0029a5" title="protected Q_SLOTS:">slotTrackedIconAnimationFinished</a>();
<a name="l00321"></a>00321 
<a name="l00322"></a>00322         <span class="comment">//TODO:  TEMP: the FSM should actually count the number of in-flight trackings and switch states accordingly</span>
<a name="l00323"></a>00323         <span class="comment">//              Qt&#39;s guarded (conditional) transitions are kind of weird so i&#39;m holding off on implementing this for now</span>
<a name="l00324"></a>00324         <span class="comment">//              this function will check the number of in-flights and emit the signalFSMLastTrackEndedTrigger as appropriate</span>
<a name="l00325"></a>00325         <span class="comment">//                      I&#39;m weaving it this way with a signal-&gt;slot inside this (same) class - usually a bad idea - to minimize the</span>
<a name="l00326"></a>00326         <span class="comment">//                      changes needed when this gets done correctly</span>
<a name="l00327"></a>00327         <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classAlphabetIconLayout.htm#aa845c0a1df3c05826e509dd7d5a384ea">slotTrackForIconEnded</a>();
<a name="l00328"></a>00328 
<a name="l00329"></a>00329         <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classAlphabetIconLayout.htm#a34c5cad3eeacfd88312e7bcf2bc01929">dbg_reorderFSMStateEntered</a>();
<a name="l00330"></a>00330 
<a name="l00331"></a>00331 <span class="keyword">protected</span>:                      
<a name="l00332"></a>00332 
<a name="l00333"></a>00333         <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classAlphabetIconLayout.htm#a9ddcae802ef80e3d1233c32f8695c860">setupReorderFSM</a>();
<a name="l00334"></a>00334         <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classAlphabetIconLayout.htm#a77c774e0753025f590360147f0e69930">startReorderFSM</a>();
<a name="l00335"></a>00335         <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classAlphabetIconLayout.htm#a55a1726d7f8056abfa1f152aa36f5e4b">stopReorderFSM</a>();
<a name="l00336"></a>00336 
<a name="l00337"></a>00337         <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classAlphabetIconLayout.htm#ab72d5ee905958f56e86ff71fa42adf81">isReorderStateConsistent</a>() <span class="keyword">const</span>;
<a name="l00338"></a>00338 
<a name="l00339"></a>00339         <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classAlphabetIconLayout.htm#a4b41c42cf61966f2ca3d302cf10030c6">switchIconsToReorderGraphics</a>();
<a name="l00340"></a>00340         <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classAlphabetIconLayout.htm#abe5baed2c543df1ea2e2d99dd91c273f">switchIconsToNormalGraphics</a>();
<a name="l00341"></a>00341         <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classAlphabetIconLayout.htm#a1f4b58b9e3e58a665503a6efd743c444">switchIconToReorderGraphics</a>(<a class="code" href="classIconCell.htm">IconCell</a> * p_iconCell);
<a name="l00342"></a>00342         <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classAlphabetIconLayout.htm#a883408bc897ad5ff3c6e7cd7c69e724c">switchIconToNormalGraphics</a>(<a class="code" href="classIconCell.htm">IconCell</a> * p_iconCell);
<a name="l00343"></a>00343         <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classAlphabetIconLayout.htm#a1f4b58b9e3e58a665503a6efd743c444">switchIconToReorderGraphics</a>(<a class="code" href="classIconBase.htm">IconBase</a> * p_icon);
<a name="l00344"></a>00344         <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classAlphabetIconLayout.htm#a883408bc897ad5ff3c6e7cd7c69e724c">switchIconToNormalGraphics</a>(<a class="code" href="classIconBase.htm">IconBase</a> * p_icon);
<a name="l00345"></a>00345 
<a name="l00346"></a>00346 <span class="keyword">protected</span>:
<a name="l00347"></a>00347 
<a name="l00348"></a><a class="code" href="classAlphabetIconLayout.htm#abe7b81a9cfd7f1a66d744561453534a7">00348</a>         quint32 <a class="code" href="classAlphabetIconLayout.htm#abe7b81a9cfd7f1a66d744561453534a7">m_reorderEventSampleRate</a>;       <span class="comment">//determines when to check a moving icon against the layout to see what</span>
<a name="l00349"></a>00349                                                                                 <span class="comment">// if anything, needs to be reordered. For now, it will count instances</span>
<a name="l00350"></a>00350                                                                                 <span class="comment">// of &quot;move&quot; events (e.g. mouseMove) but I&#39;ll add other ways to threshold</span>
<a name="l00351"></a>00351                                                                                 <span class="comment">// This is useful because checking boundaries on icons and rows in very large</span>
<a name="l00352"></a>00352                                                                                 <span class="comment">// layouts could be expensive, as is generating operation lists and animations</span>
<a name="l00353"></a>00353 
<a name="l00354"></a><a class="code" href="classAlphabetIconLayout.htm#a65daf866581a7aba157bea687b62c425">00354</a>         <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">char</span> *     <a class="code" href="classAlphabetIconLayout.htm#a65daf866581a7aba157bea687b62c425">TrackedAnimationPropertyName_iconUid</a>;
<a name="l00355"></a><a class="code" href="classAlphabetIconLayout.htm#a243294a520df0ff4acfefe747e4a74c6">00355</a>         QMap&lt;QUuid,QPointer&lt;QAbstractAnimation&gt; &gt; <a class="code" href="classAlphabetIconLayout.htm#a243294a520df0ff4acfefe747e4a74c6">m_trackedIconAnimations</a>;      <span class="comment">//key = the icon being animated, which is the COPY in this case</span>
<a name="l00356"></a><a class="code" href="classAlphabetIconLayout.htm#acecfe41a6839ab9ccd9366fcb592f86a">00356</a>         QMap&lt;QUuid,QPointer&lt;IconBase&gt; &gt; <a class="code" href="classAlphabetIconLayout.htm#acecfe41a6839ab9ccd9366fcb592f86a">m_trackedIcons</a>;                 <span class="comment">//key = uid of the COPY of the icon on the layout that was &quot;picked up&quot;</span>
<a name="l00357"></a>00357                                                                                                 <span class="comment">// value = the COPY that&#39;s being moved around</span>
<a name="l00358"></a>00358         <span class="comment">//The map of the icon back to the ORIGINAL icon on the layout is not needed, because the icon heap holds all</span>
<a name="l00359"></a>00359         <span class="comment">//this info already - IconHeap::getIconEx() will get this info in the attributes.  Use the copy hint for slightly faster access</span>
<a name="l00360"></a>00360         <span class="comment">// TODO: MAJOR-MOD-WARNING: if the icon heap is no longer holding ALL of the icon refs for the system and pages and layouts are allowed</span>
<a name="l00361"></a>00361         <span class="comment">//              to have their own icon copies, then this has to change</span>
<a name="l00362"></a>00362 
<a name="l00363"></a>00363 
<a name="l00364"></a><a class="code" href="classAlphabetIconLayout.htm#afa1c7121ae9a5f7958e398493e493f6a">00364</a>         <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">char</span> * <a class="code" href="classAlphabetIconLayout.htm#afa1c7121ae9a5f7958e398493e493f6a">ReorderFSMPropertyName_isConsistent</a>;
<a name="l00365"></a>00365 
<a name="l00366"></a><a class="code" href="classAlphabetIconLayout.htm#aa00a0deedc2e3521205099fc530b23cf">00366</a>         <a class="code" href="classQStateMachine.htm">QStateMachine</a> * <a class="code" href="classAlphabetIconLayout.htm#aa00a0deedc2e3521205099fc530b23cf">m_p_reorderFSM</a>;
<a name="l00367"></a><a class="code" href="classAlphabetIconLayout.htm#a4cc47724fe4e709297dec127c6bc4d64">00367</a>         <a class="code" href="classQState.htm">QState</a> * <a class="code" href="classAlphabetIconLayout.htm#a4cc47724fe4e709297dec127c6bc4d64">m_p_fsmStateConsistent</a>;
<a name="l00368"></a><a class="code" href="classAlphabetIconLayout.htm#acb5972298ac490f9a7be20562dd18b20">00368</a>         <a class="code" href="classQState.htm">QState</a> * <a class="code" href="classAlphabetIconLayout.htm#acb5972298ac490f9a7be20562dd18b20">m_p_fsmStateTrackedFloating</a>;
<a name="l00369"></a>00369 };
<a name="l00370"></a>00370 
<a name="l00371"></a>00371 QDataStream &amp; <a class="code" href="CardWindow_8cpp.htm#a96af481eae4e878cd6d37832d12640ae">operator&lt;&lt; </a>(QDataStream&amp; stream, <span class="keyword">const</span> <a class="code" href="classIconRowAlpha.htm">IconRowAlpha</a>&amp; s);
<a name="l00372"></a>00372 QDataStream &amp; <a class="code" href="alphabeticonlayout_8cpp.htm#a27c4f32d17b875803756c018f64d376a">operator&gt;&gt; </a>(QDataStream&amp; stream, <a class="code" href="classIconRowAlpha.htm">IconRowAlpha</a>&amp; s);
<a name="l00373"></a>00373 QDataStream &amp; <a class="code" href="CardWindow_8cpp.htm#a96af481eae4e878cd6d37832d12640ae">operator&lt;&lt; </a>(QDataStream&amp; stream, <span class="keyword">const</span> <a class="code" href="classAlphabetIconLayout.htm">AlphabetIconLayout</a>&amp; s);
<a name="l00374"></a>00374 QDataStream &amp; <a class="code" href="alphabeticonlayout_8cpp.htm#a27c4f32d17b875803756c018f64d376a">operator&gt;&gt; </a>(QDataStream&amp; stream, <a class="code" href="classAlphabetIconLayout.htm">AlphabetIconLayout</a>&amp; s);
<a name="l00375"></a>00375 QDebug <a class="code" href="CardWindow_8cpp.htm#a96af481eae4e878cd6d37832d12640ae">operator&lt;&lt;</a>(QDebug dbg, <span class="keyword">const</span> <a class="code" href="classIconRowAlpha.htm">IconRowAlpha</a> &amp;c);
<a name="l00376"></a>00376 QDebug <a class="code" href="CardWindow_8cpp.htm#a96af481eae4e878cd6d37832d12640ae">operator&lt;&lt;</a>(QDebug dbg, <span class="keyword">const</span> <a class="code" href="classAlphabetIconLayout.htm">AlphabetIconLayout</a> &amp;s);
<a name="l00377"></a>00377 
<a name="l00378"></a>00378 <span class="preprocessor">#endif </span><span class="comment">/* ALPHABETICONLAYOUT_H_ */</span>
</pre></div></div><!-- contents -->
</div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Properties</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Defines</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="alphabeticonlayout_8h.htm">alphabeticonlayout.h</a>      </li>

    <li class="footer">Generated on Fri Oct 5 2012 19:52:25 for LunaSysMgr by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.6.1 </li>
   </ul>
 </div>


</body>
</html>
