<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>LunaSysMgr: StatusBarServicesConnector.h Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>

</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">LunaSysMgr
   
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
      <li><a href="dirs.htm"><span>Directories</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.htm"><span>File&#160;List</span></a></li>
      <li><a href="globals.htm"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('StatusBarServicesConnector_8h.htm','');
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">StatusBarServicesConnector.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="StatusBarServicesConnector_8h.htm">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/* @@@LICENSE</span>
<a name="l00002"></a>00002 <span class="comment">*</span>
<a name="l00003"></a>00003 <span class="comment">*      Copyright (c) 2010-2012 Hewlett-Packard Development Company, L.P.</span>
<a name="l00004"></a>00004 <span class="comment">*</span>
<a name="l00005"></a>00005 <span class="comment">* Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span>
<a name="l00006"></a>00006 <span class="comment">* you may not use this file except in compliance with the License.</span>
<a name="l00007"></a>00007 <span class="comment">* You may obtain a copy of the License at</span>
<a name="l00008"></a>00008 <span class="comment">*</span>
<a name="l00009"></a>00009 <span class="comment">* http://www.apache.org/licenses/LICENSE-2.0</span>
<a name="l00010"></a>00010 <span class="comment">*</span>
<a name="l00011"></a>00011 <span class="comment">* Unless required by applicable law or agreed to in writing, software</span>
<a name="l00012"></a>00012 <span class="comment">* distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span>
<a name="l00013"></a>00013 <span class="comment">* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span>
<a name="l00014"></a>00014 <span class="comment">* See the License for the specific language governing permissions and</span>
<a name="l00015"></a>00015 <span class="comment">* limitations under the License.</span>
<a name="l00016"></a>00016 <span class="comment">*</span>
<a name="l00017"></a>00017 <span class="comment">* LICENSE@@@ */</span>
<a name="l00018"></a>00018 
<a name="l00019"></a>00019 
<a name="l00020"></a>00020 
<a name="l00021"></a>00021 
<a name="l00022"></a>00022 <span class="preprocessor">#ifndef STATUSBARSERVICESCONNECTOR_H</span>
<a name="l00023"></a>00023 <span class="preprocessor"></span><span class="preprocessor">#define STATUSBARSERVICESCONNECTOR_H</span>
<a name="l00024"></a>00024 <span class="preprocessor"></span>
<a name="l00025"></a>00025 
<a name="l00026"></a>00026 <span class="preprocessor">#include &lt;QObject&gt;</span>
<a name="l00027"></a>00027 <span class="preprocessor">#include &lt;lunaservice.h&gt;</span>
<a name="l00028"></a>00028 <span class="preprocessor">#include &lt;set&gt;</span>
<a name="l00029"></a>00029 
<a name="l00030"></a>00030 <span class="preprocessor">#include &quot;<a class="code" href="StatusBar_8h.htm">StatusBar.h</a>&quot;</span>
<a name="l00031"></a>00031 
<a name="l00032"></a>00032 <span class="keyword">struct </span>json_object;
<a name="l00033"></a>00033 
<a name="l00034"></a>00034 
<a name="l00035"></a><a class="code" href="structWifiAccessPoint.htm">00035</a> <span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="structWifiAccessPoint.htm">WifiAccessPoint</a> {
<a name="l00036"></a><a class="code" href="structWifiAccessPoint.htm#af8356ffa808edf4fd015f261a480cb14">00036</a>         <span class="keywordtype">char</span> <a class="code" href="structWifiAccessPoint.htm#af8356ffa808edf4fd015f261a480cb14">ssid</a>[40];
<a name="l00037"></a><a class="code" href="structWifiAccessPoint.htm#a760a1f7d76ccb76c3173fdc93be26aa7">00037</a>         <span class="keywordtype">int</span>      <a class="code" href="structWifiAccessPoint.htm#a760a1f7d76ccb76c3173fdc93be26aa7">profileId</a>;
<a name="l00038"></a><a class="code" href="structWifiAccessPoint.htm#a660e757b2b6b883d5ccba6a4d802a66f">00038</a>         <span class="keywordtype">int</span>  <a class="code" href="structWifiAccessPoint.htm#a660e757b2b6b883d5ccba6a4d802a66f">signalBars</a>;
<a name="l00039"></a><a class="code" href="structWifiAccessPoint.htm#a11b3d5a2c38d93dbff7ffd7f11e93161">00039</a>         <span class="keywordtype">char</span> <a class="code" href="structWifiAccessPoint.htm#a11b3d5a2c38d93dbff7ffd7f11e93161">securityType</a>[20];
<a name="l00040"></a><a class="code" href="structWifiAccessPoint.htm#a18157dd5812671d40feb1c4eaa4c1b46">00040</a>         <span class="keywordtype">bool</span> <a class="code" href="structWifiAccessPoint.htm#a18157dd5812671d40feb1c4eaa4c1b46">connected</a>;
<a name="l00041"></a><a class="code" href="structWifiAccessPoint.htm#a96f65f61591654ebdd3ec3191363e22f">00041</a>         <span class="keywordtype">char</span> <a class="code" href="structWifiAccessPoint.htm#a96f65f61591654ebdd3ec3191363e22f">connectionState</a>[20];
<a name="l00042"></a>00042 } <a class="code" href="StatusBarServicesConnector_8h.htm#af2ad0144d1d0b94b1d59b6fea40e309b">t_wifiAccessPoint</a>;
<a name="l00043"></a>00043 
<a name="l00044"></a><a class="code" href="structBluetoothDevice.htm">00044</a> <span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="structBluetoothDevice.htm">BluetoothDevice</a> {
<a name="l00045"></a><a class="code" href="structBluetoothDevice.htm#a4bb1563b4113dca7858d55bc5e5f6053">00045</a>         <span class="keywordtype">char</span> <a class="code" href="structBluetoothDevice.htm#a4bb1563b4113dca7858d55bc5e5f6053">displayName</a>[80];
<a name="l00046"></a><a class="code" href="structBluetoothDevice.htm#a350eaabde46d7320b287927cbe678422">00046</a>         <span class="keywordtype">char</span> <a class="code" href="structBluetoothDevice.htm#a350eaabde46d7320b287927cbe678422">connectionState</a>[20];
<a name="l00047"></a><a class="code" href="structBluetoothDevice.htm#ac96b59e34e9886ee946827798cf0465a">00047</a>         <span class="keywordtype">char</span> <a class="code" href="structBluetoothDevice.htm#ac96b59e34e9886ee946827798cf0465a">btAddress</a>[20];
<a name="l00048"></a><a class="code" href="structBluetoothDevice.htm#a20ffbb588467400d5e974143d7885b65">00048</a>         <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="structBluetoothDevice.htm#a20ffbb588467400d5e974143d7885b65">cod</a>;
<a name="l00049"></a><a class="code" href="structBluetoothDevice.htm#a31d6f764d92b594f6a3f348f60c1d4e5">00049</a>         <span class="keywordtype">bool</span> <a class="code" href="structBluetoothDevice.htm#a31d6f764d92b594f6a3f348f60c1d4e5">showConnected</a>;
<a name="l00050"></a>00050 } <a class="code" href="StatusBarServicesConnector_8h.htm#aee07751b6dbae9d16a8fb8ed0b70ba29">t_bluetoothDevice</a>;
<a name="l00051"></a>00051 
<a name="l00052"></a><a class="code" href="structVpnProfile.htm">00052</a> <span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="structVpnProfile.htm">VpnProfile</a> {
<a name="l00053"></a><a class="code" href="structVpnProfile.htm#a134b84e7b35cc44659986b0b0654050b">00053</a>         <span class="keywordtype">char</span> <a class="code" href="structVpnProfile.htm#a134b84e7b35cc44659986b0b0654050b">displayName</a>[80];
<a name="l00054"></a><a class="code" href="structVpnProfile.htm#a786eed8451a70bbbbbd125ae0cfd351d">00054</a>         <span class="keywordtype">char</span> <a class="code" href="structVpnProfile.htm#a786eed8451a70bbbbbd125ae0cfd351d">connectionState</a>[20];
<a name="l00055"></a><a class="code" href="structVpnProfile.htm#a7c6bfca2e149be53fd943157f3135584">00055</a>         <span class="keywordtype">char</span> <a class="code" href="structVpnProfile.htm#a7c6bfca2e149be53fd943157f3135584">profInfo</a>[255];
<a name="l00056"></a>00056 } <a class="code" href="StatusBarServicesConnector_8h.htm#aa72d869a269ddf3a38357b9d25d8cb77">t_vpnProfile</a>;
<a name="l00057"></a>00057 
<a name="l00058"></a><a class="code" href="StatusBarServicesConnector_8h.htm#a8bf7bc59f2fe9597bd2552e2cf783996">00058</a> <span class="keyword">typedef</span> <span class="keyword">enum</span> <a class="code" href="StatusBarServicesConnector_8h.htm#a8bf7bc59f2fe9597bd2552e2cf783996">RadioState</a> {
<a name="l00059"></a><a class="code" href="StatusBarServicesConnector_8h.htm#a8bf7bc59f2fe9597bd2552e2cf783996a43930566f7d6389644c3178d502c28e9">00059</a>         <a class="code" href="StatusBarServicesConnector_8h.htm#a8bf7bc59f2fe9597bd2552e2cf783996a43930566f7d6389644c3178d502c28e9">RADIO_OFF</a>         = 0,
<a name="l00060"></a><a class="code" href="StatusBarServicesConnector_8h.htm#a8bf7bc59f2fe9597bd2552e2cf783996a1573b8f13ee463ab5ff327e942b68644">00060</a>         <a class="code" href="StatusBarServicesConnector_8h.htm#a8bf7bc59f2fe9597bd2552e2cf783996a1573b8f13ee463ab5ff327e942b68644">RADIO_TURNING_ON</a>  = 1,
<a name="l00061"></a><a class="code" href="StatusBarServicesConnector_8h.htm#a8bf7bc59f2fe9597bd2552e2cf783996ad5feb1827540858e840e465a00fecb98">00061</a>         <a class="code" href="StatusBarServicesConnector_8h.htm#a8bf7bc59f2fe9597bd2552e2cf783996ad5feb1827540858e840e465a00fecb98">RADIO_TURNING_OFF</a> = 2,
<a name="l00062"></a><a class="code" href="StatusBarServicesConnector_8h.htm#a8bf7bc59f2fe9597bd2552e2cf783996a5b518ce76b1c5d7fb5ce9860dcec1f12">00062</a>         <a class="code" href="StatusBarServicesConnector_8h.htm#a8bf7bc59f2fe9597bd2552e2cf783996a5b518ce76b1c5d7fb5ce9860dcec1f12">RADIO_ON</a>          = 3
<a name="l00063"></a>00063 } <a class="code" href="StatusBarServicesConnector_8h.htm#a247efe55f2f699bf0e4c9fd795529f2e">t_radioState</a>;
<a name="l00064"></a>00064 
<a name="l00065"></a><a class="code" href="StatusBarServicesConnector_8h.htm#ad8038f7e32ffb298b031c6903e9bfaa0">00065</a> <span class="keyword">typedef</span> <span class="keyword">enum</span> <a class="code" href="StatusBarServicesConnector_8h.htm#ad8038f7e32ffb298b031c6903e9bfaa0">AirplaneModeState</a> {
<a name="l00066"></a><a class="code" href="StatusBarServicesConnector_8h.htm#ad8038f7e32ffb298b031c6903e9bfaa0ab8c3805b78e179dae86b63c47b40efba">00066</a>         <a class="code" href="StatusBarServicesConnector_8h.htm#ad8038f7e32ffb298b031c6903e9bfaa0ab8c3805b78e179dae86b63c47b40efba">AirplaneModeOff</a>          = 0,
<a name="l00067"></a><a class="code" href="StatusBarServicesConnector_8h.htm#ad8038f7e32ffb298b031c6903e9bfaa0ac7922dfd9c060857f527cc1d85af2468">00067</a>         <a class="code" href="StatusBarServicesConnector_8h.htm#ad8038f7e32ffb298b031c6903e9bfaa0ac7922dfd9c060857f527cc1d85af2468">AirplaneModeTurningOn</a>    = 1,
<a name="l00068"></a><a class="code" href="StatusBarServicesConnector_8h.htm#ad8038f7e32ffb298b031c6903e9bfaa0ace44866c356e2ed724abcf04fe67e0fb">00068</a>         <a class="code" href="StatusBarServicesConnector_8h.htm#ad8038f7e32ffb298b031c6903e9bfaa0ace44866c356e2ed724abcf04fe67e0fb">AirplaneModeTurningOff</a>   = 2,
<a name="l00069"></a><a class="code" href="StatusBarServicesConnector_8h.htm#ad8038f7e32ffb298b031c6903e9bfaa0ace0bafea0ed6c06699b75e127ec9b4ba">00069</a>         <a class="code" href="StatusBarServicesConnector_8h.htm#ad8038f7e32ffb298b031c6903e9bfaa0ace0bafea0ed6c06699b75e127ec9b4ba">AirplaneModeOn</a>           = 3
<a name="l00070"></a>00070 } <a class="code" href="StatusBarServicesConnector_8h.htm#ad27bf47efee99cea4a7e5620b4223467">t_airplaneModeState</a>;
<a name="l00071"></a>00071 
<a name="l00072"></a><a class="code" href="StatusBarServicesConnector_8h.htm#aabfb5a3e4143872e7c546c86970601ba">00072</a> <span class="keyword">typedef</span> <span class="keyword">enum</span> <a class="code" href="StatusBarServicesConnector_8h.htm#aabfb5a3e4143872e7c546c86970601ba">PhoneType</a> {
<a name="l00073"></a><a class="code" href="StatusBarServicesConnector_8h.htm#aabfb5a3e4143872e7c546c86970601baa4a170251a41a08e2bb603604822a3a01">00073</a>         <a class="code" href="StatusBarServicesConnector_8h.htm#aabfb5a3e4143872e7c546c86970601baa4a170251a41a08e2bb603604822a3a01">PHONE_TYPE_UNKNOWN</a>  = 0,
<a name="l00074"></a><a class="code" href="StatusBarServicesConnector_8h.htm#aabfb5a3e4143872e7c546c86970601baac3b7a7ed9aa9956d10094dfdb54c1247">00074</a>         <a class="code" href="StatusBarServicesConnector_8h.htm#aabfb5a3e4143872e7c546c86970601baac3b7a7ed9aa9956d10094dfdb54c1247">PHONE_TYPE_GSM</a>,
<a name="l00075"></a><a class="code" href="StatusBarServicesConnector_8h.htm#aabfb5a3e4143872e7c546c86970601baaf76140304440acfb98638f0fe0e4876b">00075</a>         <a class="code" href="StatusBarServicesConnector_8h.htm#aabfb5a3e4143872e7c546c86970601baaf76140304440acfb98638f0fe0e4876b">PHONE_TYPE_CDMA</a>,
<a name="l00076"></a><a class="code" href="StatusBarServicesConnector_8h.htm#aabfb5a3e4143872e7c546c86970601baabd737614fd0cc650f77a7aef7740e8e6">00076</a>         <a class="code" href="StatusBarServicesConnector_8h.htm#aabfb5a3e4143872e7c546c86970601baabd737614fd0cc650f77a7aef7740e8e6">PHONE_TYPE_NONE</a>
<a name="l00077"></a>00077 } <a class="code" href="StatusBarServicesConnector_8h.htm#ab296c67f8dc0ea6d8680548a92e23e11">t_phoneType</a>;
<a name="l00078"></a>00078 
<a name="l00079"></a>00079 
<a name="l00080"></a><a class="code" href="classStatusBarServicesConnector.htm">00080</a> <span class="keyword">class </span><a class="code" href="classStatusBarServicesConnector.htm">StatusBarServicesConnector</a> : <span class="keyword">public</span> <a class="code" href="classQObject.htm">QObject</a>
<a name="l00081"></a>00081 {
<a name="l00082"></a>00082         Q_OBJECT
<a name="l00083"></a>00083 
<a name="l00084"></a>00084 <span class="keyword">public</span>:
<a name="l00085"></a>00085         <span class="keyword">static</span> <a class="code" href="classStatusBarServicesConnector.htm">StatusBarServicesConnector</a>* <a class="code" href="classStatusBarServicesConnector.htm#aaf0b274d33f881bd4e7868f209b2def3">instance</a>();
<a name="l00086"></a>00086 
<a name="l00087"></a>00087         <a class="code" href="classStatusBarServicesConnector.htm#a05625038bcbd42c9d31af22aa1724df5">~StatusBarServicesConnector</a>();
<a name="l00088"></a>00088 
<a name="l00089"></a>00089         <span class="keywordtype">void</span> <a class="code" href="classStatusBarServicesConnector.htm#a2f2c3cf398abb7b711759428eae6f254">requestWifiAvailableNetworksList</a>();
<a name="l00090"></a>00090         <span class="keywordtype">void</span> <a class="code" href="classStatusBarServicesConnector.htm#a640bf7b4b62fa3e143db5c14af6125b8">cancelWifiNetworksListRequest</a>();
<a name="l00091"></a>00091         <span class="keywordtype">void</span> <a class="code" href="classStatusBarServicesConnector.htm#afdee8a547e860fa8438f27d8f297ef0e">connectToWifiNetwork</a>(std::string ssid, <span class="keywordtype">int</span> profileId, std::string security);
<a name="l00092"></a>00092         <span class="keywordtype">void</span> <a class="code" href="classStatusBarServicesConnector.htm#a995293a9a59aabc920abd82fcc1fc8ba">setWifiOnState</a>(<span class="keywordtype">bool</span> on);
<a name="l00093"></a>00093         <span class="keywordtype">void</span> <a class="code" href="classStatusBarServicesConnector.htm#a4f44c3ca6053ac4cc6906af47b2e8733">setBluetoothOnState</a>(<span class="keywordtype">bool</span> on);
<a name="l00094"></a>00094         <span class="keywordtype">void</span> <a class="code" href="classStatusBarServicesConnector.htm#ab1caf2761d2cca92616b1ead15f7a185">requestTrustedBluetoothDevicesList</a>();
<a name="l00095"></a>00095         <span class="keywordtype">void</span> <a class="code" href="classStatusBarServicesConnector.htm#a7635f7bf1d23ae890635734e0e45d7a7">cancelBluetoothDevicesListRequest</a>();
<a name="l00096"></a>00096         <span class="keywordtype">void</span> <a class="code" href="classStatusBarServicesConnector.htm#a9d48acb2cdaba08590c962ac75a4a96b">requestBluetoothNumProfiles</a>();
<a name="l00097"></a>00097         <span class="keywordtype">void</span> <a class="code" href="classStatusBarServicesConnector.htm#aad6183e05217ae409611d77670d41d9c">bluetoothProfileConnect</a>(std::string profile, std::string address);
<a name="l00098"></a>00098         <span class="keywordtype">void</span> <a class="code" href="classStatusBarServicesConnector.htm#af56c79ebecb9b671042de13a8e1f9694">bluetoothProfileDisconnect</a>(std::string profile, std::string address);
<a name="l00099"></a>00099         <span class="keywordtype">bool</span> <a class="code" href="classStatusBarServicesConnector.htm#ac8b1e06f1a749ae20f5ce0ead77ef544">isDeviceConnectedOnMenuProfiles</a>(std::string address);
<a name="l00100"></a>00100         <span class="keywordtype">void</span> <a class="code" href="classStatusBarServicesConnector.htm#a1d323011e0a80e758b24105f854d8ea6">disconnectAllBtMenuProfiles</a>(std::string address);
<a name="l00101"></a>00101         <span class="keywordtype">bool</span> <a class="code" href="classStatusBarServicesConnector.htm#af6c7c7b1bb234df8899a6a0b0edd21e1">isDeviceConnected</a>(std::string address);
<a name="l00102"></a>00102         <span class="keywordtype">void</span> <a class="code" href="classStatusBarServicesConnector.htm#a79a368df98400f1cf9063b634a49c571">vpnConnectionRequest</a>(<span class="keywordtype">bool</span> connect, std::string profileInfo);
<a name="l00103"></a>00103         <span class="keywordtype">void</span> <a class="code" href="classStatusBarServicesConnector.htm#a66d2e24c23efb8862320303b4cef2d3f">requestVpnProfilesList</a>();
<a name="l00104"></a>00104 
<a name="l00105"></a><a class="code" href="classStatusBarServicesConnector.htm#ae0c104271edd160caf07e310054dcc00">00105</a>         <a class="code" href="StatusBarServicesConnector_8h.htm#ab296c67f8dc0ea6d8680548a92e23e11">t_phoneType</a> <a class="code" href="classStatusBarServicesConnector.htm#ae0c104271edd160caf07e310054dcc00">getPhoneType</a>() { <span class="keywordflow">return</span> m_phoneType; }
<a name="l00106"></a>00106 
<a name="l00107"></a>00107 <span class="keyword">private</span>:
<a name="l00108"></a>00108 
<a name="l00109"></a>00109         <span class="keywordtype">void</span> setDemoBuild(<span class="keywordtype">bool</span> demo);
<a name="l00110"></a>00110         <span class="keywordtype">void</span> requestNetworkAndSignalStatus();
<a name="l00111"></a>00111         <span class="keywordtype">void</span> handleTILDisconnected();
<a name="l00112"></a>00112         <span class="keywordtype">void</span> setAirplaneMode(<span class="keywordtype">bool</span> on);
<a name="l00113"></a>00113         <span class="keywordtype">void</span> setRadioStatesForMSMMode(<span class="keywordtype">bool</span> on);
<a name="l00114"></a>00114         <span class="keywordtype">void</span> setTelephonyPowerState(<span class="keywordtype">bool</span> on, <span class="keywordtype">bool</span> saveState, <span class="keywordtype">bool</span> msmMode = <span class="keyword">false</span>);
<a name="l00115"></a>00115         <span class="keywordtype">void</span> updateAirplaneModeProgress(<span class="keywordtype">int</span> radio);
<a name="l00116"></a>00116 
<a name="l00117"></a>00117         <span class="keyword">static</span> <span class="keywordtype">bool</span> statusBarStorageMSMEntryCallback(LSHandle* handle, LSMessage* message, <span class="keywordtype">void</span>* ctxt);
<a name="l00118"></a>00118         <span class="keyword">static</span> <span class="keywordtype">bool</span> statusBarStorageMSMProgressCallback(LSHandle* handle, LSMessage* message, <span class="keywordtype">void</span>* ctxt);
<a name="l00119"></a>00119         <span class="keyword">static</span> <span class="keywordtype">bool</span> statusBarPowerdServiceUpCallback(LSHandle* handle, LSMessage* message, <span class="keywordtype">void</span>* ctxt);
<a name="l00120"></a>00120         <span class="keyword">static</span> <span class="keywordtype">bool</span> statusBarPowerdBatteryEventsCallback(LSHandle* handle, LSMessage* message, <span class="keywordtype">void</span>* ctxt);
<a name="l00121"></a>00121         <span class="keyword">static</span> <span class="keywordtype">bool</span> statusBarPowerdChargerEventsCallback(LSHandle* handle, LSMessage* message, <span class="keywordtype">void</span>* ctxt);
<a name="l00122"></a>00122         <span class="keyword">static</span> <span class="keywordtype">bool</span> statusBarGetBuildNameCallback(LSHandle* handle, LSMessage* message, <span class="keywordtype">void</span>* ctxt);
<a name="l00123"></a>00123         <span class="keyword">static</span> <span class="keywordtype">bool</span> statusBarPlatformQueryCallback(LSHandle* handle, LSMessage* message, <span class="keywordtype">void</span>* ctxt);
<a name="l00124"></a>00124         <span class="keyword">static</span> <span class="keywordtype">bool</span> statusBarTelephonyServiceUpCallback(LSHandle* handle, LSMessage* message, <span class="keywordtype">void</span>* ctxt);
<a name="l00125"></a>00125         <span class="keyword">static</span> <span class="keywordtype">bool</span> statusBarTelephonyPowerEventsCallback(LSHandle* handle, LSMessage* message, <span class="keywordtype">void</span>* ctxt);
<a name="l00126"></a>00126         <span class="keyword">static</span> <span class="keywordtype">bool</span> statusBarTelephonyNetworkEventsCallback(LSHandle* handle, LSMessage* message, <span class="keywordtype">void</span>* ctxt);
<a name="l00127"></a>00127         <span class="keyword">static</span> <span class="keywordtype">bool</span> statusBarTelephonySignalEventsCallback(LSHandle* handle, LSMessage* message, <span class="keywordtype">void</span>* ctxt);
<a name="l00128"></a>00128         <span class="keyword">static</span> <span class="keywordtype">bool</span> statusBarTelephonySIMEventsCallback(LSHandle* handle, LSMessage* message, <span class="keywordtype">void</span>* ctxt);
<a name="l00129"></a>00129         <span class="keyword">static</span> <span class="keywordtype">bool</span> statusBarTelephonyPowerStateChangeCallback(LSHandle* handle, LSMessage* message, <span class="keywordtype">void</span>* ctxt);
<a name="l00130"></a>00130         <span class="keyword">static</span> <span class="keywordtype">bool</span> statusBarTelephonyTTYEventsCallback(LSHandle* handle, LSMessage* message, <span class="keywordtype">void</span>* ctxt);
<a name="l00131"></a>00131         <span class="keyword">static</span> <span class="keywordtype">bool</span> statusBarTelephonyHACEventsCallback(LSHandle* handle, LSMessage* message, <span class="keywordtype">void</span>* ctxt);
<a name="l00132"></a>00132         <span class="keyword">static</span> <span class="keywordtype">bool</span> statusBarWanServiceUpCallback(LSHandle* handle, LSMessage* message, <span class="keywordtype">void</span>* ctxt);
<a name="l00133"></a>00133         <span class="keyword">static</span> <span class="keywordtype">bool</span> statusBarWanStatusEventsCallback(LSHandle* handle, LSMessage* message, <span class="keywordtype">void</span>* ctxt);
<a name="l00134"></a>00134         <span class="keyword">static</span> <span class="keywordtype">bool</span> statusBarBtMonitorServiceUpCallback(LSHandle* handle, LSMessage* message, <span class="keywordtype">void</span>* ctxt);
<a name="l00135"></a>00135         <span class="keyword">static</span> <span class="keywordtype">bool</span> statusBarBtMonitorEventsCallback(LSHandle* handle, LSMessage* message, <span class="keywordtype">void</span>* ctxt);
<a name="l00136"></a>00136         <span class="keyword">static</span> <span class="keywordtype">bool</span> statusBarBtConnectedProfilesInfoCallback(LSHandle* handle, LSMessage* message, <span class="keywordtype">void</span>* ctxt);
<a name="l00137"></a>00137         <span class="keyword">static</span> <span class="keywordtype">bool</span> statusBarCallForwardRequestCallback(LSHandle* handle, LSMessage* message, <span class="keywordtype">void</span>* ctxt);
<a name="l00138"></a>00138         <span class="keyword">static</span> <span class="keywordtype">bool</span> statusBarBluetoothServiceUpCallback(LSHandle* handle, LSMessage* message, <span class="keywordtype">void</span>* ctxt);
<a name="l00139"></a>00139         <span class="keyword">static</span> <span class="keywordtype">bool</span> statusBarBluetoothEventsCallback(LSHandle* handle, LSMessage* message, <span class="keywordtype">void</span>* ctxt);
<a name="l00140"></a>00140         <span class="keyword">static</span> <span class="keywordtype">bool</span> statusBarBluetoothTurnOnCallback(LSHandle* handle, LSMessage* message, <span class="keywordtype">void</span>* ctxt);
<a name="l00141"></a>00141         <span class="keyword">static</span> <span class="keywordtype">bool</span> statusBarBluetoothTurnOffCallback(LSHandle* handle, LSMessage* message, <span class="keywordtype">void</span>* ctxt);
<a name="l00142"></a>00142         <span class="keyword">static</span> <span class="keywordtype">bool</span> statusBarBluetoothTruestedListCallback(LSHandle* handle, LSMessage* message, <span class="keywordtype">void</span>* ctxt);
<a name="l00143"></a>00143         <span class="keyword">static</span> <span class="keywordtype">bool</span> statusBarBluetoothNumProfilesCallback(LSHandle* handle, LSMessage* message, <span class="keywordtype">void</span>* ctxt);
<a name="l00144"></a>00144         <span class="keyword">static</span> <span class="keywordtype">bool</span> statusBarConnMgrServiceUpCallback(LSHandle* handle, LSMessage* message, <span class="keywordtype">void</span>* ctxt);
<a name="l00145"></a>00145         <span class="keyword">static</span> <span class="keywordtype">bool</span> statusBarConnMgrEventsCallback(LSHandle* handle, LSMessage* message, <span class="keywordtype">void</span>* ctxt);
<a name="l00146"></a>00146         <span class="keyword">static</span> <span class="keywordtype">bool</span> statusBarWiFiServiceUpCallback(LSHandle* handle, LSMessage* message, <span class="keywordtype">void</span>* ctxt);
<a name="l00147"></a>00147         <span class="keyword">static</span> <span class="keywordtype">bool</span> statusBarWifiEventsCallback(LSHandle* handle, LSMessage* message, <span class="keywordtype">void</span>* ctxt);
<a name="l00148"></a>00148         <span class="keyword">static</span> <span class="keywordtype">bool</span> statusBarWifiAvailableNetworksListCallback(LSHandle* handle, LSMessage* message, <span class="keywordtype">void</span>* ctxt);
<a name="l00149"></a>00149         <span class="keyword">static</span> <span class="keywordtype">bool</span> statusBarWifiConnectCallback(LSHandle* handle, LSMessage* message, <span class="keywordtype">void</span>* ctxt);
<a name="l00150"></a>00150         <span class="keyword">static</span> <span class="keywordtype">bool</span> statusBarWifiPowerStateChangeCallback(LSHandle* handle, LSMessage* message, <span class="keywordtype">void</span>* ctxt);
<a name="l00151"></a>00151         <span class="keyword">static</span> <span class="keywordtype">bool</span> statusBarVpnServiceUpCallback(LSHandle* handle, LSMessage* message, <span class="keywordtype">void</span>* ctxt);
<a name="l00152"></a>00152         <span class="keyword">static</span> <span class="keywordtype">bool</span> statusBarHandleVPNStatusNotification(LSHandle* handle, LSMessage* message, <span class="keywordtype">void</span>* ctxt);
<a name="l00153"></a>00153         <span class="keyword">static</span> <span class="keywordtype">bool</span> statusBarVpnDisconnectResponse(LSHandle* handle, LSMessage* message, <span class="keywordtype">void</span>* ctxt);
<a name="l00154"></a>00154         <span class="keyword">static</span> <span class="keywordtype">bool</span> statusBarGetSystemTimeCallback(LSHandle* handle, LSMessage* message, <span class="keywordtype">void</span>* ctxt);
<a name="l00155"></a>00155 
<a name="l00156"></a>00156         <span class="keywordtype">bool</span> storageMSMEntryCallback(LSHandle* handle, LSMessage* message, <span class="keywordtype">void</span>* ctxt);
<a name="l00157"></a>00157         <span class="keywordtype">bool</span> storageMSMProgressCallback(LSHandle* handle, LSMessage* message, <span class="keywordtype">void</span>* ctxt);
<a name="l00158"></a>00158         <span class="keywordtype">bool</span> powerdServiceUpCallback(LSHandle* handle, LSMessage* message, <span class="keywordtype">void</span>* ctxt);
<a name="l00159"></a>00159         <span class="keywordtype">bool</span> powerdBatteryEventsCallback(LSHandle* handle, LSMessage* message, <span class="keywordtype">void</span>* ctxt);
<a name="l00160"></a>00160         <span class="keywordtype">bool</span> powerdChargerEventsCallback(LSHandle* handle, LSMessage* message, <span class="keywordtype">void</span>* ctxt);
<a name="l00161"></a>00161         <span class="keywordtype">bool</span> platformQueryCallback(LSHandle* handle, LSMessage* message, <span class="keywordtype">void</span>* ctxt);
<a name="l00162"></a>00162         <span class="keywordtype">bool</span> telephonyServiceUpCallback(LSHandle* handle, LSMessage* message, <span class="keywordtype">void</span>* ctxt);
<a name="l00163"></a>00163         <span class="keywordtype">bool</span> telephonyPowerEventsCallback(LSHandle* handle, LSMessage* message, <span class="keywordtype">void</span>* ctxt);
<a name="l00164"></a>00164         <span class="keywordtype">bool</span> telephonyNetworkEventsCallback(LSHandle* handle, <span class="keyword">const</span> <span class="keywordtype">char</span>* messagePayload, <span class="keywordtype">void</span>* ctxt);
<a name="l00165"></a>00165         <span class="keywordtype">bool</span> telephonySignalEventsCallback(LSHandle* handle, <span class="keyword">const</span> <span class="keywordtype">char</span>* messagePayload, <span class="keywordtype">void</span>* ctxt);
<a name="l00166"></a>00166         <span class="keywordtype">bool</span> telephonySIMEventsCallback(LSHandle* handle, LSMessage* message, <span class="keywordtype">void</span>* ctxt);
<a name="l00167"></a>00167         <span class="keywordtype">bool</span> telephonyPowerStateChangeCallback(LSHandle* handle, LSMessage* message, <span class="keywordtype">void</span>* ctxt);
<a name="l00168"></a>00168         <span class="keywordtype">bool</span> telephonyTTYEventsCallback(LSHandle* handle, LSMessage* message, <span class="keywordtype">void</span>* ctxt);
<a name="l00169"></a>00169         <span class="keywordtype">bool</span> telephonyHACEventsCallback(LSHandle* handle, LSMessage* message, <span class="keywordtype">void</span>* ctxt);
<a name="l00170"></a>00170         <span class="keywordtype">bool</span> wanServiceUpCallback(LSHandle* handle, LSMessage* message, <span class="keywordtype">void</span>* ctxt);
<a name="l00171"></a>00171         <span class="keywordtype">bool</span> wanStatusEventsCallback(LSHandle* handle, <span class="keyword">const</span> <span class="keywordtype">char</span>* messagePayload, <span class="keywordtype">void</span>* ctxt);
<a name="l00172"></a>00172         <span class="keywordtype">bool</span> btMonitorServiceUpCallback(LSHandle* handle, LSMessage* message, <span class="keywordtype">void</span>* ctxt);
<a name="l00173"></a>00173         <span class="keywordtype">bool</span> btMonitorEventsCallback(LSHandle* handle, LSMessage* message, <span class="keywordtype">void</span>* ctxt);
<a name="l00174"></a>00174         <span class="keywordtype">bool</span> btConnectedProfilesInfoCallback(LSHandle* handle, LSMessage* message, <span class="keywordtype">void</span>* ctxt);
<a name="l00175"></a>00175         <span class="keywordtype">bool</span> callForwardRequestCallback(LSHandle* handle, LSMessage* message, <span class="keywordtype">void</span>* ctxt);
<a name="l00176"></a>00176         <span class="keywordtype">bool</span> bluetoothServiceUpCallback(LSHandle* handle, LSMessage* message, <span class="keywordtype">void</span>* ctxt);
<a name="l00177"></a>00177         <span class="keywordtype">bool</span> bluetoothEventsCallback(LSHandle* handle, LSMessage* message, <span class="keywordtype">void</span>* ctxt);
<a name="l00178"></a>00178         <span class="keywordtype">bool</span> bluetoothTurnOnCallback(LSHandle* handle, LSMessage* message, <span class="keywordtype">void</span>* ctxt);
<a name="l00179"></a>00179         <span class="keywordtype">bool</span> bluetoothTurnOffCallback(LSHandle* handle, LSMessage* message, <span class="keywordtype">void</span>* ctxt);
<a name="l00180"></a>00180         <span class="keywordtype">bool</span> bluetoothTruestedListCallback(LSHandle* handle, LSMessage* message, <span class="keywordtype">void</span>* ctxt);
<a name="l00181"></a>00181         <span class="keywordtype">bool</span> bluetoothNumProfilesCallback(LSHandle* handle, LSMessage* message, <span class="keywordtype">void</span>* ctxt);
<a name="l00182"></a>00182         <span class="keywordtype">bool</span> connMgrServiceUpCallback(LSHandle* handle, LSMessage* message, <span class="keywordtype">void</span>* ctxt);
<a name="l00183"></a>00183         <span class="keywordtype">bool</span> connMgrEventsCallback(LSHandle* handle, LSMessage* message, <span class="keywordtype">void</span>* ctxt);
<a name="l00184"></a>00184         <span class="keywordtype">bool</span> wiFiServiceUpCallback(LSHandle* handle, LSMessage* message, <span class="keywordtype">void</span>* ctxt);
<a name="l00185"></a>00185         <span class="keywordtype">bool</span> wifiEventsCallback(LSHandle* handle, LSMessage* message, <span class="keywordtype">void</span>* ctxt);
<a name="l00186"></a>00186         <span class="keywordtype">bool</span> wifiAvailableNetworksListCallback(LSHandle* handle, LSMessage* message, <span class="keywordtype">void</span>* ctxt);
<a name="l00187"></a>00187         <span class="keywordtype">bool</span> wifiConnectCallback(LSHandle* handle, LSMessage* message, <span class="keywordtype">void</span>* ctxt);
<a name="l00188"></a>00188         <span class="keywordtype">bool</span> wifiPowerStateChangeCallback(LSHandle* handle, LSMessage* message, <span class="keywordtype">void</span>* ctxt);
<a name="l00189"></a>00189         <span class="keywordtype">bool</span> vpnServiceUpCallback(LSHandle* handle, LSMessage* message, <span class="keywordtype">void</span>* ctxt);
<a name="l00190"></a>00190         <span class="keywordtype">bool</span> handleVPNStatusNotification(LSHandle* handle, LSMessage* message, <span class="keywordtype">void</span>* ctxt);
<a name="l00191"></a>00191         <span class="keywordtype">bool</span> vpnDisconnectResponse(LSHandle* handle, LSMessage* message, <span class="keywordtype">void</span>* ctxt);
<a name="l00192"></a>00192         <span class="keywordtype">bool</span> getSystemTimeCallback(LSHandle* handle, LSMessage* message, <span class="keywordtype">void</span>* ctxt);
<a name="l00193"></a>00193 
<a name="l00194"></a>00194         <span class="keywordtype">void</span> handlePowerStatus(<span class="keyword">const</span> <span class="keywordtype">char</span>* radioState, <span class="keywordtype">bool</span> queryResponse = <span class="keyword">false</span>);
<a name="l00195"></a>00195         <span class="keywordtype">void</span> handleNetworkStatus(<span class="keyword">const</span> <span class="keywordtype">char</span>* networkState, <span class="keyword">struct</span> json_object* event);
<a name="l00196"></a>00196 
<a name="l00197"></a>00197 
<a name="l00198"></a>00198 Q_SIGNALS:
<a name="l00199"></a>00199 
<a name="l00200"></a>00200         <span class="keywordtype">void</span> <a class="code" href="classStatusBarServicesConnector.htm#a27eadeacbf7307bb0a9c079c4a93b20e">signalPhoneTypeUpdated</a>();
<a name="l00201"></a>00201         <span class="keywordtype">void</span> <a class="code" href="classStatusBarServicesConnector.htm#ab8052dc3d1da4300ea56abd634735b2a">signalPowerdConnectionStateChanged</a>(<span class="keywordtype">bool</span> connected);
<a name="l00202"></a>00202         <span class="keywordtype">void</span> <a class="code" href="classStatusBarServicesConnector.htm#ae1f085688a4d0e54ad78f1fb3d724311">signalBatteryLevelUpdated</a>(<span class="keywordtype">int</span> percentage);
<a name="l00203"></a>00203         <span class="keywordtype">void</span> <a class="code" href="classStatusBarServicesConnector.htm#a032e5a879bb2f4fc5338d1449126f146">signalChargingStateUpdated</a>(<span class="keywordtype">bool</span> charging);
<a name="l00204"></a>00204         <span class="keywordtype">void</span> <a class="code" href="classStatusBarServicesConnector.htm#a0184d2605afd981b59d5dc510810de21">signalCarrierTextChanged</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* text);
<a name="l00205"></a>00205         <span class="keywordtype">void</span> <a class="code" href="classStatusBarServicesConnector.htm#a2a64d392b76cc9fea2d78caebde4e829">signalRssiIndexChanged</a>(<span class="keywordtype">bool</span> show, <a class="code" href="classStatusBar.htm#a59bc51b7ddd96e98ccfa6cb4a05fbdc7">StatusBar::IndexRSSI</a> index);
<a name="l00206"></a>00206         <span class="keywordtype">void</span> <a class="code" href="classStatusBarServicesConnector.htm#a92f283402d59ddf4bcd6e5c844c4bf38">signalRssi1xIndexChanged</a>(<span class="keywordtype">bool</span> show, <a class="code" href="classStatusBar.htm#af6a5dbf412b007dbfcda794a868420fe">StatusBar::IndexRSSI1x</a> index);
<a name="l00207"></a>00207         <span class="keywordtype">void</span> <a class="code" href="classStatusBarServicesConnector.htm#aadaa472c9d71a592bb339ccc36aed344">signalTTYStateChanged</a>(<span class="keywordtype">bool</span> enabled);
<a name="l00208"></a>00208         <span class="keywordtype">void</span> <a class="code" href="classStatusBarServicesConnector.htm#a0a80d405f9da00a935db00790db9f043">signalHACStateChanged</a>(<span class="keywordtype">bool</span> enabled);
<a name="l00209"></a>00209         <span class="keywordtype">void</span> <a class="code" href="classStatusBarServicesConnector.htm#adebc93333d5315feedac42baa780a840">signalCallForwardStateChanged</a>(<span class="keywordtype">bool</span> enabled);
<a name="l00210"></a>00210         <span class="keywordtype">void</span> <a class="code" href="classStatusBarServicesConnector.htm#a70532f1271d370c1d4ad7afedb6bba4f">signalRoamingStateChanged</a>(<span class="keywordtype">bool</span> enabled);
<a name="l00211"></a>00211         <span class="keywordtype">void</span> <a class="code" href="classStatusBarServicesConnector.htm#a50c6cf2fdc3d16d66280e0764261e852">signalVpnStateChanged</a>(<span class="keywordtype">bool</span> enabled);
<a name="l00212"></a>00212         <span class="keywordtype">void</span> <a class="code" href="classStatusBarServicesConnector.htm#aeb084f5248e2bfca99b8e8dd62f322ca">signalWanIndexChanged</a>(<span class="keywordtype">bool</span> show, <a class="code" href="classStatusBar.htm#a73d6a11657d08f08cf61a4a502bc2db6">StatusBar::IndexWAN</a> index);
<a name="l00213"></a>00213         <span class="keywordtype">void</span> <a class="code" href="classStatusBarServicesConnector.htm#a9f072bd2abfcea8820536cb14dc47e21">signalBluetoothIndexChanged</a>(<span class="keywordtype">bool</span> show, <a class="code" href="classStatusBar.htm#ab36eadfcab9c905556b368335babafda">StatusBar::IndexBluetooth</a> index);
<a name="l00214"></a>00214         <span class="keywordtype">void</span> <a class="code" href="classStatusBarServicesConnector.htm#a01dfd9b899277c97b78b93e2f4057108">signalWifiIndexChanged</a>(<span class="keywordtype">bool</span> show, <a class="code" href="classStatusBar.htm#a12497f1dda4464e776e9c4d9540a5232">StatusBar::IndexWiFi</a> index);
<a name="l00215"></a>00215         <span class="keywordtype">void</span> <a class="code" href="classStatusBarServicesConnector.htm#a157d87787eca9091beef9fc2f8db1fa4">signalSystemTimeChanged</a>();
<a name="l00216"></a>00216 
<a name="l00217"></a>00217 
<a name="l00218"></a>00218         <span class="comment">// Signals for the System Menu</span>
<a name="l00219"></a>00219         <span class="keywordtype">void</span> <a class="code" href="classStatusBarServicesConnector.htm#acc2daffd9f6ecdc3e83916e8e0436c0f">signalWifiStateChanged</a>(<span class="keywordtype">bool</span> wifiOn, <span class="keywordtype">bool</span> wifiConnected, std::string wifiSSID, std::string wifiConnState);
<a name="l00220"></a>00220         <span class="keywordtype">void</span> <a class="code" href="classStatusBarServicesConnector.htm#a797de2cdd79e5e97b62756886ebc1d47">signalWifiAvailableNetworksListUpdate</a>(<span class="keywordtype">int</span> numNetworks, <a class="code" href="structWifiAccessPoint.htm">t_wifiAccessPoint</a>* list);
<a name="l00221"></a>00221         <span class="keywordtype">void</span> <a class="code" href="classStatusBarServicesConnector.htm#a7572f710940801d57c765dcf5ccbbf5a">signalBluetoothTurnedOn</a>();
<a name="l00222"></a>00222         <span class="keywordtype">void</span> <a class="code" href="classStatusBarServicesConnector.htm#ab3ec10336f44ed079597d994ebc7cc83">signalBluetoothPowerStateChanged</a>(<a class="code" href="StatusBarServicesConnector_8h.htm#a247efe55f2f699bf0e4c9fd795529f2e">t_radioState</a> radioState);
<a name="l00223"></a>00223         <span class="keywordtype">void</span> <a class="code" href="classStatusBarServicesConnector.htm#a4f8f50a358fd3678ed635317164c338c">signalBluetoothConnStateChanged</a>(<span class="keywordtype">bool</span> btConnected, std::string deviceName);
<a name="l00224"></a>00224         <span class="keywordtype">void</span> <a class="code" href="classStatusBarServicesConnector.htm#a517d72a837c8919c85fa433bb09a83fa">signalBluetoothTrustedDevicesUpdate</a>(<span class="keywordtype">int</span> numTrustedDevices, <a class="code" href="structBluetoothDevice.htm">t_bluetoothDevice</a>* list);
<a name="l00225"></a>00225         <span class="keywordtype">void</span> <a class="code" href="classStatusBarServicesConnector.htm#ac992f98597e849462863e9c4b235b9dd">signalBluetoothParedDevicesAvailable</a>(<span class="keywordtype">bool</span> available);
<a name="l00226"></a>00226         <span class="keywordtype">void</span> <a class="code" href="classStatusBarServicesConnector.htm#aab2cd3421da8482c19b7f2b3c6e9e2ab">signalBluetoothUpdateDeviceStatus</a>(<a class="code" href="structBluetoothDevice.htm">t_bluetoothDevice</a>* deviceStatus);
<a name="l00227"></a>00227         <span class="keywordtype">void</span> <a class="code" href="classStatusBarServicesConnector.htm#ace29523370d60723b43a582599a03e41">signalVpnProfileListUpdate</a>(<span class="keywordtype">int</span> numProfiles, <a class="code" href="structVpnProfile.htm">t_vpnProfile</a>* list);
<a name="l00228"></a>00228         <span class="keywordtype">void</span> <a class="code" href="classStatusBarServicesConnector.htm#a636425ccc88cf1af464d30cb8da3f4aa">signalAirplaneModeState</a>(<a class="code" href="StatusBarServicesConnector_8h.htm#ad27bf47efee99cea4a7e5620b4223467">t_airplaneModeState</a> state);
<a name="l00229"></a>00229 
<a name="l00230"></a>00230 
<a name="l00231"></a>00231 <span class="keyword">private</span> Q_SLOTS:
<a name="l00232"></a>00232         <span class="keywordtype">void</span> slotAirplaneModeChanged(<span class="keywordtype">bool</span> enabled);
<a name="l00233"></a>00233         <span class="keywordtype">void</span> slotRoamingIndicatorChanged();
<a name="l00234"></a>00234         <span class="keywordtype">void</span> slotEnterBrickMode(<span class="keywordtype">bool</span>);
<a name="l00235"></a>00235         <span class="keywordtype">void</span> slotExitBrickMode();
<a name="l00236"></a>00236 
<a name="l00237"></a>00237 <span class="keyword">private</span>:
<a name="l00238"></a>00238 
<a name="l00239"></a>00239         <span class="keywordtype">char</span> m_carrierText[<a class="code" href="StatusBar_8h.htm#ae06fd44f7910e2fddafcf0767314022a">kMaxTitleLength</a>];
<a name="l00240"></a>00240         <span class="keywordtype">char</span> m_appTitle[<a class="code" href="StatusBar_8h.htm#ae06fd44f7910e2fddafcf0767314022a">kMaxTitleLength</a>];
<a name="l00241"></a>00241         <span class="keywordtype">bool</span> m_appMaximized;
<a name="l00242"></a>00242         <span class="keywordtype">bool</span> m_showAppTitle;
<a name="l00243"></a>00243 
<a name="l00244"></a>00244         <span class="keyword">enum</span> PhoneService {
<a name="l00245"></a>00245                 NoService  = 0,
<a name="l00246"></a>00246                 Service,
<a name="l00247"></a>00247                 Limited,
<a name="l00248"></a>00248                 Searching
<a name="l00249"></a>00249         };
<a name="l00250"></a>00250 
<a name="l00251"></a>00251         <span class="keyword">enum</span> BluetoothState {
<a name="l00252"></a>00252                 BT_DISCONNECTED  = 0,
<a name="l00253"></a>00253                 BT_CONNECTING,
<a name="l00254"></a>00254                 BT_CONNECTED,
<a name="l00255"></a>00255                 BT_DISCONNECTING
<a name="l00256"></a>00256         };
<a name="l00257"></a>00257 
<a name="l00258"></a>00258         <span class="keyword">struct </span>BluetoothProfState {
<a name="l00259"></a>00259                 BluetoothState status;
<a name="l00260"></a>00260                 std::string    address;
<a name="l00261"></a>00261                 std::string    name;
<a name="l00262"></a>00262         };
<a name="l00263"></a>00263 
<a name="l00264"></a>00264         std::vector&lt;unsigned int&gt;            m_SIMRejectCodes;
<a name="l00265"></a>00265         std::vector&lt;std::string&gt;         m_bluetoothProfiles;
<a name="l00266"></a>00266         std::set&lt;std::string&gt;            m_bluetoothMenuProfiles;
<a name="l00267"></a>00267         std::map&lt;std::string, BluetoothProfState&gt; m_bluetoothProfileStates;
<a name="l00268"></a>00268 
<a name="l00269"></a>00269         <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">int</span> kNumChargeSources = 2;
<a name="l00270"></a>00270         <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">char</span>* m_chargeSource[kNumChargeSources];
<a name="l00271"></a>00271         <span class="keywordtype">bool</span> m_powerdConnected;
<a name="l00272"></a>00272         <span class="keywordtype">int</span>  m_batteryLevel;
<a name="l00273"></a>00273         <span class="keywordtype">bool</span> m_charging;
<a name="l00274"></a>00274 
<a name="l00275"></a>00275         <a class="code" href="StatusBarServicesConnector_8h.htm#aabfb5a3e4143872e7c546c86970601ba">PhoneType</a> m_phoneType;
<a name="l00276"></a>00276         <span class="keywordtype">bool</span> m_phoneRadioState;
<a name="l00277"></a>00277         <span class="keywordtype">bool</span> m_simBad;
<a name="l00278"></a>00278         <span class="keywordtype">bool</span> m_ruim;
<a name="l00279"></a>00279         <span class="keywordtype">bool</span> m_simLocked;
<a name="l00280"></a>00280         <span class="keywordtype">bool</span> m_phoneInLimitedService;
<a name="l00281"></a>00281         PhoneService m_phoneService;
<a name="l00282"></a>00282 
<a name="l00283"></a>00283         <span class="keywordtype">bool</span> m_callFwdStatusRequested;
<a name="l00284"></a>00284 
<a name="l00285"></a>00285         <span class="keywordtype">int</span> m_rssi;
<a name="l00286"></a>00286 
<a name="l00287"></a>00287         <span class="keywordtype">bool</span> m_demoBuild;
<a name="l00288"></a>00288         <span class="keywordtype">bool</span> m_airplaneMode;
<a name="l00289"></a>00289         <span class="keywordtype">bool</span> m_initialAirplaneModeStatus;
<a name="l00290"></a>00290         <span class="keywordtype">bool</span> m_airplaneModeTriggered;
<a name="l00291"></a>00291         <span class="keywordtype">bool</span> m_apModePhone;
<a name="l00292"></a>00292         <span class="keywordtype">bool</span> m_apModeWifi;
<a name="l00293"></a>00293         <span class="keywordtype">bool</span> m_apModeBluetooth;
<a name="l00294"></a>00294         <span class="keywordtype">bool</span> m_msmStartingRadiosInProgress;
<a name="l00295"></a>00295         <span class="keywordtype">bool</span> m_msmModePhone;
<a name="l00296"></a>00296         <span class="keywordtype">bool</span> m_msmModeWifi;
<a name="l00297"></a>00297         <span class="keywordtype">bool</span> m_msmModeBluetooth;
<a name="l00298"></a>00298 
<a name="l00299"></a>00299         <span class="keywordtype">bool</span> m_showBlankStatusOnLimited;
<a name="l00300"></a>00300         <span class="keywordtype">bool</span> m_bluetoothRadionOn;
<a name="l00301"></a>00301         <span class="keywordtype">bool</span> m_btRadioTurningOn;
<a name="l00302"></a>00302         std::string m_wifiSSID;
<a name="l00303"></a>00303         <span class="keywordtype">bool</span> m_wifiRadioOn;
<a name="l00304"></a>00304         <span class="keywordtype">bool</span> m_wifiConnected;
<a name="l00305"></a>00305         LSMessageToken m_wifiFindNetworksReq;
<a name="l00306"></a>00306         LSMessageToken m_bluetoothDeviceListReq;
<a name="l00307"></a>00307 
<a name="l00308"></a>00308         <span class="keywordtype">bool</span> m_vpnConnected;
<a name="l00309"></a>00309         std::string m_connectedVpnInfo;
<a name="l00310"></a>00310         std::string m_pendingVpnProfile;
<a name="l00311"></a>00311 
<a name="l00312"></a>00312         <span class="keywordtype">bool</span> m_hideDataIcon;
<a name="l00313"></a>00313         <span class="keywordtype">bool</span> m_isInternetConnectionAvailable;
<a name="l00314"></a>00314 
<a name="l00315"></a>00315         LSHandle* m_service;
<a name="l00316"></a>00316 
<a name="l00317"></a>00317         std::string m_cmPayloadBuffer;
<a name="l00318"></a>00318         std::string m_signalMsgPayloadBuffer;
<a name="l00319"></a>00319         std::string m_phoneEventNetworkPayload;
<a name="l00320"></a>00320 
<a name="l00321"></a>00321 
<a name="l00322"></a>00322         <a class="code" href="classStatusBarServicesConnector.htm">StatusBarServicesConnector</a>();
<a name="l00323"></a>00323         <span class="keywordtype">void</span> init();
<a name="l00324"></a>00324 
<a name="l00325"></a>00325         <span class="keywordtype">void</span> requestBluetoothConnectedProfilesInfo();
<a name="l00326"></a>00326         <span class="keywordtype">void</span> requestCallForwardStatus();
<a name="l00327"></a>00327 
<a name="l00328"></a>00328         <span class="keywordtype">void</span> updateBluetoothIcon();
<a name="l00329"></a>00329         <span class="keywordtype">void</span> updateBtDeviceInfo(BluetoothProfState* info);
<a name="l00330"></a>00330 
<a name="l00331"></a>00331         <span class="keywordtype">bool</span> validSIMRejectCode(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> code);
<a name="l00332"></a>00332         <span class="keywordtype">void</span> updateRSSIIcon(<span class="keywordtype">bool</span> show, <a class="code" href="classStatusBar.htm#a59bc51b7ddd96e98ccfa6cb4a05fbdc7">StatusBar::IndexRSSI</a> index);
<a name="l00333"></a>00333         <span class="keywordtype">void</span> updateRSSI1xIcon(<span class="keywordtype">bool</span> show, <a class="code" href="classStatusBar.htm#af6a5dbf412b007dbfcda794a868420fe">StatusBar::IndexRSSI1x</a> index);
<a name="l00334"></a>00334         <a class="code" href="classStatusBar.htm#a73d6a11657d08f08cf61a4a502bc2db6">StatusBar::IndexWAN</a> getWanIndex(<span class="keywordtype">bool</span> connected, <span class="keyword">const</span> <span class="keywordtype">char</span>* type);
<a name="l00335"></a>00335 
<a name="l00336"></a>00336 };
<a name="l00337"></a>00337 
<a name="l00338"></a>00338 
<a name="l00339"></a>00339 <span class="preprocessor">#endif </span><span class="comment">/* STATUSBARSERVICESCONNECTOR_H */</span>
</pre></div></div><!-- contents -->
</div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Properties</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Defines</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="StatusBarServicesConnector_8h.htm">StatusBarServicesConnector.h</a>      </li>

    <li class="footer">Generated on Fri Oct 5 2012 20:00:31 for LunaSysMgr by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.6.1 </li>
   </ul>
 </div>


</body>
</html>
