<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>LunaSysMgr: HostArm Class Reference</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>

</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">LunaSysMgr
   
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
      <li><a href="dirs.htm"><span>Directories</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.htm"><span>Class&#160;List</span></a></li>
      <li><a href="classes.htm"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.htm"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('classHostArm.htm','');
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-slots">Protected Slots</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pro-static-methods">Static Protected Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a>  </div>
  <div class="headertitle">
<div class="title">HostArm Class Reference</div>  </div>
</div><!--header-->
<div class="contents">
<!-- doxytag: class="HostArm" --><!-- doxytag: inherits="HostBase,HALConnectorObserver" -->
<p><code>#include &lt;<a class="el" href="HostArm_8h_source.htm">HostArm.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for HostArm:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classHostArm__inherit__graph.svg" width="790" height="627"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
<center><span class="legend">[<a target="top" href="graph_legend.htm">legend</a>]</span></center></div>
<div class="dynheader">
Collaboration diagram for HostArm:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classHostArm__coll__graph.svg" width="1544" height="1299"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
<center><span class="legend">[<a target="top" href="graph_legend.htm">legend</a>]</span></center></div>

<p><a href="classHostArm-members.htm">List of all members.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#ab784efc88b45b4fe1e4442a1a6014304">HostArm</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#acd63610f5841ce45a06c2931ded82b77">~HostArm</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#afdb1270ae2387bc9240f2c70544025ef">init</a> (<a class="el" href="classint.htm">int</a> w, <a class="el" href="classint.htm">int</a> h)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#affcce2079c29465a3f80593711d68951">show</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classint.htm">int</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#a5984e1ef2b8f4a3ecd63bc8937bf1572">getNumberOfSwitches</a> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#a7a981c6ff77cf31468e19825bcf87d7c">getInitialSwitchStates</a> (void)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classint.htm">int</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#a12cb409a58eddef07c289b6cd9b7618d">readHidEvents</a> (<a class="el" href="classint.htm">int</a> fd, struct input_event *eventBuf, <a class="el" href="classint.htm">int</a> bufSize)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#ab9b1444ba6e156f9dca62ab38ee024e2">hardwareName</a> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classInputControl.htm">InputControl</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#a5e0fbcbf0780b2f06f1210c9f131d3d8">getInputControlALS</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classInputControl.htm">InputControl</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#a2d3055444437d6d317c5181ba82022e7">getInputControlBluetoothInputDetect</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classInputControl.htm">InputControl</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#a5e85c0d6aa734edc8d7492b0cde1c2d0">getInputControlProximity</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classInputControl.htm">InputControl</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#aeec700787178cd33745ad94584007343">getInputControlTouchpanel</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classInputControl.htm">InputControl</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#a358b89ea56aea621256391bda37d0b93">getInputControlKeys</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#a58a0850f8fa5a17e1288527458e4b68f">OrientationSensorOn</a> (bool enable)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#aa797feaf368a0613258678274c452f03">setBluetoothKeyboardActive</a> (bool active)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#a02d4ff9b0c7877221e29f73dac60d444">bluetoothKeyboardActive</a> () const </td></tr>
<tr><td colspan="2"><h2><a name="pro-slots"></a>
Protected Slots</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#a69c98eeeecc3bb11f3351185860da2b5">readALSData</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#adabcbe6c58b49c2b29f83307740fa8c2">readProxData</a> ()</td></tr>
<tr><td colspan="2"><h2><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#a20600a23ab56027f41d04ad5215c75b5">wakeUpLcd</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classint.htm">int</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#a63c4357194c9e7ddeb3c74be7d479f1f">screenX</a> (<a class="el" href="classint.htm">int</a> rawX, <a class="el" href="BezelGesture_8h.htm#a1d1cfd8ffb84e947f82999c682b666a7">Event::Type</a> type)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classint.htm">int</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#a94c2c05c406b76e3b0921a759c6fcb1b">screenY</a> (<a class="el" href="classint.htm">int</a> rawY, <a class="el" href="BezelGesture_8h.htm#a1d1cfd8ffb84e947f82999c682b666a7">Event::Type</a> type)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#a7d819c415ef5113bb13cb809736f16af">setCentralWidget</a> (<a class="el" href="classQWidget.htm">QWidget</a> *view)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#a3b459fdc063dee6483d9289f154a751a">setupInput</a> (void)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#ab65be1f72b88c7b49a57656cd10f7aeb">shutdownInput</a> (void)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#a8959d626843be01ef12baeb9fcd8541d">startService</a> (void)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#ab997f5a0a3730a053cc3b9149fcad31b">stopService</a> (void)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#a6dafde3a31849b7c3709c28ea0a1985c">disableScreenBlanking</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#a4d67569de3da0b9b5d38de51ad96819d">flip</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual QImage&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#acdb52922ba3ec6d1885c47dc00693e56">takeScreenShot</a> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual QImage&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#a574fc9862e334e9cced003a502330ec5">takeAppDirectRenderingScreenShot</a> () const </td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#aed6d8442ac3da98984a4ca00ad630b30">setAppDirectRenderingLayerEnabled</a> (bool enable)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#ac330087c411b5fbfcbce685b8e1ef73d">setRenderingLayerEnabled</a> (bool enable)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#a73732716555ab5f89e0ce5e7094a5069">HALDataAvailable</a> (<a class="el" href="classHALConnectorBase.htm#a6063ab9847652355b7db8db3f1a2dc9a">HALConnectorBase::Sensor</a> aSensorType)</td></tr>
<tr><td colspan="2"><h2><a name="pro-static-methods"></a>
Static Protected Member Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#ad0dace7ff1ce6094cf1950a3c30fd679">getMsgValueInt</a> (LSMessage *msg, <a class="el" href="classint.htm">int</a> &amp;value)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#a8fd107b2fb0964f0e708dce2a7d96ddf">switchStateCallback</a> (LSHandle *handle, LSMessage *msg, void *data)</td></tr>
<tr><td colspan="2"><h2><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">QSocketNotifier *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#ad3b12ae1de9ef34bbe60d21222a8fced">m_halLightNotifier</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">QSocketNotifier *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#a20ac97ed098442e1e7ab4f7a21623aaa">m_halProxNotifier</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">HidHardwareRevision_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#a2265f4cc6ab7c1b6eb001336df975fa3">m_hwRev</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">HidHardwarePlatform_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#a9402c47737254dbe01a6f16f8355d493">m_hwPlatform</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classint.htm">int</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#aebf5c17cfee39295c0d3ed42a65b94c7">m_fb0Fd</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classint.htm">int</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#af45ad66eb3c1f5de79e5155cd9720ed0">m_fb1Fd</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#afa74cff160f96b95de6fead7edf2ae90">m_fb0Buffer</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classint.htm">int</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#a7a076e7d012b243fbb4ba8e5cf40d1b7">m_fb0NumBuffers</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#aac84c466cb884fad04984d3cd1fbec07">m_fb1Buffer</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classint.htm">int</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#ad247f0982277462974527e276db9031f">m_fb1NumBuffers</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">LSHandle *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#a24b12b5300a69e884340c4a687e304fb">m_service</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classInputControl.htm">InputControl</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#a96dc9e1b078f6fd0a90d2cd36e67309a">m_halInputControlALS</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classInputControl.htm">InputControl</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#ad8bded0c6911c52a5b3aaacca3ecc4f2">m_halInputControlBluetoothInputDetect</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classInputControl.htm">InputControl</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#a240ecee01938faddc8a7befa31f1a2d7">m_halInputControlProx</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classInputControl.htm">InputControl</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#ae7275d4180fdc7f249535f20f9a32978">m_halInputControlKeys</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classInputControl.htm">InputControl</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#a045d43315129c6ed895875457cebb58e">m_halInputControlTouchpanel</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#a387467fdc5e20baceecc37cefe9c3793">m_bluetoothKeyboardActive</a></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classHALOrientationSensorConnector.htm">HALOrientationSensorConnector</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#a525e5e3e59a15cee99fa8af66ee379a0">m_OrientationSensor</a></td></tr>
</table>
<hr/><a name="details" id="details"></a><h2>Detailed Description</h2>
<div class="textblock"><p>Base class for all ARM-based host device classes to derive from </p>
</div><hr/><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="ab784efc88b45b4fe1e4442a1a6014304"></a><!-- doxytag: member="HostArm::HostArm" ref="ab784efc88b45b4fe1e4442a1a6014304" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classHostArm.htm#ab784efc88b45b4fe1e4442a1a6014304">HostArm::HostArm</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Constructs an ARM-based host device</p>
<p>Initializes common ARM hardware. </p>

</div>
</div>
<a class="anchor" id="acd63610f5841ce45a06c2931ded82b77"></a><!-- doxytag: member="HostArm::~HostArm" ref="acd63610f5841ce45a06c2931ded82b77" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classHostArm.htm#acd63610f5841ce45a06c2931ded82b77">HostArm::~HostArm</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Shuts down ARM-specific hardware </p>

</div>
</div>
<hr/><h2>Member Function Documentation</h2>
<a class="anchor" id="a02d4ff9b0c7877221e29f73dac60d444"></a><!-- doxytag: member="HostArm::bluetoothKeyboardActive" ref="a02d4ff9b0c7877221e29f73dac60d444" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="classHostArm.htm#a02d4ff9b0c7877221e29f73dac60d444">HostArm::bluetoothKeyboardActive</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const<code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Checks whether Bluetooth keyboard functionality is enabled</p>
<dl class="todo"><dt><b><a class="el" href="todo.htm#_todo000019">Todo:</a></b></dt><dd>Verify that the documentation for this method is correct.</dd></dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>true if Bluetooth keyboard functionality is enabled, otherwise false. </dd></dl>

<p>Reimplemented from <a class="el" href="classHostBase.htm#af7a97a39aca19814ec7b038bd8f93bc1">HostBase</a>.</p>

</div>
</div>
<a class="anchor" id="a6dafde3a31849b7c3709c28ea0a1985c"></a><!-- doxytag: member="HostArm::disableScreenBlanking" ref="a6dafde3a31849b7c3709c28ea0a1985c" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classHostArm.htm#a6dafde3a31849b7c3709c28ea0a1985c">HostArm::disableScreenBlanking</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Disable screen blanking and puts the screen into graphics mode</p>
<p>Enabled screen blanking to restore the screen from sleep, then immediately disables it.</p>
<p>After that, it puts the screen into grahics mode to get it ready to draw to (and hide the text terminal cursor).</p>
<p>When deciphering the implementation of this, see the manpage for console_ioctl, specifically TIOCLINUX subcodes 0 and 10. </p>

</div>
</div>
<a class="anchor" id="a4d67569de3da0b9b5d38de51ad96819d"></a><!-- doxytag: member="HostArm::flip" ref="a4d67569de3da0b9b5d38de51ad96819d" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classHostArm.htm#a4d67569de3da0b9b5d38de51ad96819d">HostArm::flip</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [protected, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Flips the back buffer to the display</p>
<p>Displays to the screen what is currently contained in the back buffer. Since there is a back buffer, drawing can be completed on the back buffer at the program's leisure before displaying it in one swift move with a flip. </p>

<p>Reimplemented from <a class="el" href="classHostBase.htm#abd2faa65456a6ee015d885edbf862818">HostBase</a>.</p>

</div>
</div>
<a class="anchor" id="a7a981c6ff77cf31468e19825bcf87d7c"></a><!-- doxytag: member="HostArm::getInitialSwitchStates" ref="a7a981c6ff77cf31468e19825bcf87d7c" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classHostArm.htm#a7a981c6ff77cf31468e19825bcf87d7c">HostArm::getInitialSwitchStates</a> </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Asks the HIDD service for the state of each of the switches</p>
<p>Posts KeyPress/KeyRelease events to the event queue of the active window for each of the hardware switches of this device.</p>
<p>Possible keys include:</p>
<ul>
<li>Qt::Key_unknown</li>
<li>Qt::Key_Ringer</li>
<li>Qt::Key_Slider</li>
<li>Qt::Key_HeadsetMic</li>
<li>Qt::Key_Headset </li>
</ul>

<p>Reimplemented in <a class="el" href="classHostArmQemu.htm#a1aecf9257f21b88aec5df6408a248340">HostArmQemu</a>, and <a class="el" href="classHostArmPixie.htm#a2c08a9b711748a5a79dc0d19df34d15c">HostArmPixie</a>.</p>

</div>
</div>
<a class="anchor" id="a5e0fbcbf0780b2f06f1210c9f131d3d8"></a><!-- doxytag: member="HostArm::getInputControlALS" ref="a5e0fbcbf0780b2f06f1210c9f131d3d8" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classInputControl.htm">InputControl</a> * <a class="el" href="classHostArm.htm#a5e0fbcbf0780b2f06f1210c9f131d3d8">HostArm::getInputControlALS</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Gets an <a class="el" href="classInputControl.htm">InputControl</a> pointer for the ambient light sensor</p>
<p>Allows the ambient light sensor to be turned on/off.</p>
<dl class="return"><dt><b>Returns:</b></dt><dd>Ambient light sensor control. </dd></dl>

<p>Reimplemented from <a class="el" href="classHostBase.htm#a14c5ed55ae8c96d12902f27264b382b1">HostBase</a>.</p>

</div>
</div>
<a class="anchor" id="a2d3055444437d6d317c5181ba82022e7"></a><!-- doxytag: member="HostArm::getInputControlBluetoothInputDetect" ref="a2d3055444437d6d317c5181ba82022e7" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classInputControl.htm">InputControl</a> * <a class="el" href="classHostArm.htm#a2d3055444437d6d317c5181ba82022e7">HostArm::getInputControlBluetoothInputDetect</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Gets an <a class="el" href="classInputControl.htm">InputControl</a> pointer for Bluetooth input detection</p>
<p>Allows the Bluetooth input detection to be turned on/off.</p>
<dl class="return"><dt><b>Returns:</b></dt><dd>Bluetooth input sensor control. </dd></dl>

<p>Reimplemented from <a class="el" href="classHostBase.htm#aab2febe25815882de090c92f7c93076b">HostBase</a>.</p>

</div>
</div>
<a class="anchor" id="a358b89ea56aea621256391bda37d0b93"></a><!-- doxytag: member="HostArm::getInputControlKeys" ref="a358b89ea56aea621256391bda37d0b93" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classInputControl.htm">InputControl</a> * <a class="el" href="classHostArm.htm#a358b89ea56aea621256391bda37d0b93">HostArm::getInputControlKeys</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Gets an <a class="el" href="classInputControl.htm">InputControl</a> pointer for the keyboard</p>
<p>Allows the keyboard to be turned on/off.</p>
<dl class="todo"><dt><b><a class="el" href="todo.htm#_todo000016">Todo:</a></b></dt><dd>Confirm documentation on this.</dd></dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>Control keys sensor control. </dd></dl>

<p>Reimplemented from <a class="el" href="classHostBase.htm#a462397bd3df761447abbf58d972081a9">HostBase</a>.</p>

</div>
</div>
<a class="anchor" id="a5e85c0d6aa734edc8d7492b0cde1c2d0"></a><!-- doxytag: member="HostArm::getInputControlProximity" ref="a5e85c0d6aa734edc8d7492b0cde1c2d0" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classInputControl.htm">InputControl</a> * <a class="el" href="classHostArm.htm#a5e85c0d6aa734edc8d7492b0cde1c2d0">HostArm::getInputControlProximity</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Gets an <a class="el" href="classInputControl.htm">InputControl</a> pointer for the face proximity sensor</p>
<p>Allows the face proximity sensor to be turned on/off.</p>
<dl class="return"><dt><b>Returns:</b></dt><dd>Face proximity sensor control. </dd></dl>

<p>Reimplemented from <a class="el" href="classHostBase.htm#a1be60ebd18bf74010a6e48441feba8a8">HostBase</a>.</p>

</div>
</div>
<a class="anchor" id="aeec700787178cd33745ad94584007343"></a><!-- doxytag: member="HostArm::getInputControlTouchpanel" ref="aeec700787178cd33745ad94584007343" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classInputControl.htm">InputControl</a> * <a class="el" href="classHostArm.htm#aeec700787178cd33745ad94584007343">HostArm::getInputControlTouchpanel</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Gets an <a class="el" href="classInputControl.htm">InputControl</a> pointer for the touch panel</p>
<p>Allows the touch panel to be turned on/off.</p>
<dl class="return"><dt><b>Returns:</b></dt><dd>Touch panel sensor control. </dd></dl>

<p>Reimplemented from <a class="el" href="classHostBase.htm#a50b0466b4bd8a8948532f085b229da96">HostBase</a>.</p>

</div>
</div>
<a class="anchor" id="ad0dace7ff1ce6094cf1950a3c30fd679"></a><!-- doxytag: member="HostArm::getMsgValueInt" ref="ad0dace7ff1ce6094cf1950a3c30fd679" args="(LSMessage *msg, int &amp;value)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="classHostArm.htm#ad0dace7ff1ce6094cf1950a3c30fd679">HostArm::getMsgValueInt</a> </td>
          <td>(</td>
          <td class="paramtype">LSMessage *&#160;</td>
          <td class="paramname"><em>msg</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classint.htm">int</a> &amp;&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static, protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Given a return value from an IPC call with a "value" element, returns the integer value of it</p>
<p>When an IPC call passes back a JSON structure in a format such as:</p>
<p><code> { value : "127" } </code></p>
<p>It returns the integer value of the "value" element.</p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">msg</td><td>Return value message to parse from IPC call. </td></tr>
    <tr><td class="paramname">value</td><td>Where to store the integer version of the value. </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>true if parsing was successful, false if parsing failed. </dd></dl>

</div>
</div>
<a class="anchor" id="a5984e1ef2b8f4a3ecd63bc8937bf1572"></a><!-- doxytag: member="HostArm::getNumberOfSwitches" ref="a5984e1ef2b8f4a3ecd63bc8937bf1572" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classint.htm">int</a> <a class="el" href="classHostArm.htm#a5984e1ef2b8f4a3ecd63bc8937bf1572">HostArm::getNumberOfSwitches</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const<code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Gets the number of hardware switches the current host device has</p>
<p>As an example, the <a class="el" href="namespacePalm.htm">Palm</a> Pre has 3 switches:</p>
<ul>
<li>Ringer on/off.</li>
<li>Slider opened/closed.</li>
<li>Headphones inserted/no headphones.</li>
</ul>
<dl class="return"><dt><b>Returns:</b></dt><dd>Number of hardware switches the device has. </dd></dl>

<p>Reimplemented from <a class="el" href="classHostBase.htm#a0d1c61d48230e0fcb4705ccddb886d3d">HostBase</a>.</p>

<p>Reimplemented in <a class="el" href="classHostArmQemu.htm#a4147da831fa24dbc0cf2730c367db60e">HostArmQemu</a>, <a class="el" href="classHostArmPixie.htm#a4ac5978362a2d97581a3b324f9ec317f">HostArmPixie</a>, <a class="el" href="classHostArmBroadway.htm#adbb41aeb1e25edd433a95690be58fe0b">HostArmBroadway</a>, <a class="el" href="classHostArmTopaz.htm#a37cb9374644f448afaf3084535fefc31">HostArmTopaz</a>, <a class="el" href="classHostArmOpal.htm#af8ae8e8c88973ff67f95961e27efc73b">HostArmOpal</a>, <a class="el" href="classHostArmWindsorNot.htm#acf1183f42b5ecf61d057ec615ebebf2b">HostArmWindsorNot</a>, and <a class="el" href="classHostArmChile.htm#aee7868fd5e180fc00d8d4e4d101bc939">HostArmChile</a>.</p>

</div>
</div>
<a class="anchor" id="a73732716555ab5f89e0ce5e7094a5069"></a><!-- doxytag: member="HostArm::HALDataAvailable" ref="a73732716555ab5f89e0ce5e7094a5069" args="(HALConnectorBase::Sensor aSensorType)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classHostArm.htm#a73732716555ab5f89e0ce5e7094a5069">HostArm::HALDataAvailable</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classHALConnectorBase.htm#a6063ab9847652355b7db8db3f1a2dc9a">HALConnectorBase::Sensor</a>&#160;</td>
          <td class="paramname"><em>aSensorType</em></td><td>)</td>
          <td><code> [protected, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Function gets called whenever there is some data available from HAL.</p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">-</td><td>aSensorType - Sensor which has got some data to report </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classHALConnectorObserver.htm#a1b94dfae75e5c29230a49cfcd392a169">HALConnectorObserver</a>.</p>

</div>
</div>
<a class="anchor" id="ab9b1444ba6e156f9dca62ab38ee024e2"></a><!-- doxytag: member="HostArm::hardwareName" ref="ab9b1444ba6e156f9dca62ab38ee024e2" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const char * <a class="el" href="classHostArm.htm#ab9b1444ba6e156f9dca62ab38ee024e2">HostArm::hardwareName</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const<code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Since this class is a generic base for ARM-based devices, this always returns "ARM Device".</p>
<dl class="return"><dt><b>Returns:</b></dt><dd>Returns the string "ARM Device". </dd></dl>

<p>Implements <a class="el" href="classHostBase.htm#a5835840c718876c380bfa12e1e85e329">HostBase</a>.</p>

<p>Reimplemented in <a class="el" href="classHostArmQemu.htm#aa983f9982d0d8cf9a40be9bc90d246e9">HostArmQemu</a>, <a class="el" href="classHostArmCastle.htm#a0f550a57007926759bccd393f3ca2bd4">HostArmCastle</a>, <a class="el" href="classHostArmZepfloyd.htm#a24d5aa4e7088f8b3b8f65025dbd63f97">HostArmZepfloyd</a>, <a class="el" href="classHostArmPixie.htm#a06ec491dae2c8f1036d8741ac653d682">HostArmPixie</a>, <a class="el" href="classHostArmMantaray.htm#a2312077da3740485e6467ce6b2114891">HostArmMantaray</a>, <a class="el" href="classHostArmBroadway.htm#ab2544381e3c840e806e3932ef9cb6eac">HostArmBroadway</a>, <a class="el" href="classHostArmWindsor.htm#a729aa73d8961c0574de5630663e77425">HostArmWindsor</a>, <a class="el" href="classHostArmTopaz.htm#a265772fbd96bef0dade5075e01ff4ec6">HostArmTopaz</a>, <a class="el" href="classHostArmOpal.htm#a2f73a7ee911f17cadf291f57d5f20a75">HostArmOpal</a>, <a class="el" href="classHostArmChile.htm#a3e5a4941c43f6c8bc532a5a1ccef2754">HostArmChile</a>, <a class="el" href="classHostArmWindsorNot.htm#aa4282a565fc51472cd11f15c7600e884">HostArmWindsorNot</a>, and <a class="el" href="classHostArmUnknown.htm#aa1b4dff301656bdf4c0ef334b861c0c4">HostArmUnknown</a>.</p>

</div>
</div>
<a class="anchor" id="afdb1270ae2387bc9240f2c70544025ef"></a><!-- doxytag: member="HostArm::init" ref="afdb1270ae2387bc9240f2c70544025ef" args="(int w, int h)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classHostArm.htm#afdb1270ae2387bc9240f2c70544025ef">HostArm::init</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classint.htm">int</a>&#160;</td>
          <td class="paramname"><em>w</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classint.htm">int</a>&#160;</td>
          <td class="paramname"><em>h</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Initialize device-specific hardware</p>
<p>Initializes hardware, fetches display info, and generally prepares the host device for LunaSysMgr to run on it.</p>
<p>Must be overridden for each type of device Host class needed.</p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">w</td><td>Hint as to what the screen width probably is. Ignored by most devices since they can query the screen for its capabilities. </td></tr>
    <tr><td class="paramname">h</td><td>Hint as to what the screen height probably is. Ignored by most devices since they can query the screen for its capabilities. </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classHostBase.htm#a0ada2c44250d792df0a01b69b4b2e0e1">HostBase</a>.</p>

</div>
</div>
<a class="anchor" id="a58a0850f8fa5a17e1288527458e4b68f"></a><!-- doxytag: member="HostArm::OrientationSensorOn" ref="a58a0850f8fa5a17e1288527458e4b68f" args="(bool enable)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classHostArm.htm#a58a0850f8fa5a17e1288527458e4b68f">HostArm::OrientationSensorOn</a> </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>enable</em></td><td>)</td>
          <td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Function enables/disables the orientation sensor</p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">enable</td><td>true to enable the orientation sensor, false to disable it. </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented from <a class="el" href="classHostBase.htm#a242c246df15f73a588a5027cf46cb580">HostBase</a>.</p>

</div>
</div>
<a class="anchor" id="a69c98eeeecc3bb11f3351185860da2b5"></a><!-- doxytag: member="HostArm::readALSData" ref="a69c98eeeecc3bb11f3351185860da2b5" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classHostArm.htm#a69c98eeeecc3bb11f3351185860da2b5">HostArm::readALSData</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [protected, slot]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Read the value of the ambient light sensor</p>
<p>Reads the value of the ambient light sensor and posts an <a class="el" href="classAlsEvent.htm">AlsEvent</a> event to the active window's event queue with the value IF it is able to successfully retrieve the value.</p>
<dl class="note"><dt><b>Note:</b></dt><dd>You MUST run <a class="el" href="classHostArm.htm#a3b459fdc063dee6483d9289f154a751a">HostArm::setupInput()</a> (or <a class="el" href="classHostArm.htm#a5e0fbcbf0780b2f06f1210c9f131d3d8">HostArm::getInputControlALS()</a> directly if you feel adventurous) before calling this method for it to actually do anything.</dd></dl>
<dl class="see"><dt><b>See also:</b></dt><dd><a class="el" href="classHostArm.htm#a5e0fbcbf0780b2f06f1210c9f131d3d8">HostArm::getInputControlALS()</a> </dd>
<dd>
<a class="el" href="classAlsEvent.htm">AlsEvent</a></dd></dl>
<dl class="todo"><dt><b><a class="el" href="todo.htm#_todo000012">Todo:</a></b></dt><dd>Document the value range for the ambient light sensor. </dd></dl>

</div>
</div>
<a class="anchor" id="a12cb409a58eddef07c289b6cd9b7618d"></a><!-- doxytag: member="HostArm::readHidEvents" ref="a12cb409a58eddef07c289b6cd9b7618d" args="(int fd, struct input_event *eventBuf, int bufSize)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classint.htm">int</a> <a class="el" href="classHostArm.htm#a12cb409a58eddef07c289b6cd9b7618d">HostArm::readHidEvents</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classint.htm">int</a>&#160;</td>
          <td class="paramname"><em>fd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct input_event *&#160;</td>
          <td class="paramname"><em>eventBuf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classint.htm">int</a>&#160;</td>
          <td class="paramname"><em>bufSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Reads input_event structures from a file descriptor and returns the number read</p>
<p>Mainly just a utility method for use within this class. Very purpose- specific.</p>
<dl class="see"><dt><b>See also:</b></dt><dd>input_event</dd></dl>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">fd</td><td>File descriptor to read from. </td></tr>
    <tr><td class="paramname">eventBuf</td><td>Buffer to read input_events into. </td></tr>
    <tr><td class="paramname">bufSize</td><td>Amount of allocated memory (in bytes) that eventBuf points to. </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>Returns the number of events read on success (may be 0) or -1 on failure. </dd></dl>

</div>
</div>
<a class="anchor" id="adabcbe6c58b49c2b29f83307740fa8c2"></a><!-- doxytag: member="HostArm::readProxData" ref="adabcbe6c58b49c2b29f83307740fa8c2" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classHostArm.htm#adabcbe6c58b49c2b29f83307740fa8c2">HostArm::readProxData</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [protected, slot]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Read the value of the face proximity sensor</p>
<p>Reads the value of the face proximity sensor and posts an <a class="el" href="classProximityEvent.htm">ProximityEvent</a> event to the active window's event queue with the value IF it is able to successfully retrieve the value.</p>
<dl class="note"><dt><b>Note:</b></dt><dd>You MUST run <a class="el" href="classHostArm.htm#a3b459fdc063dee6483d9289f154a751a">HostArm::setupInput()</a> (or <a class="el" href="classHostArm.htm#a5e85c0d6aa734edc8d7492b0cde1c2d0">HostArm::getInputControlProximity()</a> directly if you feel adventurous) before calling this method for it to actually do anything.</dd></dl>
<dl class="see"><dt><b>See also:</b></dt><dd><a class="el" href="classHostArm.htm#a5e85c0d6aa734edc8d7492b0cde1c2d0">HostArm::getInputControlProximity()</a> </dd>
<dd>
<a class="el" href="classProximityEvent.htm">ProximityEvent</a></dd></dl>
<dl class="todo"><dt><b><a class="el" href="todo.htm#_todo000013">Todo:</a></b></dt><dd>Document the value range for the face proximity sensor. </dd></dl>

</div>
</div>
<a class="anchor" id="a63c4357194c9e7ddeb3c74be7d479f1f"></a><!-- doxytag: member="HostArm::screenX" ref="a63c4357194c9e7ddeb3c74be7d479f1f" args="(int rawX, Event::Type type)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classint.htm">int</a> <a class="el" href="classHostArm.htm#a63c4357194c9e7ddeb3c74be7d479f1f">HostArm::screenX</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classint.htm">int</a>&#160;</td>
          <td class="paramname"><em>rawX</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="BezelGesture_8h.htm#a1d1cfd8ffb84e947f82999c682b666a7">Event::Type</a>&#160;</td>
          <td class="paramname"><em>type</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [inline, protected, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Remap a raw X value from the touchscreen to a pixel value</p>
<dl class="todo"><dt><b><a class="el" href="todo.htm#_todo000001">Todo:</a></b></dt><dd>Confirm this, since there's only one implementation of this at the moment.</dd></dl>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">rawX</td><td>Raw X value from the touchscreen. </td></tr>
    <tr><td class="paramname">type</td><td>Type of event which gave us this coordinate value. </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>Screen X of the touch, in pixels. </dd></dl>

</div>
</div>
<a class="anchor" id="a94c2c05c406b76e3b0921a759c6fcb1b"></a><!-- doxytag: member="HostArm::screenY" ref="a94c2c05c406b76e3b0921a759c6fcb1b" args="(int rawY, Event::Type type)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classint.htm">int</a> <a class="el" href="classHostArm.htm#a94c2c05c406b76e3b0921a759c6fcb1b">HostArm::screenY</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classint.htm">int</a>&#160;</td>
          <td class="paramname"><em>rawY</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="BezelGesture_8h.htm#a1d1cfd8ffb84e947f82999c682b666a7">Event::Type</a>&#160;</td>
          <td class="paramname"><em>type</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [inline, protected, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Remap a raw Y value from the touchscreen to a pixel value</p>
<dl class="todo"><dt><b><a class="el" href="todo.htm#_todo000002">Todo:</a></b></dt><dd>Confirm this, since there's only one implementation of this at the moment.</dd></dl>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">rawY</td><td>Raw Y value from the touchscreen. </td></tr>
    <tr><td class="paramname">type</td><td>Type of event which gave us this coordinate value. </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>Screen Y of the touch, in pixels. </dd></dl>

</div>
</div>
<a class="anchor" id="aed6d8442ac3da98984a4ca00ad630b30"></a><!-- doxytag: member="HostArm::setAppDirectRenderingLayerEnabled" ref="aed6d8442ac3da98984a4ca00ad630b30" args="(bool enable)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classHostArm.htm#aed6d8442ac3da98984a4ca00ad630b30">HostArm::setAppDirectRenderingLayerEnabled</a> </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>enable</em></td><td>)</td>
          <td><code> [protected, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Unknown purpose at this time</p>
<p>This is used in very few other places, so I don't know exactly what it's used for. On ARM devices, executes an FBIO command that I cannot currently find documentation for. Seems to have something to do with blanking.</p>
<dl class="todo"><dt><b><a class="el" href="todo.htm#_todo000015">Todo:</a></b></dt><dd>Document what this is used for and how it works once it's figured out.</dd></dl>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">enable</td><td>Unknown. </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented from <a class="el" href="classHostBase.htm#a8e75d775b407727518e9d202747e4ce6">HostBase</a>.</p>

</div>
</div>
<a class="anchor" id="aa797feaf368a0613258678274c452f03"></a><!-- doxytag: member="HostArm::setBluetoothKeyboardActive" ref="aa797feaf368a0613258678274c452f03" args="(bool active)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classHostArm.htm#aa797feaf368a0613258678274c452f03">HostArm::setBluetoothKeyboardActive</a> </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>active</em></td><td>)</td>
          <td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Enable/disable Bluetooth keyboards</p>
<dl class="todo"><dt><b><a class="el" href="todo.htm#_todo000018">Todo:</a></b></dt><dd>Verify that the documentation for this method is correct.</dd></dl>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">active</td><td>true to enable Bluetooth keyboards, false to disable </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented from <a class="el" href="classHostBase.htm#a90abfa30f83b6f66ac435a3baa4dcce4">HostBase</a>.</p>

</div>
</div>
<a class="anchor" id="a7d819c415ef5113bb13cb809736f16af"></a><!-- doxytag: member="HostArm::setCentralWidget" ref="a7d819c415ef5113bb13cb809736f16af" args="(QWidget *view)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classHostArm.htm#a7d819c415ef5113bb13cb809736f16af">HostArm::setCentralWidget</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classQWidget.htm">QWidget</a> *&#160;</td>
          <td class="paramname"><em>view</em></td><td>)</td>
          <td><code> [protected, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Sets the Qt widget that the display should reside in</p>
<p>Mostly unused except under the QtDesktop and Qemu hosts, where it is used to attach a keyboard remapping filter.</p>
<p>Called by <a class="el" href="classWindowServer.htm#a5095fe6ca0eed6945cc754fe2f87d2e1">WindowServer::WindowServer()</a>.</p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">view</td><td>Qt widget to display within. </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented from <a class="el" href="classHostBase.htm#a34c4fd34fe3322859382f3bc11443758">HostBase</a>.</p>

<p>Reimplemented in <a class="el" href="classHostArmQemu.htm#a48d951202fb92cc1394bfac684037c5d">HostArmQemu</a>.</p>

</div>
</div>
<a class="anchor" id="ac330087c411b5fbfcbce685b8e1ef73d"></a><!-- doxytag: member="HostArm::setRenderingLayerEnabled" ref="ac330087c411b5fbfcbce685b8e1ef73d" args="(bool enable)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classHostArm.htm#ac330087c411b5fbfcbce685b8e1ef73d">HostArm::setRenderingLayerEnabled</a> </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>enable</em></td><td>)</td>
          <td><code> [protected, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Unknown purpose at this time</p>
<p>Almost the same as <a class="el" href="classHostBase.htm#a8e75d775b407727518e9d202747e4ce6">HostBase::setAppDirectRenderingLayerEnabled</a>, but on a different fb device. Has something to do with blanking, but still don't really understand what this is used for.</p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">enable</td><td>Unknown. </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented from <a class="el" href="classHostBase.htm#a5ac0c673700f4ef06d46ec7cbf85239d">HostBase</a>.</p>

</div>
</div>
<a class="anchor" id="a3b459fdc063dee6483d9289f154a751a"></a><!-- doxytag: member="HostArm::setupInput" ref="a3b459fdc063dee6483d9289f154a751a" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classHostArm.htm#a3b459fdc063dee6483d9289f154a751a">HostArm::setupInput</a> </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Starts talking to this device's sensors</p>
<p>Calls both <a class="el" href="classHostArm.htm#a5e0fbcbf0780b2f06f1210c9f131d3d8">HostArm::getInputControlALS()</a> and <a class="el" href="classHostArm.htm#a5e85c0d6aa734edc8d7492b0cde1c2d0">HostArm::getInputControlProximity()</a> to connect to HAL for the sensors. After each, it also subscribes to notifiers for them so when either of them changes value an event is posted to our event queue.</p>
<dl class="see"><dt><b>See also:</b></dt><dd>QSocketNotifier </dd></dl>

</div>
</div>
<a class="anchor" id="affcce2079c29465a3f80593711d68951"></a><!-- doxytag: member="HostArm::show" ref="affcce2079c29465a3f80593711d68951" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classHostArm.htm#affcce2079c29465a3f80593711d68951">HostArm::show</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Grab access to the hardware (including the display and input devices) for use by LunaSysMgr</p>
<p>Run this when you're ready to start using the host to display things. It grabs exclusive access to the screen and input devices (on most devices) so it can actually start displaying graphics on the screen.</p>
<p>Must be overridden per-device since it's fairly device-specific what needs to be enabled to be able to run LunaSysMgr. </p>

<p>Reimplemented from <a class="el" href="classHostBase.htm#aefce63a753901dc2be5aaad540fc8f25">HostBase</a>.</p>

</div>
</div>
<a class="anchor" id="ab65be1f72b88c7b49a57656cd10f7aeb"></a><!-- doxytag: member="HostArm::shutdownInput" ref="ab65be1f72b88c7b49a57656cd10f7aeb" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classHostArm.htm#ab65be1f72b88c7b49a57656cd10f7aeb">HostArm::shutdownInput</a> </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Disconnects from HAL for each of the sensors</p>
<p>Sensors which are disconnected from include:</p>
<ul>
<li>Ambient light sensor.</li>
<li>Face proximity sensor.</li>
<li>Touch panel.</li>
<li>Control keys (probably either hardware switches or the keyboard).</li>
</ul>
<p>And closes down the HAL notifiers for:</p>
<ul>
<li>Face proximity sensor.</li>
<li>Ambient light sensor.</li>
</ul>
<dl class="todo"><dt><b><a class="el" href="todo.htm#_todo000009">Todo:</a></b></dt><dd>Figure out whether "control keys" refers to hardware switches or the keyboard. </dd></dl>

</div>
</div>
<a class="anchor" id="a8959d626843be01ef12baeb9fcd8541d"></a><!-- doxytag: member="HostArm::startService" ref="a8959d626843be01ef12baeb9fcd8541d" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classHostArm.htm#a8959d626843be01ef12baeb9fcd8541d">HostArm::startService</a> </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Attaches the main GLib event loop for this host to the IPC system</p>
<dl class="todo"><dt><b><a class="el" href="todo.htm#_todo000010">Todo:</a></b></dt><dd>Confirm this once LSRegister is publicly documented. </dd></dl>

</div>
</div>
<a class="anchor" id="ab997f5a0a3730a053cc3b9149fcad31b"></a><!-- doxytag: member="HostArm::stopService" ref="ab997f5a0a3730a053cc3b9149fcad31b" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classHostArm.htm#ab997f5a0a3730a053cc3b9149fcad31b">HostArm::stopService</a> </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Disconnects the main GLib event loop for this host from the IPC system</p>
<dl class="todo"><dt><b><a class="el" href="todo.htm#_todo000011">Todo:</a></b></dt><dd>Confirm this once LSUnregister is publicly documented. </dd></dl>

</div>
</div>
<a class="anchor" id="a8fd107b2fb0964f0e708dce2a7d96ddf"></a><!-- doxytag: member="HostArm::switchStateCallback" ref="a8fd107b2fb0964f0e708dce2a7d96ddf" args="(LSHandle *handle, LSMessage *msg, void *data)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="classHostArm.htm#a8fd107b2fb0964f0e708dce2a7d96ddf">HostArm::switchStateCallback</a> </td>
          <td>(</td>
          <td class="paramtype">LSHandle *&#160;</td>
          <td class="paramname"><em>handle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">LSMessage *&#160;</td>
          <td class="paramname"><em>msg</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>data</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static, protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Handle an event related to the hadware switches</p>
<p>Internal handler for switch state transitions. Reads the switch information in and translates it into either a <a class="el" href="">QEvent::KeyPress</a> or <a class="el" href="">QEvent::KeyRelease</a> based on the new value of the switch which is then dispatched to the active window's event queue.</p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">handle</td><td>IPC handle. </td></tr>
    <tr><td class="paramname">msg</td><td>IPC return value text. Must be in JSON format. See <a class="el" href="classHostArm.htm#ad0dace7ff1ce6094cf1950a3c30fd679">HostArm::getMsgValueInt()</a>. </td></tr>
    <tr><td class="paramname">data</td><td>Not a pointer, despite what it looks like. The switch that changed state. Can be SW_RINGER, SW_SLIDER, or SW_HEADPHONE_INSERT. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a574fc9862e334e9cced003a502330ec5"></a><!-- doxytag: member="HostArm::takeAppDirectRenderingScreenShot" ref="a574fc9862e334e9cced003a502330ec5" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">QImage <a class="el" href="classHostArm.htm#a574fc9862e334e9cced003a502330ec5">HostArm::takeAppDirectRenderingScreenShot</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const<code> [protected, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Takes a screenshot, including anything rendered directly to the display by an app</p>
<p>Currently only implemented on ARM devices, and on them is the same as a regular screenshot.</p>
<dl class="return"><dt><b>Returns:</b></dt><dd>An image showing the current state of the display, even if an app has drawn to it directly. </dd></dl>

<p>Reimplemented from <a class="el" href="classHostBase.htm#a77b77c3bf9d7a51d43e8109012046229">HostBase</a>.</p>

</div>
</div>
<a class="anchor" id="acdb52922ba3ec6d1885c47dc00693e56"></a><!-- doxytag: member="HostArm::takeScreenShot" ref="acdb52922ba3ec6d1885c47dc00693e56" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">QImage <a class="el" href="classHostArm.htm#acdb52922ba3ec6d1885c47dc00693e56">HostArm::takeScreenShot</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const<code> [protected, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Takes a screenshot</p>
<p>Currently only implemented on ARM devices.</p>
<dl class="return"><dt><b>Returns:</b></dt><dd>An image showing the current state of the display. </dd></dl>

<p>Reimplemented from <a class="el" href="classHostBase.htm#a4eb89f53ab0a1f0295deeec6ef1e86d4">HostBase</a>.</p>

</div>
</div>
<a class="anchor" id="a20600a23ab56027f41d04ad5215c75b5"></a><!-- doxytag: member="HostArm::wakeUpLcd" ref="a20600a23ab56027f41d04ad5215c75b5" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classHostArm.htm#a20600a23ab56027f41d04ad5215c75b5">HostArm::wakeUpLcd</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [protected, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Turns the LCD on</p>
<p>Not much more to say about this one. The function of it is pretty straightforward. </p>

<p>Reimplemented in <a class="el" href="classHostArmPixie.htm#ad7221272f42faa8a2d73597ac309feba">HostArmPixie</a>.</p>

</div>
</div>
<hr/><h2>Member Data Documentation</h2>
<a class="anchor" id="a387467fdc5e20baceecc37cefe9c3793"></a><!-- doxytag: member="HostArm::m_bluetoothKeyboardActive" ref="a387467fdc5e20baceecc37cefe9c3793" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="classHostArm.htm#a387467fdc5e20baceecc37cefe9c3793">HostArm::m_bluetoothKeyboardActive</a><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Whether or not a Bluetooth keyboard is active</p>
<p>Set by <a class="el" href="classHostArm.htm#aa797feaf368a0613258678274c452f03">HostArm::setBluetoothKeyboardActive()</a>. </p>

</div>
</div>
<a class="anchor" id="afa74cff160f96b95de6fead7edf2ae90"></a><!-- doxytag: member="HostArm::m_fb0Buffer" ref="afa74cff160f96b95de6fead7edf2ae90" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void* <a class="el" href="classHostArm.htm#afa74cff160f96b95de6fead7edf2ae90">HostArm::m_fb0Buffer</a><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Memory-mapped pointer to /dev/fb0</p>
<p>Write pixel data to this to display it. </p>

</div>
</div>
<a class="anchor" id="aebf5c17cfee39295c0d3ed42a65b94c7"></a><!-- doxytag: member="HostArm::m_fb0Fd" ref="aebf5c17cfee39295c0d3ed42a65b94c7" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classint.htm">int</a> <a class="el" href="classHostArm.htm#aebf5c17cfee39295c0d3ed42a65b94c7">HostArm::m_fb0Fd</a><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>File descriptor for the first framebuffer device (/dev/fb0, the LCD)</p>
<p>Initialized by <a class="el" href="classHostArm.htm#afdb1270ae2387bc9240f2c70544025ef">HostArm::init()</a>. </p>

</div>
</div>
<a class="anchor" id="a7a076e7d012b243fbb4ba8e5cf40d1b7"></a><!-- doxytag: member="HostArm::m_fb0NumBuffers" ref="a7a076e7d012b243fbb4ba8e5cf40d1b7" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classint.htm">int</a> <a class="el" href="classHostArm.htm#a7a076e7d012b243fbb4ba8e5cf40d1b7">HostArm::m_fb0NumBuffers</a><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Number of buffers successfully memory mapped for /dev/fb0</p>
<p>Looks like this is where you can tell how many back buffers have been enabled for the device (in addition to the main buffer). This should be the total number of buffers for the device, including back buffers.</p>
<dl class="todo"><dt><b><a class="el" href="todo.htm#_todo000005">Todo:</a></b></dt><dd>Confirm the documentation on this. </dd></dl>

</div>
</div>
<a class="anchor" id="aac84c466cb884fad04984d3cd1fbec07"></a><!-- doxytag: member="HostArm::m_fb1Buffer" ref="aac84c466cb884fad04984d3cd1fbec07" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void* <a class="el" href="classHostArm.htm#aac84c466cb884fad04984d3cd1fbec07">HostArm::m_fb1Buffer</a><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Memory-mapped pointer to /dev/fb1</p>
<p>Write pixel data to this to display it to /dev/fb1. </p>

</div>
</div>
<a class="anchor" id="af45ad66eb3c1f5de79e5155cd9720ed0"></a><!-- doxytag: member="HostArm::m_fb1Fd" ref="af45ad66eb3c1f5de79e5155cd9720ed0" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classint.htm">int</a> <a class="el" href="classHostArm.htm#af45ad66eb3c1f5de79e5155cd9720ed0">HostArm::m_fb1Fd</a><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>File descriptor for the secondary framebuffer device (/dev/fb1, for direct rendering)</p>
<p>Initialized by <a class="el" href="classHostArm.htm#afdb1270ae2387bc9240f2c70544025ef">HostArm::init()</a>. </p>

</div>
</div>
<a class="anchor" id="ad247f0982277462974527e276db9031f"></a><!-- doxytag: member="HostArm::m_fb1NumBuffers" ref="ad247f0982277462974527e276db9031f" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classint.htm">int</a> <a class="el" href="classHostArm.htm#ad247f0982277462974527e276db9031f">HostArm::m_fb1NumBuffers</a><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Number of buffers successfully memory mapped for /dev/fb1</p>
<p>Looks like this is where you can tell how many back buffers have been enabled for the device (in addition to the main buffer). This should be the total number of buffers for the device, including back buffers.</p>
<dl class="todo"><dt><b><a class="el" href="todo.htm#_todo000006">Todo:</a></b></dt><dd>Confirm the documentation on this. </dd></dl>

</div>
</div>
<a class="anchor" id="a96dc9e1b078f6fd0a90d2cd36e67309a"></a><!-- doxytag: member="HostArm::m_halInputControlALS" ref="a96dc9e1b078f6fd0a90d2cd36e67309a" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classInputControl.htm">InputControl</a>* <a class="el" href="classHostArm.htm#a96dc9e1b078f6fd0a90d2cd36e67309a">HostArm::m_halInputControlALS</a><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>HAL input control for the ambient light sensor</p>
<p>Initialized in <a class="el" href="classHostArm.htm#a5e0fbcbf0780b2f06f1210c9f131d3d8">HostArm::getInputControlALS()</a>. </p>

</div>
</div>
<a class="anchor" id="ad8bded0c6911c52a5b3aaacca3ecc4f2"></a><!-- doxytag: member="HostArm::m_halInputControlBluetoothInputDetect" ref="ad8bded0c6911c52a5b3aaacca3ecc4f2" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classInputControl.htm">InputControl</a>* <a class="el" href="classHostArm.htm#ad8bded0c6911c52a5b3aaacca3ecc4f2">HostArm::m_halInputControlBluetoothInputDetect</a><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>HAL input control for the whether or not a Bluetooth input device is connected</p>
<p>Initialized in <a class="el" href="classHostArm.htm#a2d3055444437d6d317c5181ba82022e7">HostArm::getInputControlBluetoothInputDetect()</a>.</p>
<dl class="todo"><dt><b><a class="el" href="todo.htm#_todo000007">Todo:</a></b></dt><dd>Confirm that this is what the Bluetooth input detect input control is for. </dd></dl>

</div>
</div>
<a class="anchor" id="ae7275d4180fdc7f249535f20f9a32978"></a><!-- doxytag: member="HostArm::m_halInputControlKeys" ref="ae7275d4180fdc7f249535f20f9a32978" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classInputControl.htm">InputControl</a>* <a class="el" href="classHostArm.htm#ae7275d4180fdc7f249535f20f9a32978">HostArm::m_halInputControlKeys</a><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>HAL input control for the keyboard</p>
<p>Initialized in <a class="el" href="classHostArm.htm#a358b89ea56aea621256391bda37d0b93">HostArm::getInputControlKeys()</a>.</p>
<dl class="todo"><dt><b><a class="el" href="todo.htm#_todo000008">Todo:</a></b></dt><dd>Confirm that this is in fact for the keyboard. </dd></dl>

</div>
</div>
<a class="anchor" id="a240ecee01938faddc8a7befa31f1a2d7"></a><!-- doxytag: member="HostArm::m_halInputControlProx" ref="a240ecee01938faddc8a7befa31f1a2d7" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classInputControl.htm">InputControl</a>* <a class="el" href="classHostArm.htm#a240ecee01938faddc8a7befa31f1a2d7">HostArm::m_halInputControlProx</a><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>HAL input control for the face proximity sensor</p>
<p>Initialized in <a class="el" href="classHostArm.htm#a5e85c0d6aa734edc8d7492b0cde1c2d0">HostArm::getInputControlProximity()</a>. </p>

</div>
</div>
<a class="anchor" id="a045d43315129c6ed895875457cebb58e"></a><!-- doxytag: member="HostArm::m_halInputControlTouchpanel" ref="a045d43315129c6ed895875457cebb58e" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classInputControl.htm">InputControl</a>* <a class="el" href="classHostArm.htm#a045d43315129c6ed895875457cebb58e">HostArm::m_halInputControlTouchpanel</a><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>HAL input control for the touch panel</p>
<p>Initialized in <a class="el" href="classHostArm.htm#aeec700787178cd33745ad94584007343">HostArm::getInputControlTouchpanel()</a>. </p>

</div>
</div>
<a class="anchor" id="ad3b12ae1de9ef34bbe60d21222a8fced"></a><!-- doxytag: member="HostArm::m_halLightNotifier" ref="ad3b12ae1de9ef34bbe60d21222a8fced" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">QSocketNotifier* <a class="el" href="classHostArm.htm#ad3b12ae1de9ef34bbe60d21222a8fced">HostArm::m_halLightNotifier</a><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Watches for changes in the ambient light sensor value and posts events to the event queue when they occur</p>
<p>Initialized by <a class="el" href="classHostArm.htm#a3b459fdc063dee6483d9289f154a751a">HostArm::setupInput()</a>.</p>
<dl class="see"><dt><b>See also:</b></dt><dd>QSocketNotifier </dd>
<dd>
<a class="el" href="classHostArm.htm#a3b459fdc063dee6483d9289f154a751a">HostArm::setupInput()</a> </dd></dl>

</div>
</div>
<a class="anchor" id="a20ac97ed098442e1e7ab4f7a21623aaa"></a><!-- doxytag: member="HostArm::m_halProxNotifier" ref="a20ac97ed098442e1e7ab4f7a21623aaa" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">QSocketNotifier* <a class="el" href="classHostArm.htm#a20ac97ed098442e1e7ab4f7a21623aaa">HostArm::m_halProxNotifier</a><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Watches for changes in the face proximity sensor value and posts events to the event queue when they occur</p>
<p>Initialized by <a class="el" href="classHostArm.htm#a3b459fdc063dee6483d9289f154a751a">HostArm::setupInput()</a>.</p>
<dl class="see"><dt><b>See also:</b></dt><dd>QSocketNotifier </dd>
<dd>
<a class="el" href="classHostArm.htm#a3b459fdc063dee6483d9289f154a751a">HostArm::setupInput()</a> </dd></dl>

</div>
</div>
<a class="anchor" id="a9402c47737254dbe01a6f16f8355d493"></a><!-- doxytag: member="HostArm::m_hwPlatform" ref="a9402c47737254dbe01a6f16f8355d493" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">HidHardwarePlatform_t <a class="el" href="classHostArm.htm#a9402c47737254dbe01a6f16f8355d493">HostArm::m_hwPlatform</a><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Hardware platform</p>
<p>Initialized by the constructor (<a class="el" href="classHostArm.htm#ab784efc88b45b4fe1e4442a1a6014304">HostArm::HostArm()</a> via <a class="el" href="">HidGetHardwarePlatform()</a>.</p>
<dl class="todo"><dt><b><a class="el" href="todo.htm#_todo000004">Todo:</a></b></dt><dd>Document this more fully once HidGetHardwarePlatform() is publicly documented. </dd></dl>

</div>
</div>
<a class="anchor" id="a2265f4cc6ab7c1b6eb001336df975fa3"></a><!-- doxytag: member="HostArm::m_hwRev" ref="a2265f4cc6ab7c1b6eb001336df975fa3" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">HidHardwareRevision_t <a class="el" href="classHostArm.htm#a2265f4cc6ab7c1b6eb001336df975fa3">HostArm::m_hwRev</a><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>Hardware revision</p>
<p>Initialized by the constructor (<a class="el" href="classHostArm.htm#ab784efc88b45b4fe1e4442a1a6014304">HostArm::HostArm()</a> via <a class="el" href="">HidGetHardwareRevision()</a>.</p>
<dl class="todo"><dt><b><a class="el" href="todo.htm#_todo000003">Todo:</a></b></dt><dd>Document this more fully once HidGetHardwareRevision() is publicly documented. </dd></dl>

</div>
</div>
<a class="anchor" id="a525e5e3e59a15cee99fa8af66ee379a0"></a><!-- doxytag: member="HostArm::m_OrientationSensor" ref="a525e5e3e59a15cee99fa8af66ee379a0" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classHALOrientationSensorConnector.htm">HALOrientationSensorConnector</a>* <a class="el" href="classHostArm.htm#a525e5e3e59a15cee99fa8af66ee379a0">HostArm::m_OrientationSensor</a><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>HAL sensor connector for the orientation sensor</p>
<p>Initialized, enabled, and disabled by <a class="el" href="classHostArm.htm#a58a0850f8fa5a17e1288527458e4b68f">HostArm::OrientationSensorOn()</a>. </p>

</div>
</div>
<a class="anchor" id="a24b12b5300a69e884340c4a687e304fb"></a><!-- doxytag: member="HostArm::m_service" ref="a24b12b5300a69e884340c4a687e304fb" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">LSHandle* <a class="el" href="classHostArm.htm#a24b12b5300a69e884340c4a687e304fb">HostArm::m_service</a><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">
<p>IPC system connection</p>
<p>Appears to be initialized by <a class="el" href="classHostArm.htm#a8959d626843be01ef12baeb9fcd8541d">HostArm::startService()</a>. </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="HostArm_8h_source.htm">HostArm.h</a></li>
<li><a class="el" href="HostArm_8cpp.htm">HostArm.cpp</a></li>
</ul>
</div><!-- contents -->
</div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Properties</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Defines</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="classHostArm.htm">HostArm</a>      </li>

    <li class="footer">Generated on Fri Oct 5 2012 19:52:28 for LunaSysMgr by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.6.1 </li>
   </ul>
 </div>


</body>
</html>
