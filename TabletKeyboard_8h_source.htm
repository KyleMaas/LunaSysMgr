<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>LunaSysMgr: TabletKeyboard.h Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>

</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">LunaSysMgr
   
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
      <li><a href="dirs.htm"><span>Directories</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.htm"><span>File&#160;List</span></a></li>
      <li><a href="globals.htm"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('TabletKeyboard_8h.htm','');
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">TabletKeyboard.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="TabletKeyboard_8h.htm">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/* @@@LICENSE</span>
<a name="l00002"></a>00002 <span class="comment">*</span>
<a name="l00003"></a>00003 <span class="comment">*      Copyright (c) 2010-2012 Hewlett-Packard Development Company, L.P.</span>
<a name="l00004"></a>00004 <span class="comment">*                    2012 MÃ¥ns Andersson &lt;mail@mansandersson.se&gt;</span>
<a name="l00005"></a>00005 <span class="comment">*</span>
<a name="l00006"></a>00006 <span class="comment">* Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span>
<a name="l00007"></a>00007 <span class="comment">* you may not use this file except in compliance with the License.</span>
<a name="l00008"></a>00008 <span class="comment">* You may obtain a copy of the License at</span>
<a name="l00009"></a>00009 <span class="comment">*</span>
<a name="l00010"></a>00010 <span class="comment">* http://www.apache.org/licenses/LICENSE-2.0</span>
<a name="l00011"></a>00011 <span class="comment">*</span>
<a name="l00012"></a>00012 <span class="comment">* Unless required by applicable law or agreed to in writing, software</span>
<a name="l00013"></a>00013 <span class="comment">* distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span>
<a name="l00014"></a>00014 <span class="comment">* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span>
<a name="l00015"></a>00015 <span class="comment">* See the License for the specific language governing permissions and</span>
<a name="l00016"></a>00016 <span class="comment">* limitations under the License.</span>
<a name="l00017"></a>00017 <span class="comment">*</span>
<a name="l00018"></a>00018 <span class="comment">* LICENSE@@@ */</span>
<a name="l00019"></a>00019 
<a name="l00020"></a>00020 
<a name="l00021"></a>00021 
<a name="l00022"></a>00022 
<a name="l00023"></a>00023 <span class="preprocessor">#ifndef TABLET_KEYBOARD_H</span>
<a name="l00024"></a>00024 <span class="preprocessor"></span><span class="preprocessor">#define TABLET_KEYBOARD_H</span>
<a name="l00025"></a>00025 <span class="preprocessor"></span>
<a name="l00026"></a>00026 <span class="preprocessor">#include &lt;qpixmap.h&gt;</span>
<a name="l00027"></a>00027 <span class="preprocessor">#include &lt;qtimer.h&gt;</span>
<a name="l00028"></a>00028 
<a name="l00029"></a>00029 <span class="preprocessor">#include &lt;map&gt;</span>
<a name="l00030"></a>00030 <span class="preprocessor">#include &lt;stdint.h&gt;</span>
<a name="l00031"></a>00031 
<a name="l00032"></a>00032 <span class="preprocessor">#include &quot;<a class="code" href="VirtualKeyboard_8h.htm">VirtualKeyboard.h</a>&quot;</span>
<a name="l00033"></a>00033 <span class="preprocessor">#include &quot;<a class="code" href="TabletKeymap_8h.htm">TabletKeymap.h</a>&quot;</span>
<a name="l00034"></a>00034 <span class="preprocessor">#include &quot;<a class="code" href="IMEPixmap_8h.htm">IMEPixmap.h</a>&quot;</span>
<a name="l00035"></a>00035 <span class="preprocessor">#include &quot;<a class="code" href="GlyphCache_8h.htm">GlyphCache.h</a>&quot;</span>
<a name="l00036"></a>00036 <span class="preprocessor">#include &quot;<a class="code" href="ShortcutsHandler_8h.htm">ShortcutsHandler.h</a>&quot;</span>
<a name="l00037"></a>00037 <span class="preprocessor">#include &quot;<a class="code" href="CandidateBar_8h.htm">CandidateBar.h</a>&quot;</span>
<a name="l00038"></a>00038 
<a name="l00039"></a>00039 <span class="keyword">namespace </span>Tablet_Keyboard {
<a name="l00040"></a>00040 
<a name="l00041"></a>00041 <span class="comment">/*</span>
<a name="l00042"></a>00042 <span class="comment">                                                 m_keymap.rect.width()</span>
<a name="l00043"></a>00043 <span class="comment">&lt;----------- m_IMEDataInterface-&gt;m_availableSpace.get().width() -----------&gt;</span>
<a name="l00044"></a>00044 <span class="comment">|--------------------------------------------------------------------------|</span>
<a name="l00045"></a>00045 <span class="comment">|                                                                          |</span>
<a name="l00046"></a>00046 <span class="comment">|                                                                          |</span>
<a name="l00047"></a>00047 <span class="comment">|                                                                          |</span>
<a name="l00048"></a>00048 <span class="comment">|                                                                          |</span>
<a name="l00049"></a>00049 <span class="comment">|                            Application Space                             |</span>
<a name="l00050"></a>00050 <span class="comment">|                                                                          |</span>
<a name="l00051"></a>00051 <span class="comment">|                                                                          |</span>
<a name="l00052"></a>00052 <span class="comment">|                                                                          |</span>
<a name="l00053"></a>00053 <span class="comment">|                                                                          |</span>
<a name="l00054"></a>00054 <span class="comment">|----^---------------------------------------------------------------------|--^</span>
<a name="l00055"></a>00055 <span class="comment">|    | m_keyboardTopPading  (extra space above keys)                       |  |</span>
<a name="l00056"></a>00056 <span class="comment">|----V--^------------------------------------------------------------------|  |</span>
<a name="l00057"></a>00057 <span class="comment">|       |                                                                  |  |</span>
<a name="l00058"></a>00058 <span class="comment">|       |                                                                  |  |  requestHeight(), requestedHeight(), setKeyboardHeight() affect this dimension!</span>
<a name="l00059"></a>00059 <span class="comment">|       | m_keymap.rect.height()                                           |  |</span>
<a name="l00060"></a>00060 <span class="comment">|       |                                                                  |  |                  Space used by the keyboard, as seen by the user.</span>
<a name="l00061"></a>00061 <span class="comment">|       |                                                                  |  |</span>
<a name="l00062"></a>00062 <span class="comment">|-------V------------------------------------------------------------------|--V</span>
<a name="l00063"></a>00063 <span class="comment"></span>
<a name="l00064"></a>00064 <span class="comment">*/</span>
<a name="l00065"></a>00065 
<a name="l00066"></a>00066 <span class="comment">// specs type used in GlyphCache&lt;T&gt; for the tablet</span>
<a name="l00067"></a><a class="code" href="structTablet__Keyboard_1_1GlyphSpec.htm">00067</a> <span class="keyword">struct </span><a class="code" href="structTablet__Keyboard_1_1GlyphSpec.htm">GlyphSpec</a> {
<a name="l00068"></a><a class="code" href="structTablet__Keyboard_1_1GlyphSpec.htm#aa304212e465639a19974b8474d5b8607">00068</a>         <a class="code" href="structTablet__Keyboard_1_1GlyphSpec.htm#aa304212e465639a19974b8474d5b8607">GlyphSpec</a>(QString <span class="keywordtype">string</span> = QString(), <span class="keywordtype">int</span> fontSize = 0, <span class="keywordtype">bool</span> bold = <span class="keyword">false</span>, <span class="keyword">const</span> QColor &amp; frontColor = QColor(), <span class="keyword">const</span> QColor &amp; backColor = QColor()) : <a class="code" href="structTablet__Keyboard_1_1GlyphSpec.htm#ae3d02041e84857fb3b11c7293ae45d7f">m_string</a>(string), <a class="code" href="structTablet__Keyboard_1_1GlyphSpec.htm#a2ed3e59622602a947fb56afbde4bd422">m_fontSize</a>(fontSize), <a class="code" href="structTablet__Keyboard_1_1GlyphSpec.htm#a1573fede9d61c9b4e81d4baead5fcacf">m_bold</a>(bold), <a class="code" href="structTablet__Keyboard_1_1GlyphSpec.htm#a99aa78799fc494266ea2a8406367ffb8">m_frontColor</a>(frontColor), <a class="code" href="structTablet__Keyboard_1_1GlyphSpec.htm#aa31cea9b09f4d8fcd1d60c97cee76c14">m_backColor</a>(backColor) {}
<a name="l00069"></a>00069 
<a name="l00070"></a><a class="code" href="structTablet__Keyboard_1_1GlyphSpec.htm#a25284eb825ef2c339b3aed3bbcdf3323">00070</a>         <span class="keywordtype">bool</span> <a class="code" href="structTablet__Keyboard_1_1GlyphSpec.htm#a25284eb825ef2c339b3aed3bbcdf3323">operator&lt;</a>(<span class="keyword">const</span> <a class="code" href="structTablet__Keyboard_1_1GlyphSpec.htm">GlyphSpec</a> &amp; rhs)<span class="keyword"> const</span>
<a name="l00071"></a>00071 <span class="keyword">        </span>{
<a name="l00072"></a>00072                 <span class="keywordflow">if</span> (<a class="code" href="structTablet__Keyboard_1_1GlyphSpec.htm#a2ed3e59622602a947fb56afbde4bd422">m_fontSize</a> &lt; rhs.<a class="code" href="structTablet__Keyboard_1_1GlyphSpec.htm#a2ed3e59622602a947fb56afbde4bd422">m_fontSize</a>)
<a name="l00073"></a>00073                         <span class="keywordflow">return</span> <span class="keyword">true</span>;
<a name="l00074"></a>00074                 <span class="keywordflow">if</span> (<a class="code" href="structTablet__Keyboard_1_1GlyphSpec.htm#a2ed3e59622602a947fb56afbde4bd422">m_fontSize</a> == rhs.<a class="code" href="structTablet__Keyboard_1_1GlyphSpec.htm#a2ed3e59622602a947fb56afbde4bd422">m_fontSize</a>)
<a name="l00075"></a>00075                 {
<a name="l00076"></a>00076                         <span class="keywordtype">int</span> stringCompare = <a class="code" href="structTablet__Keyboard_1_1GlyphSpec.htm#ae3d02041e84857fb3b11c7293ae45d7f">m_string</a>.compare(rhs.<a class="code" href="structTablet__Keyboard_1_1GlyphSpec.htm#ae3d02041e84857fb3b11c7293ae45d7f">m_string</a>);
<a name="l00077"></a>00077                         <span class="keywordflow">return</span> (stringCompare &lt; 0 || (stringCompare == 0 &amp;&amp; <a class="code" href="structTablet__Keyboard_1_1GlyphSpec.htm#a99aa78799fc494266ea2a8406367ffb8">m_frontColor</a>.rgba() &lt; rhs.<a class="code" href="structTablet__Keyboard_1_1GlyphSpec.htm#a99aa78799fc494266ea2a8406367ffb8">m_frontColor</a>.rgba()));
<a name="l00078"></a>00078                 }
<a name="l00079"></a>00079                 <span class="keywordflow">return</span> <span class="keyword">false</span>;
<a name="l00080"></a>00080         }
<a name="l00081"></a>00081 
<a name="l00082"></a><a class="code" href="structTablet__Keyboard_1_1GlyphSpec.htm#aec99936a63dfd307b96a62fae1dd407f">00082</a>         <span class="keywordtype">void</span> <a class="code" href="structTablet__Keyboard_1_1GlyphSpec.htm#aec99936a63dfd307b96a62fae1dd407f">applyFontSettings</a>(QFont &amp; font)<span class="keyword"> const</span>
<a name="l00083"></a>00083 <span class="keyword">        </span>{
<a name="l00084"></a>00084                 font.setPixelSize(<a class="code" href="structTablet__Keyboard_1_1GlyphSpec.htm#a2ed3e59622602a947fb56afbde4bd422">m_fontSize</a>);
<a name="l00085"></a>00085                 font.setBold(<a class="code" href="structTablet__Keyboard_1_1GlyphSpec.htm#a1573fede9d61c9b4e81d4baead5fcacf">m_bold</a>);
<a name="l00086"></a>00086         }
<a name="l00087"></a>00087 
<a name="l00088"></a><a class="code" href="structTablet__Keyboard_1_1GlyphSpec.htm#a5f27654609fdca5ca6b094bddcfb926b">00088</a>         QString         <a class="code" href="structTablet__Keyboard_1_1GlyphSpec.htm#a5f27654609fdca5ca6b094bddcfb926b">description</a>()<span class="keyword"> const</span>
<a name="l00089"></a>00089 <span class="keyword">        </span>{
<a name="l00090"></a>00090                 <span class="keywordflow">return</span> QString(<span class="stringliteral">&quot;&#39;&quot;</span>) + <a class="code" href="structTablet__Keyboard_1_1GlyphSpec.htm#ae3d02041e84857fb3b11c7293ae45d7f">m_string</a> + <span class="stringliteral">&quot;&#39;, font size: &quot;</span> + QString::number(<a class="code" href="structTablet__Keyboard_1_1GlyphSpec.htm#a2ed3e59622602a947fb56afbde4bd422">m_fontSize</a>) + <span class="stringliteral">&quot;, &quot;</span> + (<a class="code" href="structTablet__Keyboard_1_1GlyphSpec.htm#a1573fede9d61c9b4e81d4baead5fcacf">m_bold</a> ? <span class="stringliteral">&quot;bold&quot;</span> : <span class="stringliteral">&quot;plain&quot;</span>);
<a name="l00091"></a>00091         }
<a name="l00092"></a>00092 
<a name="l00093"></a><a class="code" href="structTablet__Keyboard_1_1GlyphSpec.htm#ae3d02041e84857fb3b11c7293ae45d7f">00093</a>         QString         <a class="code" href="structTablet__Keyboard_1_1GlyphSpec.htm#ae3d02041e84857fb3b11c7293ae45d7f">m_string</a>;
<a name="l00094"></a><a class="code" href="structTablet__Keyboard_1_1GlyphSpec.htm#a2ed3e59622602a947fb56afbde4bd422">00094</a>         <span class="keywordtype">int</span>                     <a class="code" href="structTablet__Keyboard_1_1GlyphSpec.htm#a2ed3e59622602a947fb56afbde4bd422">m_fontSize</a>;
<a name="l00095"></a><a class="code" href="structTablet__Keyboard_1_1GlyphSpec.htm#a1573fede9d61c9b4e81d4baead5fcacf">00095</a>         <span class="keywordtype">bool</span>            <a class="code" href="structTablet__Keyboard_1_1GlyphSpec.htm#a1573fede9d61c9b4e81d4baead5fcacf">m_bold</a>;
<a name="l00096"></a><a class="code" href="structTablet__Keyboard_1_1GlyphSpec.htm#a99aa78799fc494266ea2a8406367ffb8">00096</a>         QColor          <a class="code" href="structTablet__Keyboard_1_1GlyphSpec.htm#a99aa78799fc494266ea2a8406367ffb8">m_frontColor</a>;
<a name="l00097"></a><a class="code" href="structTablet__Keyboard_1_1GlyphSpec.htm#aa31cea9b09f4d8fcd1d60c97cee76c14">00097</a>         QColor          <a class="code" href="structTablet__Keyboard_1_1GlyphSpec.htm#aa31cea9b09f4d8fcd1d60c97cee76c14">m_backColor</a>;
<a name="l00098"></a>00098 };
<a name="l00099"></a>00099 
<a name="l00100"></a><a class="code" href="classTablet__Keyboard_1_1TabletKeyboard.htm">00100</a> <span class="keyword">class </span><a class="code" href="classTablet__Keyboard_1_1TabletKeyboard.htm">TabletKeyboard</a> : <span class="keyword">public</span> <a class="code" href="classVirtualKeyboard.htm">VirtualKeyboard</a>
<a name="l00101"></a>00101 {
<a name="l00102"></a>00102         Q_OBJECT
<a name="l00103"></a>00103 
<a name="l00104"></a>00104         <span class="keyword">struct </span>Touch
<a name="l00105"></a>00105         {
<a name="l00106"></a>00106                 Touch() : m_lastTouchTime(0), m_keyCoordinate(-1, -1), m_visible(<span class="keyword">true</span>), m_consumed(<span class="keyword">false</span>), m_inCandidateBar(<span class="keyword">false</span>) {}
<a name="l00107"></a>00107 
<a name="l00108"></a>00108                 uint64_t        m_lastTouchTime;
<a name="l00109"></a>00109                 QPointF         m_lastPosition;         <span class="comment">// coordinate in pixels in keymap area</span>
<a name="l00110"></a>00110                 QPointF         m_firstPosition;        <span class="comment">// coordinate in pixels in keymap area</span>
<a name="l00111"></a>00111                 QPoint          m_keyCoordinate;        <span class="comment">// coordinate in key layout (1, 1) is second key from the left of second row...</span>
<a name="l00112"></a>00112                 <span class="keywordtype">bool</span>            m_visible;
<a name="l00113"></a>00113                 <span class="keywordtype">bool</span>            m_consumed;
<a name="l00114"></a>00114                 <span class="keywordtype">bool</span>            m_inCandidateBar;
<a name="l00115"></a>00115         };
<a name="l00116"></a>00116 
<a name="l00117"></a>00117         <span class="keyword">template</span> &lt;<span class="keyword">class</span> T&gt; T selectFromKeyType(<a class="code" href="namespaceTablet__Keyboard.htm#a2ac789b18d56d85f455e4dcb0bb2608a">UKey</a> key, T letter, T functionKeys, T otherKeys)
<a name="l00118"></a>00118         {
<a name="l00119"></a>00119                 <span class="keywordflow">if</span> (<a class="code" href="namespaceTablet__Keyboard.htm#afadd88c349e109f21a449f1d909e968a">UKeyIsFunctionKey</a>(key) &amp;&amp; !<a class="code" href="namespaceTablet__Keyboard.htm#aa45b2fc1f4b80e2004d606846c9ba25b">UKeyIsTextShortcutKey</a>(key))
<a name="l00120"></a>00120                 {
<a name="l00121"></a>00121                         <span class="keywordflow">return</span> functionKeys;
<a name="l00122"></a>00122                 }
<a name="l00123"></a>00123                 <span class="keywordflow">if</span> (<a class="code" href="namespaceTablet__Keyboard.htm#a8951c54b24cf688010689071f11d746c">UKeyIsCharacter</a>(key) || key == Qt::Key_Space)
<a name="l00124"></a>00124                 {
<a name="l00125"></a>00125                         <span class="keywordflow">return</span> letter;
<a name="l00126"></a>00126                 }
<a name="l00127"></a>00127                 
<a name="l00128"></a>00128                 <span class="keywordflow">return</span> otherKeys;
<a name="l00129"></a>00129         }
<a name="l00130"></a>00130 
<a name="l00131"></a>00131 <span class="keyword">public</span>:
<a name="l00132"></a>00132         <a class="code" href="classTablet__Keyboard_1_1TabletKeyboard.htm#a9b137609e4ec855ffe63abe554565db6">TabletKeyboard</a>(<a class="code" href="classIMEDataInterface.htm">IMEDataInterface</a> * dataInterface);
<a name="l00133"></a>00133         <span class="keyword">virtual</span> <a class="code" href="classTablet__Keyboard_1_1TabletKeyboard.htm#aabd515a4e5a9e8e1419eb4c48a21f7b9">~TabletKeyboard</a>();
<a name="l00134"></a>00134 
<a name="l00135"></a>00135         <span class="comment">// For debug purposes, to implement luna-send command on an existing instance</span>
<a name="l00136"></a><a class="code" href="classTablet__Keyboard_1_1TabletKeyboard.htm#aeab7b6840e3e2116f72b29267742a285">00136</a>         <span class="keyword">static</span> <a class="code" href="classTablet__Keyboard_1_1TabletKeyboard.htm">TabletKeyboard</a> * <a class="code" href="classTablet__Keyboard_1_1TabletKeyboard.htm#aeab7b6840e3e2116f72b29267742a285">getExistingInstance</a>()           { <span class="keywordflow">return</span> s_instance; }
<a name="l00137"></a>00137 
<a name="l00138"></a>00138         <span class="keywordtype">void</span>    <a class="code" href="classTablet__Keyboard_1_1TabletKeyboard.htm#aa6ed1d286af4298a14a7833dd67a2878">requestSize</a>(<span class="keywordtype">int</span> size);
<a name="l00139"></a>00139         <span class="keywordtype">void</span>    <a class="code" href="classTablet__Keyboard_1_1TabletKeyboard.htm#a6478fc5dd60404eee0c1b1c18c33119c">requestHeight</a>(<span class="keywordtype">int</span> height);
<a name="l00140"></a>00140         <span class="keywordtype">void</span>    <a class="code" href="classTablet__Keyboard_1_1TabletKeyboard.htm#af51df781eb42368eddac8488c1bcd43a">changePresetHeightForSize</a>(<span class="keywordtype">int</span> size, <span class="keywordtype">int</span> height);
<a name="l00141"></a>00141         <span class="keywordtype">bool</span>    <a class="code" href="classTablet__Keyboard_1_1TabletKeyboard.htm#a141a5cb25b04bbce23435c20b97c778f">setBoolOption</a>(<span class="keyword">const</span> std::string &amp; optionName, <span class="keywordtype">bool</span> value);
<a name="l00142"></a>00142         <span class="keywordtype">bool</span>    <a class="code" href="classTablet__Keyboard_1_1TabletKeyboard.htm#ade0bc6635e19de81f79341ea9dc8797c">setIntOption</a>(<span class="keyword">const</span> std::string &amp; optionName, <span class="keywordtype">int</span> value);
<a name="l00143"></a>00143         <span class="keywordtype">bool</span>    <a class="code" href="classTablet__Keyboard_1_1TabletKeyboard.htm#a389ba5dd535772a6816137d54717b5c4">getValue</a>(<span class="keyword">const</span> std::string &amp; name, std::string &amp; outValue);
<a name="l00144"></a>00144         <span class="keywordtype">void</span>    <a class="code" href="classTablet__Keyboard_1_1TabletKeyboard.htm#ae9a7900d24ed34ec59230e6e88e10084">setKeyboardCombo</a>(<span class="keyword">const</span> std::string &amp; keyboardLanguage, <span class="keyword">const</span> std::string &amp; keymap, <span class="keyword">const</span> std::string &amp; autoCorrectLanguage, <span class="keywordtype">bool</span> hasMoreThanOneKeyboardLayout);
<a name="l00145"></a><a class="code" href="classTablet__Keyboard_1_1TabletKeyboard.htm#a8af871399671721c17dd388f61857540">00145</a>         <span class="keywordtype">void</span>    <a class="code" href="classTablet__Keyboard_1_1TabletKeyboard.htm#a8af871399671721c17dd388f61857540">keyboardCombosChanged</a>()                                 { m_keymap.<a class="code" href="classTablet__Keyboard_1_1TabletKeymap.htm#a57db885d47eb355afb905e85c4251aef">keyboardCombosChanged</a>(); }   <span class="comment">// called by VirtualKeyboardPreferences when combos change</span>
<a name="l00146"></a>00146 
<a name="l00147"></a><a class="code" href="classTablet__Keyboard_1_1TabletKeyboard.htm#a998cc3ba01de9983ae2c79d30c19b245">00147</a>         QList&lt;const char *&gt;     <a class="code" href="classTablet__Keyboard_1_1TabletKeyboard.htm#a998cc3ba01de9983ae2c79d30c19b245">getLayoutNameList</a>()                     { <span class="keywordflow">return</span> m_keymap.<a class="code" href="classTablet__Keyboard_1_1TabletKeymap.htm#a000cc5ebb6a8244f1441d1a1308c9cc7">getLayoutList</a>(); }
<a name="l00148"></a><a class="code" href="classTablet__Keyboard_1_1TabletKeyboard.htm#afb80d3474169443e7ae907bde6662b22">00148</a>         <span class="keyword">const</span> <span class="keywordtype">char</span> *            <a class="code" href="classTablet__Keyboard_1_1TabletKeyboard.htm#afb80d3474169443e7ae907bde6662b22">getLayoutDefaultLanguage</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> * layoutName)               { <span class="keywordflow">return</span> m_keymap.<a class="code" href="classTablet__Keyboard_1_1TabletKeymap.htm#ae31d918d3c3f46c683ef32c527e535b3">getLayoutDefaultLanguage</a>(layoutName); }
<a name="l00149"></a>00149 
<a name="l00150"></a><a class="code" href="classTablet__Keyboard_1_1TabletKeyboard.htm#a6b7b1272186c10115f3969b72174b511">00150</a>         <span class="keywordtype">bool</span>    <a class="code" href="classTablet__Keyboard_1_1TabletKeyboard.htm#a6b7b1272186c10115f3969b72174b511">inLandscapeOrientation</a>()<span class="keyword"> const                  </span>{ <span class="keyword">const</span> QRect &amp; frame = <a class="code" href="classVirtualKeyboard.htm#aed09aef66bf78a2180bd383ddce0c259">m_IMEDataInterface</a>-&gt;<a class="code" href="classIMEDataInterface.htm#a43422600a87d1f0e46293f10136e1396">m_availableSpace</a>.<a class="code" href="classIMEData__QRect.htm#a59bba416378554336048df31c947398d">get</a>(); <span class="keywordflow">return</span> frame.width() &gt;= frame.height(); }
<a name="l00151"></a>00151 
<a name="l00152"></a>00152         <span class="keywordtype">bool</span>    <a class="code" href="classTablet__Keyboard_1_1TabletKeyboard.htm#a07bcf5f87d1f979433e6a0eba3539a1a">idle</a>();
<a name="l00153"></a>00153 
<a name="l00154"></a>00154 <span class="keyword">public</span> Q_SLOTS:
<a name="l00155"></a>00155         <span class="comment">// slots for IMEDataInterface signals</span>
<a name="l00156"></a>00156         <span class="keywordtype">void</span>    <a class="code" href="classTablet__Keyboard_1_1TabletKeyboard.htm#a066a6009afe18e6b4a42001d747a2943">availableSpaceChanged</a>(<span class="keyword">const</span> QRect &amp; size);
<a name="l00157"></a>00157         <span class="keywordtype">void</span>    <a class="code" href="classTablet__Keyboard_1_1TabletKeyboard.htm#a34939edd34bb35909b69e09ac99dfda3">visibleChanged</a>(<span class="keyword">const</span> <span class="keywordtype">bool</span> &amp; visible);
<a name="l00158"></a>00158         <span class="keywordtype">void</span>    <a class="code" href="classTablet__Keyboard_1_1TabletKeyboard.htm#a1e84b474202f77d87f35b2988c6ae040">editorStateChanged</a>(<span class="keyword">const</span> PalmIME::EditorState &amp; state);
<a name="l00159"></a>00159         <span class="keywordtype">void</span>    <a class="code" href="classTablet__Keyboard_1_1TabletKeyboard.htm#a7a91dc7a329d50d4c27e481a0c076029">autoCapChanged</a>(<span class="keyword">const</span> <span class="keywordtype">bool</span> &amp; autoCap);
<a name="l00160"></a>00160 
<a name="l00161"></a>00161         <span class="comment">// slots for candidate bar</span>
<a name="l00162"></a><a class="code" href="classTablet__Keyboard_1_1TabletKeyboard.htm#a4e16516cf380adefa58d569fc0be8b4d">00162</a>         <span class="keywordtype">void</span>    <a class="code" href="classTablet__Keyboard_1_1TabletKeyboard.htm#a4e16516cf380adefa58d569fc0be8b4d">triggerRepaint</a>()                                                { <a class="code" href="classVirtualKeyboard.htm#aed09aef66bf78a2180bd383ddce0c259">m_IMEDataInterface</a>-&gt;<a class="code" href="classIMEDataInterface.htm#a4236b3d82471e98b7ab95a7707506da2">invalidateRect</a>(m_keymap.<a class="code" href="classTablet__Keyboard_1_1TabletKeymap.htm#a918ed2d646077178f4afd77cbef0b60e">rect</a>()); }
<a name="l00163"></a><a class="code" href="classTablet__Keyboard_1_1TabletKeyboard.htm#a557b48b134f892df958e73e8aa946cc8">00163</a>         <span class="keywordtype">void</span>    <a class="code" href="classTablet__Keyboard_1_1TabletKeyboard.htm#a557b48b134f892df958e73e8aa946cc8">candidateBarResized</a>()                                   { <a class="code" href="classTablet__Keyboard_1_1TabletKeyboard.htm#a066a6009afe18e6b4a42001d747a2943">availableSpaceChanged</a>(<a class="code" href="classVirtualKeyboard.htm#aed09aef66bf78a2180bd383ddce0c259">m_IMEDataInterface</a>-&gt;<a class="code" href="classIMEDataInterface.htm#a43422600a87d1f0e46293f10136e1396">m_availableSpace</a>.<a class="code" href="classIMEData__QRect.htm#a59bba416378554336048df31c947398d">get</a>()); }
<a name="l00164"></a>00164 
<a name="l00165"></a>00165 <span class="keyword">public</span>:
<a name="l00166"></a>00166         <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classTablet__Keyboard_1_1TabletKeyboard.htm#a7fc84bca382969b65e04cc4d768a77d5">touchEvent</a>(<span class="keyword">const</span> QTouchEvent&amp; te);
<a name="l00167"></a>00167         <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classTablet__Keyboard_1_1TabletKeyboard.htm#a2eabc86d0aabe142beeb6cd7d1b47f19">paint</a>(QPainter&amp; painter);
<a name="l00168"></a>00168         <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classTablet__Keyboard_1_1TabletKeyboard.htm#a6cc551f0969c65182e1952744d2b7e22">tapEvent</a>(<span class="keyword">const</span> QPoint&amp; tapPt);
<a name="l00169"></a>00169 
<a name="l00170"></a>00170 <span class="keyword">protected</span>:
<a name="l00171"></a>00171         <span class="keywordtype">void</span>    <a class="code" href="classTablet__Keyboard_1_1TabletKeyboard.htm#ac244714043269c29bd2f4500c0a7f950">updateTouch</a>(<span class="keywordtype">int</span> <span class="keywordtype">id</span>, QPointF position);
<a name="l00172"></a>00172         <span class="keywordtype">void</span>    <a class="code" href="classTablet__Keyboard_1_1TabletKeyboard.htm#ae35bfe96abfe09d3497c87fb3158c3f9">releaseTouch</a>(<span class="keywordtype">int</span> <span class="keywordtype">id</span>);
<a name="l00173"></a><a class="code" href="classTablet__Keyboard_1_1TabletKeyboard.htm#a4628f45a591fe5490927d9112c5b97cc">00173</a>         <span class="keywordtype">void</span>    <a class="code" href="classTablet__Keyboard_1_1TabletKeyboard.htm#a4628f45a591fe5490927d9112c5b97cc">drawKeyBackground</a>(QPainter &amp; painter, QRect &amp; location, <span class="keyword">const</span> QPoint &amp; keyCoord, <a class="code" href="namespaceTablet__Keyboard.htm#a2ac789b18d56d85f455e4dcb0bb2608a">UKey</a> key, <span class="keywordtype">bool</span> pressed, <span class="keywordtype">int</span> count)
<a name="l00174"></a>00174         {
<a name="l00175"></a>00175                 m_nineTileSprites.<a class="code" href="classNineTileSprites.htm#a9d0baff832882109f5cbc09365140428">draw</a>(painter, location, <a class="code" href="classTablet__Keyboard_1_1TabletKeyboard.htm#ab3c3130fb8bb3c30bcaa7662e3c0756e">getKeyBackground</a>(keyCoord, key), pressed, count, m_9tileCorner);
<a name="l00176"></a>00176         }
<a name="l00177"></a>00177 
<a name="l00178"></a>00178         QPixmap &amp;       <a class="code" href="classTablet__Keyboard_1_1TabletKeyboard.htm#ab3c3130fb8bb3c30bcaa7662e3c0756e">getKeyBackground</a>(<span class="keyword">const</span> QPoint &amp; keyCoord, <a class="code" href="namespaceTablet__Keyboard.htm#a2ac789b18d56d85f455e4dcb0bb2608a">UKey</a> key);
<a name="l00179"></a>00179         <span class="keywordtype">void</span>    <a class="code" href="classTablet__Keyboard_1_1TabletKeyboard.htm#a8b6a42290a047ac886d15768c932a95f">draw9Tile</a>(QPainter &amp; painter, QRect &amp; location, QPixmap &amp; pixmap, <span class="keywordtype">bool</span> pressed);
<a name="l00180"></a>00180         <span class="keywordtype">void</span>    <a class="code" href="classTablet__Keyboard_1_1TabletKeyboard.htm#aa46ee5a4663947cfe8d10a831c46eec8">drawKeyCap</a>(QPainter * painter, <a class="code" href="classGlyphRenderer.htm">GlyphRenderer&lt;GlyphSpec&gt;</a> &amp; renderer, QRect location, <span class="keyword">const</span> QPoint &amp; keyCoord, <a class="code" href="namespaceTablet__Keyboard.htm#a2ac789b18d56d85f455e4dcb0bb2608a">UKey</a> key, <span class="keywordtype">bool</span> pressed);
<a name="l00181"></a>00181         <span class="keywordtype">bool</span>    <a class="code" href="classTablet__Keyboard_1_1TabletKeyboard.htm#af8db58f51bde2e0be1486f490d4c48f7">updateBackground</a>();
<a name="l00182"></a>00182         <span class="keywordtype">void</span>    <a class="code" href="classTablet__Keyboard_1_1TabletKeyboard.htm#a7f04fff2d3d106892376279a119012d1">keyboardLayoutChanged</a>();
<a name="l00183"></a>00183         <span class="keywordtype">void</span>    <a class="code" href="classTablet__Keyboard_1_1TabletKeyboard.htm#af23b3d2b1e8935866d5d42e07d12be28">handleKey</a>(<a class="code" href="namespaceTablet__Keyboard.htm#a2ac789b18d56d85f455e4dcb0bb2608a">UKey</a> key, QPointF where);
<a name="l00184"></a>00184     <span class="keywordtype">void</span>    <a class="code" href="classTablet__Keyboard_1_1TabletKeyboard.htm#abc9e93c93f5d0c27d17485f5dd0405d8">sendKeyDownUp</a>(Qt::Key key, Qt::KeyboardModifiers modifiers);
<a name="l00185"></a>00185 
<a name="l00186"></a>00186         <span class="keywordtype">void</span>    <a class="code" href="classTablet__Keyboard_1_1TabletKeyboard.htm#ae8833bc6402c089de38cf49dad5c5844">setShiftMode</a>(<a class="code" href="classTablet__Keyboard_1_1TabletKeymap.htm#aa1b080468f7f7e13300e57a735992bc2">TabletKeymap::EShiftMode</a> shiftMode);
<a name="l00187"></a>00187         <span class="keywordtype">void</span>    <a class="code" href="classTablet__Keyboard_1_1TabletKeyboard.htm#a5bbc698c3fdc262e80cc44dac0664214">setSymbolMode</a>(<a class="code" href="classTablet__Keyboard_1_1TabletKeymap.htm#a701841048bdf1e3732fb6d22d601af28">TabletKeymap::ESymbolMode</a> symbolMode);
<a name="l00188"></a>00188         <span class="keywordtype">bool</span>    <a class="code" href="classTablet__Keyboard_1_1TabletKeyboard.htm#a74e2f2e1766549ba2a4a3f6f6b1c7f3e">setShiftKeyDown</a>(<span class="keywordtype">bool</span> shiftKeyDown);
<a name="l00189"></a>00189         <span class="keywordtype">bool</span>    <a class="code" href="classTablet__Keyboard_1_1TabletKeyboard.htm#a8b458e8c70d8ce3fce029fcfa19c194d">setSymbolKeyDown</a>(<span class="keywordtype">bool</span> symbolKeyDown);
<a name="l00190"></a>00190 
<a name="l00191"></a>00191         <span class="keywordtype">bool</span>    <a class="code" href="classTablet__Keyboard_1_1TabletKeyboard.htm#ad6a0369777a839f08c7ceb5b9a2e0957">canRepeat</a>(<a class="code" href="namespaceTablet__Keyboard.htm#a2ac789b18d56d85f455e4dcb0bb2608a">UKey</a> key) <span class="keyword">const</span>;
<a name="l00192"></a>00192         <span class="keywordtype">void</span>    <a class="code" href="classTablet__Keyboard_1_1TabletKeyboard.htm#a0c6965c61693654b8f6cc4fb3c4b2e6b">stopRepeat</a>();
<a name="l00193"></a>00193 
<a name="l00194"></a>00194         <span class="keywordtype">void</span>    <a class="code" href="classTablet__Keyboard_1_1TabletKeyboard.htm#aebcf6051735e2e4c8df1b46ed88ad808">showSuggestions</a>(<span class="keywordtype">bool</span> show);
<a name="l00195"></a>00195         <span class="keywordtype">void</span>    <a class="code" href="classTablet__Keyboard_1_1TabletKeyboard.htm#a6f7554dfe381193699523ba432fb5a02">showKeymapRegions</a>();
<a name="l00196"></a>00196 
<a name="l00197"></a>00197         <span class="keywordtype">int</span>             <a class="code" href="classTablet__Keyboard_1_1TabletKeyboard.htm#ac9f4e12c182ba27b17163e027abac3d7">getKeyboardHeight</a>(<a class="code" href="namespaceTablet__Keyboard.htm#a2ac789b18d56d85f455e4dcb0bb2608a">UKey</a> ukey);
<a name="l00198"></a>00198 
<a name="l00199"></a>00199 <span class="keyword">public</span>:
<a name="l00200"></a>00200         <span class="keywordtype">bool</span>    <a class="code" href="classTablet__Keyboard_1_1TabletKeyboard.htm#ad4ee411cb12bfe7afc56d87dc9091baa">setExtendedKeys</a>(QPoint keyCoord, <span class="keywordtype">bool</span> cancelIfSame = <span class="keyword">false</span>);
<a name="l00201"></a>00201         <span class="keywordtype">void</span>    <a class="code" href="classTablet__Keyboard_1_1TabletKeyboard.htm#a7af53cfba06c4bba2daa3370aee9454c">clearExtendedkeys</a>();
<a name="l00202"></a>00202         <span class="keywordtype">bool</span>    <a class="code" href="classTablet__Keyboard_1_1TabletKeyboard.htm#ae2edda7683c52682024ae67201d7c86d">pointToExtendedPopup</a>(QPointF position, <a class="code" href="namespaceTablet__Keyboard.htm#a2ac789b18d56d85f455e4dcb0bb2608a">UKey</a> &amp; outKey);
<a name="l00203"></a>00203         <span class="keywordtype">void</span>    <a class="code" href="classTablet__Keyboard_1_1TabletKeyboard.htm#a1d24fee7ad6c78b25970c47ac5c462c5">getExtendedPopupSpec</a>(<span class="keywordtype">int</span> &amp; outCellCount, <span class="keywordtype">int</span> &amp; outLineCount, <span class="keywordtype">int</span> &amp; outLineLength);
<a name="l00204"></a>00204 
<a name="l00205"></a>00205         <span class="keywordtype">void</span>    <a class="code" href="classTablet__Keyboard_1_1TabletKeyboard.htm#aeef5e3f26e84effeb76ff2250bc31257">setKeyboardHeight</a>(<span class="keywordtype">int</span> height, <span class="keywordtype">bool</span> notify = <span class="keyword">true</span>);
<a name="l00206"></a>00206         <span class="keywordtype">void</span>    <a class="code" href="classTablet__Keyboard_1_1TabletKeyboard.htm#a0997db97d3ce9fa096728fc2a81b434e">syncKeymap</a>();
<a name="l00207"></a>00207 
<a name="l00208"></a>00208         <span class="keywordtype">void</span>    <a class="code" href="classTablet__Keyboard_1_1TabletKeyboard.htm#a81a9666ff32625a24422fccb2bd943c9">queueIdlePrerendering</a>();
<a name="l00209"></a>00209 
<a name="l00210"></a>00210         <span class="keywordtype">void</span>    <a class="code" href="classTablet__Keyboard_1_1TabletKeyboard.htm#a6dbc4ed0968e66bd2a5a0cd2091a971b">makeSound</a>(<a class="code" href="namespaceTablet__Keyboard.htm#a2ac789b18d56d85f455e4dcb0bb2608a">UKey</a> key);
<a name="l00211"></a>00211 
<a name="l00212"></a>00212 <span class="keyword">protected</span> Q_SLOTS:
<a name="l00213"></a>00213         <span class="keywordtype">void</span>    <a class="code" href="classTablet__Keyboard_1_1TabletKeyboard.htm#a378796e9e1f8253019da652ac76ab980">repeatChar</a>();
<a name="l00214"></a>00214         <span class="keywordtype">void</span>    <a class="code" href="classTablet__Keyboard_1_1TabletKeyboard.htm#ac3cb0addb7fc2ec0c06ac5ee4d467f03">tickTrackball</a>();
<a name="l00215"></a>00215 
<a name="l00216"></a>00216 <span class="keyword">private</span>:
<a name="l00217"></a>00217         <span class="keyword">static</span> <a class="code" href="classTablet__Keyboard_1_1TabletKeyboard.htm">TabletKeyboard</a> * s_instance;                     <span class="comment">// only valid while a keyboard exists.</span>
<a name="l00218"></a>00218 
<a name="l00219"></a>00219         std::map&lt;int, Touch&gt;    m_touches;                      <span class="comment">// where the user touches the screen, only while touching in key-coordinate (0, 0) = Q, (0, 1) = W...</span>
<a name="l00220"></a>00220         <span class="keywordtype">bool</span>                            m_shiftDown;
<a name="l00221"></a>00221         <span class="keywordtype">bool</span>                            m_symbolDown;
<a name="l00222"></a>00222         uint64_t                        m_lastShiftTime;
<a name="l00223"></a>00223         uint64_t                        m_lastUnlockTime;
<a name="l00224"></a>00224 
<a name="l00225"></a>00225         <span class="keywordtype">bool</span>                            m_resizeMode;
<a name="l00226"></a>00226         <span class="keywordtype">bool</span>                            m_trackballMode;
<a name="l00227"></a>00227         QPointF                         m_trackballVelocity;
<a name="l00228"></a>00228         <span class="keywordtype">int</span>                                     m_keyboardTopPading;
<a name="l00229"></a>00229         <span class="keywordtype">int</span>                                     m_requestedHeight;
<a name="l00230"></a>00230         <a class="code" href="structNineTileCorner.htm">NineTileCorner</a>          m_9tileCorner;
<a name="l00231"></a>00231 
<a name="l00232"></a>00232         <a class="code" href="classTablet__Keyboard_1_1TabletKeymap.htm">TabletKeymap</a>            m_keymap;                               <span class="comment">// current keymap.</span>
<a name="l00233"></a>00233         QPixmap *                       m_keyboardBackgound;    <span class="comment">// current keyboard, cached version using the assets below without text rendering nor shift keys.</span>
<a name="l00234"></a>00234         <span class="keywordtype">int</span>                                     m_keyboardLimitsVersion;<span class="comment">// version of m_keymap limits used to build m_keyboard &amp; m_keyboardBackground</span>
<a name="l00235"></a>00235         <span class="keywordtype">bool</span>                            m_keyboardDirty;                <span class="comment">// does m_keyboard need to be rebuilt before drawing onscreen?</span>
<a name="l00236"></a>00236         <span class="keywordtype">int</span>                                     m_presetHeight[<a class="code" href="namespaceTablet__Keyboard.htm#aadbec7f3861d2dd3cc65e664733fc624">cKey_Resize_Last</a> - <a class="code" href="namespaceTablet__Keyboard.htm#a6d2c50b39c30eda3b7fce18b982f4052">cKey_Resize_First</a> + 1];       <span class="comment">// height in pixels for each size. Index 0 is the smallest, last index the largest</span>
<a name="l00237"></a>00237 
<a name="l00238"></a>00238         <a class="code" href="CandidateBar_8h.htm#ad76c38c5c9760cd38ddf391abeb10980">CANDIDATEBAR</a>            m_candidateBar;
<a name="l00239"></a>00239         <span class="keywordtype">bool</span>                            m_candidateBarLayoutOutdated;
<a name="l00240"></a>00240         <span class="keyword">const</span> <a class="code" href="structTablet__Keyboard_1_1TabletKeymap_1_1LayoutFamily.htm">TabletKeymap::LayoutFamily</a> * m_generatedKeymapLayout;
<a name="l00241"></a>00241 
<a name="l00242"></a>00242         QTimer                          m_timer;                                <span class="comment">// repeat timer.</span>
<a name="l00243"></a>00243         QPoint                          m_repeatKey;                    <span class="comment">// key being repeated.</span>
<a name="l00244"></a>00244         uint64_t                        m_repeatStartTime;              <span class="comment">// when the repeated key was first pressed</span>
<a name="l00245"></a>00245 
<a name="l00246"></a>00246         <span class="keyword">const</span> <a class="code" href="namespaceTablet__Keyboard.htm#a2ac789b18d56d85f455e4dcb0bb2608a">UKey</a> *            m_extendedKeys;                 <span class="comment">// set when a popout with extended keys is being shown</span>
<a name="l00247"></a>00247         QRect                           m_extendedKeysFrame;    <span class="comment">// frame of the currently displayed extended keys, if any. Undefined value when m_extendedKeys is NULL.</span>
<a name="l00248"></a>00248         <span class="keywordtype">int</span>                                     m_extendedKeysPointer;  <span class="comment">// where the extended keys popup pointer to the key should be (X coordinate)</span>
<a name="l00249"></a>00249         <a class="code" href="namespaceTablet__Keyboard.htm#a2ac789b18d56d85f455e4dcb0bb2608a">UKey</a>                            m_extendedKeyShown;
<a name="l00250"></a>00250 
<a name="l00251"></a>00251         <a class="code" href="classShortcutsHandler.htm">ShortcutsHandler</a>        m_shortcutsHandler;
<a name="l00252"></a>00252 
<a name="l00253"></a>00253         <span class="keywordtype">bool</span>                            m_diamondOptimization;
<a name="l00254"></a>00254 
<a name="l00255"></a>00255         <span class="keywordtype">bool</span>                            m_idleInit;
<a name="l00256"></a>00256         
<a name="l00257"></a>00257         QPointF                         m_trackballDelta;
<a name="l00258"></a>00258         QTimer                          m_trackballTimer;
<a name="l00259"></a>00259 
<a name="l00260"></a>00260         <span class="comment">// keyboard special key assets.</span>
<a name="l00261"></a>00261         <a class="code" href="classIMEPixmap.htm">IMEPixmap</a>                       m_backspace;
<a name="l00262"></a>00262         <a class="code" href="classIMEPixmap.htm">IMEPixmap</a>                       m_shift;
<a name="l00263"></a>00263         <a class="code" href="classIMEPixmap.htm">IMEPixmap</a>                       m_shift_on;
<a name="l00264"></a>00264         <a class="code" href="classIMEPixmap.htm">IMEPixmap</a>                       m_shift_lock;
<a name="l00265"></a>00265         <a class="code" href="classIMEPixmap.htm">IMEPixmap</a>                       m_hide;
<a name="l00266"></a>00266 
<a name="l00267"></a>00267         <a class="code" href="classIMEPixmap.htm">IMEPixmap</a>                       m_emoticon_frown;
<a name="l00268"></a>00268         <a class="code" href="classIMEPixmap.htm">IMEPixmap</a>                       m_emoticon_cry;
<a name="l00269"></a>00269         <a class="code" href="classIMEPixmap.htm">IMEPixmap</a>                       m_emoticon_smile;
<a name="l00270"></a>00270         <a class="code" href="classIMEPixmap.htm">IMEPixmap</a>                       m_emoticon_wink;
<a name="l00271"></a>00271         <a class="code" href="classIMEPixmap.htm">IMEPixmap</a>                       m_emoticon_yuck;
<a name="l00272"></a>00272         <a class="code" href="classIMEPixmap.htm">IMEPixmap</a>                       m_emoticon_gasp;
<a name="l00273"></a>00273         <a class="code" href="classIMEPixmap.htm">IMEPixmap</a>                       m_emoticon_heart;
<a name="l00274"></a>00274 
<a name="l00275"></a>00275         <a class="code" href="classIMEPixmap.htm">IMEPixmap</a>                       m_emoticon_frown_small;
<a name="l00276"></a>00276         <a class="code" href="classIMEPixmap.htm">IMEPixmap</a>                       m_emoticon_cry_small;
<a name="l00277"></a>00277         <a class="code" href="classIMEPixmap.htm">IMEPixmap</a>                       m_emoticon_smile_small;
<a name="l00278"></a>00278         <a class="code" href="classIMEPixmap.htm">IMEPixmap</a>                       m_emoticon_wink_small;
<a name="l00279"></a>00279         <a class="code" href="classIMEPixmap.htm">IMEPixmap</a>                       m_emoticon_yuck_small;
<a name="l00280"></a>00280         <a class="code" href="classIMEPixmap.htm">IMEPixmap</a>                       m_emoticon_gasp_small;
<a name="l00281"></a>00281         <a class="code" href="classIMEPixmap.htm">IMEPixmap</a>                       m_emoticon_heart_small;
<a name="l00282"></a>00282         
<a name="l00283"></a>00283         <span class="comment">// trackball assets</span>
<a name="l00284"></a>00284         <a class="code" href="classIMEPixmap.htm">IMEPixmap</a>                       m_trackball;
<a name="l00285"></a>00285         <a class="code" href="classIMEPixmap.htm">IMEPixmap</a>                       m_trackballArrows;
<a name="l00286"></a>00286 
<a name="l00287"></a>00287         <span class="comment">// keyboard background assets.</span>
<a name="l00288"></a>00288         <a class="code" href="classIMEPixmap.htm">IMEPixmap</a>                       m_background;
<a name="l00289"></a>00289         <a class="code" href="classIMEPixmap.htm">IMEPixmap</a>                       m_drag_handle;
<a name="l00290"></a>00290         <a class="code" href="classIMEPixmap.htm">IMEPixmap</a>                       m_drag_highlight;
<a name="l00291"></a>00291         <a class="code" href="classIMEPixmap.htm">IMEPixmap</a>                       m_white_key;
<a name="l00292"></a>00292         <a class="code" href="classIMEPixmap.htm">IMEPixmap</a>                       m_gray_key;
<a name="l00293"></a>00293         <a class="code" href="classIMEPixmap.htm">IMEPixmap</a>                       m_black_key;
<a name="l00294"></a>00294         <a class="code" href="classIMEPixmap.htm">IMEPixmap</a>                       m_shift_on_key;
<a name="l00295"></a>00295         <a class="code" href="classIMEPixmap.htm">IMEPixmap</a>                       m_shift_lock_key;
<a name="l00296"></a>00296         <a class="code" href="classIMEPixmap.htm">IMEPixmap</a>                       m_short_gray_key;
<a name="l00297"></a>00297 
<a name="l00298"></a>00298         <span class="comment">// popup assets.</span>
<a name="l00299"></a>00299         <a class="code" href="classIMEPixmap.htm">IMEPixmap</a>                       m_popup;
<a name="l00300"></a>00300         <a class="code" href="classIMEPixmap.htm">IMEPixmap</a>                       m_popup_2;
<a name="l00301"></a>00301         <a class="code" href="classIMEPixmap.htm">IMEPixmap</a>                       m_popup_key;
<a name="l00302"></a>00302 
<a name="l00303"></a>00303         <a class="code" href="classNineTileSprites.htm">NineTileSprites</a>         m_nineTileSprites;
<a name="l00304"></a>00304         <a class="code" href="classGlyphCache.htm">GlyphCache&lt;GlyphSpec&gt;</a>   m_glyphCache;
<a name="l00305"></a>00305 };
<a name="l00306"></a>00306 
<a name="l00307"></a>00307 }; <span class="comment">// namespace TabletKeyboard</span>
<a name="l00308"></a>00308 
<a name="l00309"></a>00309 <span class="preprocessor">#endif</span>
<a name="l00310"></a>00310 <span class="preprocessor"></span>
</pre></div></div><!-- contents -->
</div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Properties</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Defines</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="TabletKeyboard_8h.htm">TabletKeyboard.h</a>      </li>

    <li class="footer">Generated on Fri Oct 5 2012 20:00:31 for LunaSysMgr by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.6.1 </li>
   </ul>
 </div>


</body>
</html>
