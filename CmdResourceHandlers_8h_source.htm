<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>LunaSysMgr: CmdResourceHandlers.h Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>

</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">LunaSysMgr
   
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
      <li><a href="dirs.htm"><span>Directories</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.htm"><span>File&#160;List</span></a></li>
      <li><a href="globals.htm"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('CmdResourceHandlers_8h.htm','');
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">CmdResourceHandlers.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="CmdResourceHandlers_8h.htm">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/* @@@LICENSE</span>
<a name="l00002"></a>00002 <span class="comment">*</span>
<a name="l00003"></a>00003 <span class="comment">*      Copyright (c) 2008-2012 Hewlett-Packard Development Company, L.P.</span>
<a name="l00004"></a>00004 <span class="comment">*</span>
<a name="l00005"></a>00005 <span class="comment">* Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span>
<a name="l00006"></a>00006 <span class="comment">* you may not use this file except in compliance with the License.</span>
<a name="l00007"></a>00007 <span class="comment">* You may obtain a copy of the License at</span>
<a name="l00008"></a>00008 <span class="comment">*</span>
<a name="l00009"></a>00009 <span class="comment">* http://www.apache.org/licenses/LICENSE-2.0</span>
<a name="l00010"></a>00010 <span class="comment">*</span>
<a name="l00011"></a>00011 <span class="comment">* Unless required by applicable law or agreed to in writing, software</span>
<a name="l00012"></a>00012 <span class="comment">* distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span>
<a name="l00013"></a>00013 <span class="comment">* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span>
<a name="l00014"></a>00014 <span class="comment">* See the License for the specific language governing permissions and</span>
<a name="l00015"></a>00015 <span class="comment">* limitations under the License.</span>
<a name="l00016"></a>00016 <span class="comment">*</span>
<a name="l00017"></a>00017 <span class="comment">* LICENSE@@@ */</span>
<a name="l00018"></a>00018 
<a name="l00019"></a>00019 
<a name="l00020"></a>00020 
<a name="l00021"></a>00021 
<a name="l00022"></a>00022 <span class="preprocessor">#ifndef __CmdResourceHandlers_h__</span>
<a name="l00023"></a>00023 <span class="preprocessor"></span><span class="preprocessor">#define __CmdResourceHandlers_h__</span>
<a name="l00024"></a>00024 <span class="preprocessor"></span>
<a name="l00025"></a>00025 
<a name="l00026"></a>00026 <span class="preprocessor">#include &quot;<a class="code" href="Common_8h.htm">Common.h</a>&quot;</span>
<a name="l00027"></a>00027 
<a name="l00028"></a>00028 <span class="preprocessor">#include &lt;regex.h&gt;</span>
<a name="l00029"></a>00029 <span class="preprocessor">#include &lt;stdint.h&gt;</span>
<a name="l00030"></a>00030 <span class="preprocessor">#include &lt;string&gt;</span>
<a name="l00031"></a>00031 <span class="preprocessor">#include &lt;vector&gt;</span>
<a name="l00032"></a>00032 <span class="preprocessor">#include &lt;map&gt;</span>
<a name="l00033"></a>00033 
<a name="l00039"></a>00039 <span class="keyword">class </span>RedirectHandlerNode;
<a name="l00040"></a>00040 <span class="keyword">class </span>ResourceHandlerNode;
<a name="l00041"></a>00041 
<a name="l00042"></a><a class="code" href="classRedirectHandler.htm">00042</a> <span class="keyword">class </span><a class="code" href="classRedirectHandler.htm">RedirectHandler</a>
<a name="l00043"></a>00043 {
<a name="l00044"></a>00044         <span class="keyword">public</span>:
<a name="l00045"></a>00045                 <a class="code" href="classRedirectHandler.htm#a7b611248d8f8938c32707bd1a2e070b6">RedirectHandler</a>(<span class="keyword">const</span> std::string&amp; <a class="code" href="classRedirectHandler.htm#a23c26143bea06b7dc5662c04153286bd">urlRe</a>, <span class="keyword">const</span> std::string&amp; <a class="code" href="classRedirectHandler.htm#ac12dd431845ee64fd6f91cfdf577314b">appId</a>, <span class="keywordtype">bool</span> schemeform );
<a name="l00046"></a>00046                 <a class="code" href="classRedirectHandler.htm#a7b611248d8f8938c32707bd1a2e070b6">RedirectHandler</a>(<span class="keyword">const</span> std::string&amp; urlRe, <span class="keyword">const</span> std::string&amp; appId, <span class="keywordtype">bool</span> schemeform, <span class="keyword">const</span> std::string&amp; handler_tag);
<a name="l00047"></a>00047                 <span class="keyword">virtual</span> <a class="code" href="classRedirectHandler.htm#a81f34cfe7edfba31dda21f9be4402a78">~RedirectHandler</a>();
<a name="l00048"></a>00048                 <a class="code" href="classRedirectHandler.htm#a7b611248d8f8938c32707bd1a2e070b6">RedirectHandler</a>();
<a name="l00049"></a>00049                 
<a name="l00050"></a><a class="code" href="classRedirectHandler.htm#a23c26143bea06b7dc5662c04153286bd">00050</a>                 <span class="keyword">const</span> std::string&amp; <a class="code" href="classRedirectHandler.htm#a23c26143bea06b7dc5662c04153286bd">urlRe</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_urlRe; }
<a name="l00051"></a><a class="code" href="classRedirectHandler.htm#ac12dd431845ee64fd6f91cfdf577314b">00051</a>                 <span class="keyword">const</span> std::string&amp; <a class="code" href="classRedirectHandler.htm#ac12dd431845ee64fd6f91cfdf577314b">appId</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_appId; }
<a name="l00052"></a>00052                 <span class="keywordtype">bool</span> <a class="code" href="classRedirectHandler.htm#afef212736aae208a9509b073e5f21b3a">matches</a>(<span class="keyword">const</span> std::string&amp; url) <span class="keyword">const</span>;
<a name="l00053"></a>00053                 <span class="keywordtype">bool</span> <a class="code" href="classRedirectHandler.htm#af8fb88e5aee8a94b12d0b80539538e71">reValid</a>() <span class="keyword">const</span>;
<a name="l00054"></a>00054                 
<a name="l00055"></a>00055                 <span class="keywordtype">bool</span> <a class="code" href="classRedirectHandler.htm#a51182b9dbb0236c493161b050261c229">addVerb</a>(<span class="keyword">const</span> std::string&amp; verb,<span class="keyword">const</span> std::string&amp; jsonizedParams);
<a name="l00056"></a>00056                 <span class="keywordtype">void</span> <a class="code" href="classRedirectHandler.htm#a8fe4bd4fa2697ef6f4b04648a96db663">removeVerb</a>(<span class="keyword">const</span> std::string&amp; verb);
<a name="l00057"></a>00057                 
<a name="l00058"></a><a class="code" href="classRedirectHandler.htm#a617fd878b1ba2d26a2a7edac5eb25a4f">00058</a>                 <span class="keywordtype">bool</span> <a class="code" href="classRedirectHandler.htm#a617fd878b1ba2d26a2a7edac5eb25a4f">operator==</a>(<span class="keyword">const</span> <a class="code" href="classRedirectHandler.htm">RedirectHandler</a>&amp; c)<span class="keyword"> const </span>
<a name="l00059"></a>00059 <span class="keyword">                </span>{
<a name="l00060"></a>00060                         <span class="keywordflow">return</span> ((m_urlRe == c.m_urlRe) &amp;&amp; (m_appId == c.m_appId));
<a name="l00061"></a>00061                 }
<a name="l00062"></a><a class="code" href="classRedirectHandler.htm#aadceb315bf3a200559f27d344768ca40">00062</a>                 <span class="keywordtype">bool</span> <a class="code" href="classRedirectHandler.htm#aadceb315bf3a200559f27d344768ca40">operator!=</a>(<span class="keyword">const</span> <a class="code" href="classRedirectHandler.htm">RedirectHandler</a>&amp; c)<span class="keyword"> const </span>
<a name="l00063"></a>00063 <span class="keyword">                </span>{
<a name="l00064"></a>00064                         <span class="keywordflow">return</span> ((m_urlRe != c.m_urlRe) || (m_appId != c.m_appId));
<a name="l00065"></a>00065                 }
<a name="l00066"></a><a class="code" href="classRedirectHandler.htm#a3f2c3c9c81849c5b5a72835a9bdbfbf9">00066</a>                 <span class="keywordtype">bool</span> <a class="code" href="classRedirectHandler.htm#a3f2c3c9c81849c5b5a72835a9bdbfbf9">equals</a>(<span class="keyword">const</span> std::string&amp; url,<span class="keyword">const</span> std::string&amp; appId)
<a name="l00067"></a>00067                 {
<a name="l00068"></a>00068                         <span class="keywordflow">return</span> ((m_urlRe == url) &amp;&amp; (m_appId == appId));
<a name="l00069"></a>00069                 }
<a name="l00070"></a>00070                 
<a name="l00071"></a>00071                 <a class="code" href="classRedirectHandler.htm#a7b611248d8f8938c32707bd1a2e070b6">RedirectHandler</a>(<span class="keyword">const</span> <a class="code" href="classRedirectHandler.htm">RedirectHandler</a>&amp; c);
<a name="l00072"></a>00072                 <a class="code" href="classRedirectHandler.htm">RedirectHandler</a>&amp; <a class="code" href="classRedirectHandler.htm#ae551638011e826b447d1e10234cc0a91">operator=</a>(<span class="keyword">const</span> <a class="code" href="classRedirectHandler.htm">RedirectHandler</a>&amp; rhs);
<a name="l00073"></a>00073                 
<a name="l00074"></a><a class="code" href="classRedirectHandler.htm#a5897b62256ff0526981cc9ff1ba6c219">00074</a>                 <span class="keyword">friend</span> <span class="keyword">class </span><a class="code" href="classRedirectHandler.htm#a5897b62256ff0526981cc9ff1ba6c219">RedirectHandlerNode</a>;
<a name="l00075"></a>00075                 
<a name="l00076"></a><a class="code" href="classRedirectHandler.htm#a2e4eda34502fcc5f804d882b1dd2a49c">00076</a>                 <span class="keywordtype">bool</span> <a class="code" href="classRedirectHandler.htm#a2e4eda34502fcc5f804d882b1dd2a49c">valid</a>()<span class="keyword"> const      </span>{ <span class="keywordflow">return</span> m_valid;}
<a name="l00077"></a><a class="code" href="classRedirectHandler.htm#a5890c78bfe8582b7053a7f262f241b90">00077</a>                 <span class="keywordtype">void</span> <a class="code" href="classRedirectHandler.htm#a5890c78bfe8582b7053a7f262f241b90">markInvalid</a>() { m_valid = <span class="keyword">false</span>; }
<a name="l00078"></a><a class="code" href="classRedirectHandler.htm#a26f0b44f04ec20a0efe59051d9ddf867">00078</a>                 <span class="keywordtype">bool</span> <a class="code" href="classRedirectHandler.htm#a26f0b44f04ec20a0efe59051d9ddf867">isSchemeForm</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_schemeForm;}
<a name="l00079"></a>00079                 
<a name="l00080"></a><a class="code" href="classRedirectHandler.htm#a8550828645f751f995da32a0a3399480">00080</a>                 <span class="keyword">const</span> std::string&amp; <a class="code" href="classRedirectHandler.htm#a8550828645f751f995da32a0a3399480">tag</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_tag; }
<a name="l00081"></a><a class="code" href="classRedirectHandler.htm#ac9710f3d7177f9b73dc23537d7ef1747">00081</a>                 <span class="keywordtype">void</span> <a class="code" href="classRedirectHandler.htm#ac9710f3d7177f9b73dc23537d7ef1747">setTag</a>(<span class="keyword">const</span> std::string&amp; newtag) { m_tag = newtag;}
<a name="l00082"></a><a class="code" href="classRedirectHandler.htm#a508603196078dbe0b57a2cc28e2ede66">00082</a>                 uint32_t <a class="code" href="classRedirectHandler.htm#a508603196078dbe0b57a2cc28e2ede66">index</a>() { <span class="keywordflow">return</span> m_index; }
<a name="l00083"></a><a class="code" href="classRedirectHandler.htm#a01ee53fc7fce62ec09c19ed3bfa612ae">00083</a>                 uint32_t <a class="code" href="classRedirectHandler.htm#a01ee53fc7fce62ec09c19ed3bfa612ae">setIndex</a>(uint32_t newindex) { uint32_t t = m_index; m_index = newindex; <span class="keywordflow">return</span> t;}
<a name="l00084"></a>00084 
<a name="l00085"></a>00085                 std::string             <a class="code" href="classRedirectHandler.htm#a84670091f908d1746228e93bf8a31f31">toJsonString</a>();
<a name="l00086"></a>00086                 <span class="keyword">struct </span>json_object * <a class="code" href="classRedirectHandler.htm#af11b9eb90c1cda25288b53d6a239774d">toJson</a>();                  <span class="comment">//WARNING: memory allocated; caller must clean</span>
<a name="l00087"></a>00087                 
<a name="l00088"></a><a class="code" href="classRedirectHandler.htm#a241932a84825174023df9418fdb33c29">00088</a>                 <span class="keyword">const</span> std::map&lt;std::string,std::string&gt;&amp; <a class="code" href="classRedirectHandler.htm#a241932a84825174023df9418fdb33c29">verbs</a>() { <span class="keywordflow">return</span> m_verbs;}
<a name="l00089"></a>00089                 
<a name="l00090"></a>00090         <span class="keyword">private</span>:
<a name="l00091"></a>00091                 
<a name="l00092"></a>00092                 std::string m_urlRe; 
<a name="l00093"></a>00093                 std::string m_appId;
<a name="l00094"></a>00094                 regex_t m_urlReg; 
<a name="l00095"></a>00095                 <span class="keywordtype">bool</span>    m_valid;
<a name="l00096"></a>00096                 <span class="keywordtype">bool</span>    m_schemeForm;
<a name="l00097"></a>00097                 std::string m_tag;
<a name="l00098"></a>00098                 uint32_t m_index;
<a name="l00099"></a>00099                 std::map&lt;std::string,std::string&gt;       m_verbs;                                <span class="comment">// &lt; Verb , json-ized string of parameters &gt;</span>
<a name="l00100"></a>00100 
<a name="l00101"></a>00101 };
<a name="l00102"></a>00102 
<a name="l00107"></a><a class="code" href="classResourceHandler.htm">00107</a> <span class="keyword">class </span><a class="code" href="classResourceHandler.htm">ResourceHandler</a>
<a name="l00108"></a>00108 {
<a name="l00109"></a>00109         <span class="keyword">public</span>:
<a name="l00110"></a>00110                 <a class="code" href="classResourceHandler.htm#a0a33aab3f38dba04b5dc3f4496d324df">ResourceHandler</a>( <span class="keyword">const</span> std::string&amp; ext, 
<a name="l00111"></a>00111                                 <span class="keyword">const</span> std::string&amp; <a class="code" href="classResourceHandler.htm#a7c303da83bf6e9a165c1393b6ef29e9d">contentType</a>, 
<a name="l00112"></a>00112                                 <span class="keyword">const</span> std::string&amp; <a class="code" href="classResourceHandler.htm#a77d7d3f3d208fc0160207af3fffe6466">appId</a>, 
<a name="l00113"></a>00113                                 <span class="keywordtype">bool</span> <a class="code" href="classResourceHandler.htm#a2f554f84333e006714c4e0c5e01f0504">stream</a>=<span class="keyword">false</span> );
<a name="l00114"></a>00114                 <a class="code" href="classResourceHandler.htm#a0a33aab3f38dba04b5dc3f4496d324df">ResourceHandler</a>( <span class="keyword">const</span> std::string&amp; ext, 
<a name="l00115"></a>00115                                 <span class="keyword">const</span> std::string&amp; contentType, 
<a name="l00116"></a>00116                                 <span class="keyword">const</span> std::string&amp; appId,
<a name="l00117"></a>00117                                 <span class="keywordtype">bool</span> <a class="code" href="classResourceHandler.htm#a2f554f84333e006714c4e0c5e01f0504">stream</a>,
<a name="l00118"></a>00118                                 <span class="keyword">const</span> std::string&amp; handler_tag);
<a name="l00119"></a>00119                 
<a name="l00120"></a><a class="code" href="classResourceHandler.htm#a7d4d3c48a55160ea08b281636580595b">00120</a>                 <a class="code" href="classResourceHandler.htm#a7d4d3c48a55160ea08b281636580595b">~ResourceHandler</a>() { }
<a name="l00121"></a><a class="code" href="classResourceHandler.htm#a0a33aab3f38dba04b5dc3f4496d324df">00121</a>                 <a class="code" href="classResourceHandler.htm#a0a33aab3f38dba04b5dc3f4496d324df">ResourceHandler</a>() : m_stream(false), m_valid(false), m_index(0) {}
<a name="l00122"></a>00122                 
<a name="l00123"></a>00123                 <a class="code" href="classResourceHandler.htm#a0a33aab3f38dba04b5dc3f4496d324df">ResourceHandler</a>(<span class="keyword">const</span> <a class="code" href="classResourceHandler.htm">ResourceHandler</a>&amp; c);
<a name="l00124"></a>00124                 <a class="code" href="classResourceHandler.htm">ResourceHandler</a>&amp; <a class="code" href="classResourceHandler.htm#a562d354f15803a89b1d7eba9de1ee786">operator=</a>(<span class="keyword">const</span> <a class="code" href="classResourceHandler.htm">ResourceHandler</a>&amp; c);
<a name="l00125"></a>00125 
<a name="l00126"></a><a class="code" href="classResourceHandler.htm#a13ef8088fb13059c255ce6431bb94f83">00126</a>                 <span class="keywordtype">bool</span> <a class="code" href="classResourceHandler.htm#a13ef8088fb13059c255ce6431bb94f83">operator==</a>(<span class="keyword">const</span> <a class="code" href="classResourceHandler.htm">ResourceHandler</a>&amp; c)<span class="keyword"> const</span>
<a name="l00127"></a>00127 <span class="keyword">                </span>{
<a name="l00128"></a>00128                         <span class="keywordflow">return</span> ((m_fileExt == c.m_fileExt) &amp;&amp; (m_contentType == c.m_contentType) &amp;&amp; (m_appId == c.m_appId) &amp;&amp; (m_stream == c.m_stream));
<a name="l00129"></a>00129                 }
<a name="l00130"></a>00130                 
<a name="l00131"></a><a class="code" href="classResourceHandler.htm#a4274a223108bae52ca1474efb1257ae9">00131</a>                 <span class="keywordtype">bool</span> <a class="code" href="classResourceHandler.htm#a4274a223108bae52ca1474efb1257ae9">operator!=</a>(<span class="keyword">const</span> <a class="code" href="classResourceHandler.htm">ResourceHandler</a>&amp; c)<span class="keyword"> const</span>
<a name="l00132"></a>00132 <span class="keyword">                </span>{
<a name="l00133"></a>00133                         <span class="keywordflow">return</span> ((m_fileExt != c.m_fileExt) || (m_contentType != c.m_contentType) || (m_appId != c.m_appId) || (m_stream != c.m_stream));
<a name="l00134"></a>00134                 }
<a name="l00135"></a>00135 
<a name="l00136"></a><a class="code" href="classResourceHandler.htm#ad7cdb2fd211e6706f0cefde4c52ee1cb">00136</a>                 <span class="keywordtype">bool</span> <a class="code" href="classResourceHandler.htm#ad7cdb2fd211e6706f0cefde4c52ee1cb">match</a>(<span class="keyword">const</span> std::string&amp; extension,<span class="keyword">const</span> std::string&amp; appId,<span class="keyword">const</span> std::string&amp; mimeType,<span class="keywordtype">bool</span> stream)<span class="keyword"> const</span>
<a name="l00137"></a>00137 <span class="keyword">                </span>{
<a name="l00138"></a>00138                         <span class="keywordflow">return</span> ((m_fileExt == extension) &amp;&amp; (m_contentType == mimeType) &amp;&amp; (m_appId == appId) &amp;&amp; (m_stream == stream));
<a name="l00139"></a>00139                 }
<a name="l00140"></a><a class="code" href="classResourceHandler.htm#a59c970d92f76adba5e8ec6adc15cfdc7">00140</a>                 <span class="keywordtype">bool</span> <a class="code" href="classResourceHandler.htm#ad7cdb2fd211e6706f0cefde4c52ee1cb">match</a>(<span class="keyword">const</span> std::string&amp; extension,<span class="keyword">const</span> std::string&amp; appId,<span class="keyword">const</span> std::string&amp; mimeType)<span class="keyword"> const</span>
<a name="l00141"></a>00141 <span class="keyword">                </span>{
<a name="l00142"></a>00142                         <span class="keywordflow">return</span> ((m_fileExt == extension) &amp;&amp; (m_contentType == mimeType) &amp;&amp; (m_appId == appId));         
<a name="l00143"></a>00143                 }
<a name="l00144"></a><a class="code" href="classResourceHandler.htm#abaf9ec174258cb665983d501860c49ee">00144</a>                 <span class="keywordtype">bool</span> <a class="code" href="classResourceHandler.htm#ad7cdb2fd211e6706f0cefde4c52ee1cb">match</a>(<span class="keyword">const</span> std::string&amp; appId,<span class="keyword">const</span> std::string&amp; mimeType)<span class="keyword"> const</span>
<a name="l00145"></a>00145 <span class="keyword">                </span>{
<a name="l00146"></a>00146                         <span class="keywordflow">return</span> ((m_contentType == mimeType) &amp;&amp; (m_appId == appId));             
<a name="l00147"></a>00147                 }
<a name="l00148"></a>00148                 
<a name="l00149"></a><a class="code" href="classResourceHandler.htm#a77d7d3f3d208fc0160207af3fffe6466">00149</a>                 <span class="keyword">const</span> std::string&amp; <a class="code" href="classResourceHandler.htm#a77d7d3f3d208fc0160207af3fffe6466">appId</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_appId; }
<a name="l00150"></a><a class="code" href="classResourceHandler.htm#a2bb5af7b041a83a9c7416e065c60058b">00150</a>                 <span class="keyword">const</span> std::string&amp; <a class="code" href="classResourceHandler.htm#a2bb5af7b041a83a9c7416e065c60058b">fileExt</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_fileExt; }
<a name="l00151"></a><a class="code" href="classResourceHandler.htm#a7c303da83bf6e9a165c1393b6ef29e9d">00151</a>                 <span class="keyword">const</span> std::string&amp; <a class="code" href="classResourceHandler.htm#a7c303da83bf6e9a165c1393b6ef29e9d">contentType</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_contentType; }
<a name="l00152"></a><a class="code" href="classResourceHandler.htm#a9eafcadf7a7a6c6a723ae835a9d13d5f">00152</a>                 <span class="keyword">const</span> std::string&amp; <a class="code" href="classResourceHandler.htm#a9eafcadf7a7a6c6a723ae835a9d13d5f">tag</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_tag; }
<a name="l00153"></a><a class="code" href="classResourceHandler.htm#a5527b5c006a625ffe2cb4a23b1c403b3">00153</a>                 <span class="keywordtype">void</span> <a class="code" href="classResourceHandler.htm#a5527b5c006a625ffe2cb4a23b1c403b3">setTag</a>(<span class="keyword">const</span> std::string&amp; newtag) { m_tag = newtag;}
<a name="l00154"></a><a class="code" href="classResourceHandler.htm#a83a14b136ec471d10dfe8a54236350b8">00154</a>                 uint32_t <a class="code" href="classResourceHandler.htm#a83a14b136ec471d10dfe8a54236350b8">index</a>() { <span class="keywordflow">return</span> m_index; }
<a name="l00155"></a><a class="code" href="classResourceHandler.htm#a98ddf0bdf097ad7e823b3a2aa01d5059">00155</a>                 uint32_t <a class="code" href="classResourceHandler.htm#a98ddf0bdf097ad7e823b3a2aa01d5059">setIndex</a>(uint32_t newindex) { uint32_t t = m_index; m_index = newindex; <span class="keywordflow">return</span> t;}
<a name="l00156"></a><a class="code" href="classResourceHandler.htm#a2f554f84333e006714c4e0c5e01f0504">00156</a>                 <span class="keywordtype">bool</span> <a class="code" href="classResourceHandler.htm#a2f554f84333e006714c4e0c5e01f0504">stream</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_stream; }
<a name="l00157"></a>00157 
<a name="l00158"></a><a class="code" href="classResourceHandler.htm#a1e6d3a47201084897b2db9c0d72b0425">00158</a>                 <span class="keyword">friend</span> <span class="keyword">class </span><a class="code" href="classResourceHandler.htm#a1e6d3a47201084897b2db9c0d72b0425">ResourceHandlerNode</a>;
<a name="l00159"></a>00159                 
<a name="l00160"></a><a class="code" href="classResourceHandler.htm#abe5e5d851a2beb96dfcf08f8e7aed4e8">00160</a>                 <span class="keywordtype">bool</span> <a class="code" href="classResourceHandler.htm#abe5e5d851a2beb96dfcf08f8e7aed4e8">valid</a>()    { <span class="keywordflow">return</span> m_valid;}
<a name="l00161"></a><a class="code" href="classResourceHandler.htm#a0f6b7ba786b160f30c9979ae19552d20">00161</a>                 <span class="keywordtype">void</span> <a class="code" href="classResourceHandler.htm#a0f6b7ba786b160f30c9979ae19552d20">markInvalid</a>() { m_valid = <span class="keyword">false</span>; }
<a name="l00162"></a>00162                 <span class="keywordtype">bool</span> <a class="code" href="classResourceHandler.htm#a7864762a5b6bdf80110326e92f5a90a2">addVerb</a>(<span class="keyword">const</span> std::string&amp; verb,<span class="keyword">const</span> std::string&amp; jsonizedParams);
<a name="l00163"></a>00163                 <span class="keywordtype">void</span> <a class="code" href="classResourceHandler.htm#ac4f6a7c54dbfa28ce948ac049d3b9a4e">removeVerb</a>(<span class="keyword">const</span> std::string&amp; verb);
<a name="l00164"></a>00164                                 
<a name="l00165"></a>00165                 std::string             <a class="code" href="classResourceHandler.htm#a91cd53b34481fefadcd2a9a3de3a4aa3">toJsonString</a>();
<a name="l00166"></a>00166                 <span class="keyword">struct </span>json_object * <a class="code" href="classResourceHandler.htm#aa39d9fccd1824154e8fa7954090f3d0f">toJson</a>();                  <span class="comment">//WARNING: memory allocated; caller must clean</span>
<a name="l00167"></a>00167                 
<a name="l00168"></a><a class="code" href="classResourceHandler.htm#acaa8eec4707443d6041f9ea98ed19ea2">00168</a>                 <span class="keyword">const</span> std::map&lt;std::string,std::string&gt;&amp; <a class="code" href="classResourceHandler.htm#acaa8eec4707443d6041f9ea98ed19ea2">verbs</a>() { <span class="keywordflow">return</span> m_verbs;}
<a name="l00169"></a>00169                 
<a name="l00170"></a>00170         <span class="keyword">private</span>:
<a name="l00171"></a>00171                 std::string m_fileExt;
<a name="l00172"></a>00172                 std::string m_contentType;
<a name="l00173"></a>00173                 std::string m_appId;
<a name="l00174"></a>00174                 <span class="keywordtype">bool</span> m_stream;
<a name="l00175"></a>00175                 <span class="keywordtype">bool</span> m_valid;
<a name="l00176"></a>00176                 std::string m_tag;
<a name="l00177"></a>00177                 uint32_t        m_index;
<a name="l00178"></a>00178                 std::map&lt;std::string,std::string&gt;       m_verbs;                                <span class="comment">// &lt; Verb , json-ized string of parameters &gt;</span>
<a name="l00179"></a>00179 };
<a name="l00180"></a>00180 
<a name="l00181"></a>00181 <span class="preprocessor">#endif</span>
</pre></div></div><!-- contents -->
</div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Properties</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Defines</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="CmdResourceHandlers_8h.htm">CmdResourceHandlers.h</a>      </li>

    <li class="footer">Generated on Wed Sep 26 2012 07:32:48 for LunaSysMgr by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.6.1 </li>
   </ul>
 </div>


</body>
</html>
