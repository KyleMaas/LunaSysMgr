<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>LunaSysMgr: SignalSlot.h Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>

</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">LunaSysMgr
   
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
      <li><a href="dirs.htm"><span>Directories</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.htm"><span>File&#160;List</span></a></li>
      <li><a href="globals.htm"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('SignalSlot_8h.htm','');
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">SignalSlot.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="SignalSlot_8h.htm">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/* @@@LICENSE</span>
<a name="l00002"></a>00002 <span class="comment">*</span>
<a name="l00003"></a>00003 <span class="comment">*      Copyright (c) 2008-2012 Hewlett-Packard Development Company, L.P.</span>
<a name="l00004"></a>00004 <span class="comment">*</span>
<a name="l00005"></a>00005 <span class="comment">* Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span>
<a name="l00006"></a>00006 <span class="comment">* you may not use this file except in compliance with the License.</span>
<a name="l00007"></a>00007 <span class="comment">* You may obtain a copy of the License at</span>
<a name="l00008"></a>00008 <span class="comment">*</span>
<a name="l00009"></a>00009 <span class="comment">* http://www.apache.org/licenses/LICENSE-2.0</span>
<a name="l00010"></a>00010 <span class="comment">*</span>
<a name="l00011"></a>00011 <span class="comment">* Unless required by applicable law or agreed to in writing, software</span>
<a name="l00012"></a>00012 <span class="comment">* distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span>
<a name="l00013"></a>00013 <span class="comment">* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span>
<a name="l00014"></a>00014 <span class="comment">* See the License for the specific language governing permissions and</span>
<a name="l00015"></a>00015 <span class="comment">* limitations under the License.</span>
<a name="l00016"></a>00016 <span class="comment">*</span>
<a name="l00017"></a>00017 <span class="comment">* LICENSE@@@ */</span>
<a name="l00018"></a>00018 
<a name="l00019"></a>00019 
<a name="l00020"></a>00020 
<a name="l00021"></a>00021 
<a name="l00022"></a>00022 <span class="preprocessor">#ifndef SIGNALSLOT_H</span>
<a name="l00023"></a>00023 <span class="preprocessor"></span><span class="preprocessor">#define SIGNALSLOT_H</span>
<a name="l00024"></a>00024 <span class="preprocessor"></span>
<a name="l00025"></a>00025 <span class="preprocessor">#include &quot;<a class="code" href="Common_8h.htm">Common.h</a>&quot;</span>
<a name="l00026"></a>00026 
<a name="l00027"></a>00027 <span class="preprocessor">#include &lt;set&gt;</span>
<a name="l00028"></a>00028 <span class="preprocessor">#include &lt;stdio.h&gt;</span>
<a name="l00029"></a>00029 
<a name="l00030"></a>00030 <span class="keyword">class </span><a class="code" href="classTrackable.htm">Trackable</a>;
<a name="l00031"></a>00031 
<a name="l00032"></a><a class="code" href="classSender.htm">00032</a> <span class="keyword">class </span><a class="code" href="classSender.htm">Sender</a>
<a name="l00033"></a>00033 {
<a name="l00034"></a>00034 <span class="keyword">public</span>:
<a name="l00035"></a>00035         
<a name="l00036"></a>00036         <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classSender.htm#ac4edea24ef7f6a72ac153e71341597c7">disconnectTrackable</a>(<a class="code" href="classTrackable.htm">Trackable</a>* recv) = 0;
<a name="l00037"></a>00037 };
<a name="l00038"></a>00038 
<a name="l00039"></a><a class="code" href="classTrackable.htm">00039</a> <span class="keyword">class </span><a class="code" href="classTrackable.htm">Trackable</a> {
<a name="l00040"></a>00040 <span class="keyword">public</span>:
<a name="l00041"></a>00041 
<a name="l00042"></a><a class="code" href="classTrackable.htm#ab85becd40872495d3902797f47fd8ba1">00042</a>         <span class="keyword">virtual</span> <a class="code" href="classTrackable.htm#ab85becd40872495d3902797f47fd8ba1">~Trackable</a>() {
<a name="l00043"></a>00043                 <span class="keywordflow">for</span> (std::set&lt;Sender*&gt;::iterator it = m_senders.begin();
<a name="l00044"></a>00044                          it != m_senders.end(); ++it) {
<a name="l00045"></a>00045                         (*it)-&gt;disconnectTrackable(<span class="keyword">this</span>);
<a name="l00046"></a>00046                 }
<a name="l00047"></a>00047         }
<a name="l00048"></a>00048 
<a name="l00049"></a><a class="code" href="classTrackable.htm#afbdb07411138bda1188f03f3e0aa9767">00049</a>         <span class="keywordtype">void</span> <a class="code" href="classTrackable.htm#afbdb07411138bda1188f03f3e0aa9767">connected</a>(<a class="code" href="classSender.htm">Sender</a>* sender) {
<a name="l00050"></a>00050                 m_senders.insert(sender);
<a name="l00051"></a>00051         }
<a name="l00052"></a>00052 
<a name="l00053"></a><a class="code" href="classTrackable.htm#afed9ac54b9dce3df7c3e1cf103f58b74">00053</a>         <span class="keywordtype">void</span> <a class="code" href="classTrackable.htm#afed9ac54b9dce3df7c3e1cf103f58b74">disconnected</a>(<a class="code" href="classSender.htm">Sender</a>* sender) {
<a name="l00054"></a>00054                 m_senders.erase(sender);
<a name="l00055"></a>00055         }
<a name="l00056"></a>00056 
<a name="l00057"></a>00057 <span class="keyword">private</span>:
<a name="l00058"></a>00058 
<a name="l00059"></a>00059         std::set&lt;Sender*&gt; m_senders;
<a name="l00060"></a>00060 };
<a name="l00061"></a>00061 
<a name="l00062"></a>00062 
<a name="l00063"></a>00063 <span class="keyword">template</span> &lt;<span class="keyword">class</span> Function&gt;
<a name="l00064"></a><a class="code" href="classFunctionWrapper.htm">00064</a> <span class="keyword">class </span><a class="code" href="classFunctionWrapper.htm">FunctionWrapper</a>
<a name="l00065"></a>00065 {
<a name="l00066"></a>00066 <span class="keyword">public</span>:
<a name="l00067"></a>00067 
<a name="l00068"></a><a class="code" href="classFunctionWrapper.htm#ac952d4bffe807e4517c12c4525828650">00068</a>         <span class="keyword">inline</span> <a class="code" href="classTrackable.htm">Trackable</a>* <a class="code" href="classFunctionWrapper.htm#ac952d4bffe807e4517c12c4525828650">receiver</a>()<span class="keyword"> const </span>{
<a name="l00069"></a>00069                 <span class="keywordflow">return</span> <a class="code" href="classFunctionWrapper.htm#a066b0cd6827162674b332a5678390c77">m_receiver</a>;
<a name="l00070"></a>00070         }
<a name="l00071"></a>00071         
<a name="l00072"></a>00072 <span class="keyword">protected</span>:
<a name="l00073"></a>00073 
<a name="l00074"></a><a class="code" href="classFunctionWrapper.htm#a066b0cd6827162674b332a5678390c77">00074</a>         <a class="code" href="classTrackable.htm">Trackable</a>* <a class="code" href="classFunctionWrapper.htm#a066b0cd6827162674b332a5678390c77">m_receiver</a>;
<a name="l00075"></a><a class="code" href="classFunctionWrapper.htm#a937a827021852be163ddf579e6394e97">00075</a>         Function <a class="code" href="classFunctionWrapper.htm#a937a827021852be163ddf579e6394e97">m_function</a>;
<a name="l00076"></a>00076 };
<a name="l00077"></a>00077 
<a name="l00078"></a>00078 
<a name="l00079"></a>00079 <span class="keyword">template</span> &lt;<span class="keyword">class</span> Arg0=<span class="keywordtype">void</span>, <span class="keyword">class</span> Arg1=<span class="keywordtype">void</span>, <span class="keyword">class</span> Arg2=<span class="keywordtype">void</span>, <span class="keyword">class</span> Arg3=<span class="keywordtype">void</span>, <span class="keyword">class</span> Arg4=<span class="keywordtype">void</span>&gt;
<a name="l00080"></a><a class="code" href="classSlotBase.htm">00080</a> <span class="keyword">class </span><a class="code" href="classSlotBase.htm">SlotBase</a>
<a name="l00081"></a>00081 {
<a name="l00082"></a>00082 <span class="keyword">public</span>:
<a name="l00083"></a>00083 
<a name="l00084"></a>00084         <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classSlotBase.htm#a0ae53ccadfc8f5f9379920c42d432e99">fire</a>(Arg0 arg0, Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4) = 0;
<a name="l00085"></a>00085 };
<a name="l00086"></a>00086 
<a name="l00087"></a>00087 <span class="keyword">template</span> &lt;&gt;
<a name="l00088"></a><a class="code" href="classSlotBase_3_01void_00_01void_00_01void_00_01void_00_01void_01_4.htm">00088</a> <span class="keyword">class </span><a class="code" href="classSlotBase.htm">SlotBase</a>&lt;void, void, void, void, void&gt;
<a name="l00089"></a>00089 {
<a name="l00090"></a>00090 <span class="keyword">public</span>:
<a name="l00091"></a>00091         
<a name="l00092"></a>00092         <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classSlotBase.htm#a0ae53ccadfc8f5f9379920c42d432e99">fire</a>() = 0;
<a name="l00093"></a>00093 };
<a name="l00094"></a>00094 
<a name="l00095"></a>00095 <span class="keyword">template</span> &lt;<span class="keyword">class</span> Arg0&gt;
<a name="l00096"></a><a class="code" href="classSlotBase_3_01Arg0_00_01void_00_01void_00_01void_00_01void_01_4.htm">00096</a> <span class="keyword">class </span><a class="code" href="classSlotBase.htm">SlotBase</a>&lt;Arg0, void, void, void, void&gt;
<a name="l00097"></a>00097 {
<a name="l00098"></a>00098 <span class="keyword">public</span>:
<a name="l00099"></a>00099         
<a name="l00100"></a>00100         <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classSlotBase.htm#a0ae53ccadfc8f5f9379920c42d432e99">fire</a>(Arg0 arg0) = 0;
<a name="l00101"></a>00101 };
<a name="l00102"></a>00102 
<a name="l00103"></a>00103 <span class="keyword">template</span> &lt;<span class="keyword">class</span> Arg0, <span class="keyword">class</span> Arg1&gt;
<a name="l00104"></a><a class="code" href="classSlotBase_3_01Arg0_00_01Arg1_00_01void_00_01void_00_01void_01_4.htm">00104</a> <span class="keyword">class </span><a class="code" href="classSlotBase.htm">SlotBase</a>&lt;Arg0, Arg1, void, void, void&gt;
<a name="l00105"></a>00105 {
<a name="l00106"></a>00106 <span class="keyword">public</span>:
<a name="l00107"></a>00107         
<a name="l00108"></a>00108         <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classSlotBase.htm#a0ae53ccadfc8f5f9379920c42d432e99">fire</a>(Arg0 arg0, Arg1 arg1) = 0;
<a name="l00109"></a>00109 };
<a name="l00110"></a>00110 
<a name="l00111"></a>00111 <span class="keyword">template</span> &lt;<span class="keyword">class</span> Arg0, <span class="keyword">class</span> Arg1, <span class="keyword">class</span> Arg2&gt;
<a name="l00112"></a><a class="code" href="classSlotBase_3_01Arg0_00_01Arg1_00_01Arg2_00_01void_00_01void_01_4.htm">00112</a> <span class="keyword">class </span><a class="code" href="classSlotBase.htm">SlotBase</a>&lt;Arg0, Arg1, Arg2, void, void&gt;
<a name="l00113"></a>00113 {
<a name="l00114"></a>00114 <span class="keyword">public</span>:
<a name="l00115"></a>00115         
<a name="l00116"></a>00116         <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classSlotBase.htm#a0ae53ccadfc8f5f9379920c42d432e99">fire</a>(Arg0 arg0, Arg1 arg1, Arg2 arg2) = 0;
<a name="l00117"></a>00117 };
<a name="l00118"></a>00118 
<a name="l00119"></a>00119 <span class="keyword">template</span> &lt;<span class="keyword">class</span> Arg0, <span class="keyword">class</span> Arg1, <span class="keyword">class</span> Arg2, <span class="keyword">class</span> Arg3&gt;
<a name="l00120"></a><a class="code" href="classSlotBase_3_01Arg0_00_01Arg1_00_01Arg2_00_01Arg3_00_01void_01_4.htm">00120</a> <span class="keyword">class </span><a class="code" href="classSlotBase.htm">SlotBase</a>&lt;Arg0, Arg1, Arg2, Arg3, void&gt;
<a name="l00121"></a>00121 {
<a name="l00122"></a>00122 <span class="keyword">public</span>:
<a name="l00123"></a>00123         
<a name="l00124"></a>00124         <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classSlotBase.htm#a0ae53ccadfc8f5f9379920c42d432e99">fire</a>(Arg0 arg0, Arg1 arg1, Arg2 arg2, Arg3 arg3) = 0;
<a name="l00125"></a>00125 };
<a name="l00126"></a>00126 
<a name="l00127"></a>00127 
<a name="l00128"></a>00128 
<a name="l00129"></a>00129 <span class="keyword">template</span> &lt;<span class="keyword">class</span> Receiver, <span class="keyword">class</span> Arg0=<span class="keywordtype">void</span>, <span class="keyword">class</span> Arg1=<span class="keywordtype">void</span>, <span class="keyword">class</span> Arg2=<span class="keywordtype">void</span>, <span class="keyword">class</span> Arg3=<span class="keywordtype">void</span>, <span class="keyword">class</span> Arg4=<span class="keywordtype">void</span>&gt;
<a name="l00130"></a><a class="code" href="classSlot.htm">00130</a> <span class="keyword">class </span><a class="code" href="classSlot.htm">Slot</a> : <span class="keyword">public</span> <a class="code" href="classSlotBase.htm">SlotBase</a>&lt;Arg0, Arg1, Arg2, Arg3, Arg4&gt;,
<a name="l00131"></a>00131                          <span class="keyword">public</span> <a class="code" href="classFunctionWrapper.htm">FunctionWrapper</a>&lt;void (*)()&gt;
<a name="l00132"></a>00132 {
<a name="l00133"></a>00133 <span class="keyword">public</span>:
<a name="l00134"></a>00134 
<a name="l00135"></a><a class="code" href="classSlot.htm#aa90735e93678fe6988aef372cec8df22">00135</a>         <span class="keyword">typedef</span> void (Receiver::*<a class="code" href="classSlot.htm#aa90735e93678fe6988aef372cec8df22">Function</a>)(Arg0, Arg1, Arg2, Arg3, Arg4);
<a name="l00136"></a>00136         
<a name="l00137"></a><a class="code" href="classSlot.htm#afa43f0b28b72381df386a3f0de11893c">00137</a>         <a class="code" href="classSlot.htm#afa43f0b28b72381df386a3f0de11893c">Slot</a>(Receiver* rec, <a class="code" href="classSlot.htm#aa90735e93678fe6988aef372cec8df22">Function</a> func) {
<a name="l00138"></a>00138                 this-&gt;<a class="code" href="classFunctionWrapper.htm#a066b0cd6827162674b332a5678390c77">m_receiver</a> = rec;
<a name="l00139"></a>00139                 this-&gt;<a class="code" href="classFunctionWrapper.htm#a937a827021852be163ddf579e6394e97">m_function</a> = func;
<a name="l00140"></a>00140         }
<a name="l00141"></a>00141 
<a name="l00142"></a><a class="code" href="classSlot.htm#a33883cbfe41dfe23f8a686080cabc55d">00142</a>         <span class="keywordtype">void</span> <a class="code" href="classSlot.htm#a33883cbfe41dfe23f8a686080cabc55d">fire</a>(Arg0 arg0, Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4) {
<a name="l00143"></a>00143                 (<span class="keyword">static_cast&lt;</span>Receiver*<span class="keyword">&gt;</span>(this-&gt;<a class="code" href="classFunctionWrapper.htm#a066b0cd6827162674b332a5678390c77">m_receiver</a>)-&gt;*(this-&gt;<a class="code" href="classFunctionWrapper.htm#a937a827021852be163ddf579e6394e97">m_function</a>))(arg0, arg1, arg2, arg3, arg4);
<a name="l00144"></a>00144         }       
<a name="l00145"></a>00145 };
<a name="l00146"></a>00146 
<a name="l00147"></a>00147 <span class="keyword">template</span> &lt;<span class="keyword">class</span> Receiver&gt;
<a name="l00148"></a><a class="code" href="classSlot_3_01Receiver_00_01void_00_01void_00_01void_00_01void_00_01void_01_4.htm">00148</a> <span class="keyword">class </span><a class="code" href="classSlot.htm">Slot</a>&lt;Receiver, void, void, void, void, void&gt; : <span class="keyword">public</span> <a class="code" href="classSlotBase.htm">SlotBase</a>&lt;&gt;,
<a name="l00149"></a>00149                                                                                                          <span class="keyword">public</span> <a class="code" href="classFunctionWrapper.htm">FunctionWrapper</a>&lt;void (Receiver::*)()&gt;
<a name="l00150"></a>00150 {
<a name="l00151"></a>00151 <span class="keyword">public</span>:
<a name="l00152"></a>00152 
<a name="l00153"></a><a class="code" href="classSlot_3_01Receiver_00_01void_00_01void_00_01void_00_01void_00_01void_01_4.htm#a4d45c6f20867e4e6c9dc7303fc9a97f0">00153</a>         <span class="keyword">typedef</span> void (Receiver::*<a class="code" href="classSlot.htm#aa90735e93678fe6988aef372cec8df22">Function</a>)();
<a name="l00154"></a>00154 
<a name="l00155"></a><a class="code" href="classSlot_3_01Receiver_00_01void_00_01void_00_01void_00_01void_00_01void_01_4.htm#afffecea5052dba34ceb3be7bcca213e6">00155</a>         <a class="code" href="classSlot_3_01Receiver_00_01void_00_01void_00_01void_00_01void_00_01void_01_4.htm#afffecea5052dba34ceb3be7bcca213e6">Slot</a>(Receiver* rec, <a class="code" href="classSlot.htm#aa90735e93678fe6988aef372cec8df22">Function</a> func) {
<a name="l00156"></a>00156                 this-&gt;<a class="code" href="classFunctionWrapper.htm#a066b0cd6827162674b332a5678390c77">m_receiver</a> = rec;
<a name="l00157"></a>00157                 this-&gt;<a class="code" href="classFunctionWrapper.htm#a937a827021852be163ddf579e6394e97">m_function</a> = func;
<a name="l00158"></a>00158         }
<a name="l00159"></a>00159 
<a name="l00160"></a><a class="code" href="classSlot_3_01Receiver_00_01void_00_01void_00_01void_00_01void_00_01void_01_4.htm#a95e37e9b71d9e7117ca3b6f1d66a88ab">00160</a>         <span class="keywordtype">void</span> <a class="code" href="classSlot_3_01Receiver_00_01void_00_01void_00_01void_00_01void_00_01void_01_4.htm#a95e37e9b71d9e7117ca3b6f1d66a88ab">fire</a>() {
<a name="l00161"></a>00161                 (<span class="keyword">static_cast&lt;</span>Receiver*<span class="keyword">&gt;</span>(this-&gt;<a class="code" href="classFunctionWrapper.htm#a066b0cd6827162674b332a5678390c77">m_receiver</a>)-&gt;*(this-&gt;<a class="code" href="classFunctionWrapper.htm#a937a827021852be163ddf579e6394e97">m_function</a>))();
<a name="l00162"></a>00162         }
<a name="l00163"></a>00163 };
<a name="l00164"></a>00164 
<a name="l00165"></a>00165 <span class="keyword">template</span> &lt;<span class="keyword">class</span> Receiver, <span class="keyword">class</span> Arg0&gt;
<a name="l00166"></a><a class="code" href="classSlot_3_01Receiver_00_01Arg0_00_01void_00_01void_00_01void_00_01void_01_4.htm">00166</a> <span class="keyword">class </span><a class="code" href="classSlot.htm">Slot</a>&lt;Receiver, Arg0, void, void, void, void&gt; : <span class="keyword">public</span> <a class="code" href="classSlotBase.htm">SlotBase</a>&lt;Arg0&gt;,
<a name="l00167"></a>00167                                                                                                          <span class="keyword">public</span> <a class="code" href="classFunctionWrapper.htm">FunctionWrapper</a>&lt;void (Receiver::*)(Arg0)&gt;
<a name="l00168"></a>00168 
<a name="l00169"></a>00169 {
<a name="l00170"></a>00170 <span class="keyword">public</span>:
<a name="l00171"></a>00171 
<a name="l00172"></a><a class="code" href="classSlot_3_01Receiver_00_01Arg0_00_01void_00_01void_00_01void_00_01void_01_4.htm#a9c8335eec68a4f15deb4df042e74b9a3">00172</a>         <span class="keyword">typedef</span> void (Receiver::*<a class="code" href="classSlot.htm#aa90735e93678fe6988aef372cec8df22">Function</a>)(Arg0);
<a name="l00173"></a>00173         
<a name="l00174"></a><a class="code" href="classSlot_3_01Receiver_00_01Arg0_00_01void_00_01void_00_01void_00_01void_01_4.htm#a8f185e058c6c61c1a9e8dc01f8a67a4f">00174</a>         <a class="code" href="classSlot_3_01Receiver_00_01Arg0_00_01void_00_01void_00_01void_00_01void_01_4.htm#a8f185e058c6c61c1a9e8dc01f8a67a4f">Slot</a>(Receiver* rec, <a class="code" href="classSlot.htm#aa90735e93678fe6988aef372cec8df22">Function</a> func) {
<a name="l00175"></a>00175                 <a class="code" href="classTrackable.htm">Trackable</a>* t = rec;
<a name="l00176"></a>00176                 this-&gt;<a class="code" href="classFunctionWrapper.htm#a066b0cd6827162674b332a5678390c77">m_receiver</a> = t;
<a name="l00177"></a>00177                 this-&gt;<a class="code" href="classFunctionWrapper.htm#a937a827021852be163ddf579e6394e97">m_function</a> = func;
<a name="l00178"></a>00178         }
<a name="l00179"></a>00179 
<a name="l00180"></a><a class="code" href="classSlot_3_01Receiver_00_01Arg0_00_01void_00_01void_00_01void_00_01void_01_4.htm#aa6e907ab4cbab6db2db9448c5b866f70">00180</a>         <span class="keywordtype">void</span> <a class="code" href="classSlot_3_01Receiver_00_01Arg0_00_01void_00_01void_00_01void_00_01void_01_4.htm#aa6e907ab4cbab6db2db9448c5b866f70">fire</a>(Arg0 arg) {
<a name="l00181"></a>00181                 (<span class="keyword">static_cast&lt;</span>Receiver*<span class="keyword">&gt;</span>(this-&gt;<a class="code" href="classFunctionWrapper.htm#a066b0cd6827162674b332a5678390c77">m_receiver</a>)-&gt;*(this-&gt;<a class="code" href="classFunctionWrapper.htm#a937a827021852be163ddf579e6394e97">m_function</a>))(arg);
<a name="l00182"></a>00182         }
<a name="l00183"></a>00183 };
<a name="l00184"></a>00184 
<a name="l00185"></a>00185 <span class="keyword">template</span> &lt;<span class="keyword">class</span> Receiver, <span class="keyword">class</span> Arg0, <span class="keyword">class</span> Arg1&gt;
<a name="l00186"></a><a class="code" href="classSlot_3_01Receiver_00_01Arg0_00_01Arg1_00_01void_00_01void_00_01void_01_4.htm">00186</a> <span class="keyword">class </span><a class="code" href="classSlot.htm">Slot</a>&lt;Receiver, Arg0, Arg1, void, void, void&gt; : <span class="keyword">public</span> <a class="code" href="classSlotBase.htm">SlotBase</a>&lt;Arg0, Arg1&gt;,
<a name="l00187"></a>00187                                                                                                          <span class="keyword">public</span> <a class="code" href="classFunctionWrapper.htm">FunctionWrapper</a>&lt;void (Receiver::*)(Arg0,Arg1)&gt;
<a name="l00188"></a>00188 {
<a name="l00189"></a>00189 <span class="keyword">public</span>:
<a name="l00190"></a>00190 
<a name="l00191"></a><a class="code" href="classSlot_3_01Receiver_00_01Arg0_00_01Arg1_00_01void_00_01void_00_01void_01_4.htm#a0693c648f85c058db7b68415b8d9a7c6">00191</a>         <span class="keyword">typedef</span> void (Receiver::*<a class="code" href="classSlot.htm#aa90735e93678fe6988aef372cec8df22">Function</a>)(Arg0, Arg1);
<a name="l00192"></a>00192         
<a name="l00193"></a><a class="code" href="classSlot_3_01Receiver_00_01Arg0_00_01Arg1_00_01void_00_01void_00_01void_01_4.htm#ad71c02fe5ec34b8fcbc31657fe47d728">00193</a>         <a class="code" href="classSlot_3_01Receiver_00_01Arg0_00_01Arg1_00_01void_00_01void_00_01void_01_4.htm#ad71c02fe5ec34b8fcbc31657fe47d728">Slot</a>(Receiver* rec, <a class="code" href="classSlot.htm#aa90735e93678fe6988aef372cec8df22">Function</a> func) {
<a name="l00194"></a>00194                 this-&gt;<a class="code" href="classFunctionWrapper.htm#a066b0cd6827162674b332a5678390c77">m_receiver</a> = rec;
<a name="l00195"></a>00195                 this-&gt;<a class="code" href="classFunctionWrapper.htm#a937a827021852be163ddf579e6394e97">m_function</a> = func;
<a name="l00196"></a>00196         }
<a name="l00197"></a>00197 
<a name="l00198"></a><a class="code" href="classSlot_3_01Receiver_00_01Arg0_00_01Arg1_00_01void_00_01void_00_01void_01_4.htm#a91ea7a0b1d73250169fb0ad664dc02da">00198</a>         <span class="keywordtype">void</span> <a class="code" href="classSlot_3_01Receiver_00_01Arg0_00_01Arg1_00_01void_00_01void_00_01void_01_4.htm#a91ea7a0b1d73250169fb0ad664dc02da">fire</a>(Arg0 arg0, Arg1 arg1) {
<a name="l00199"></a>00199                 (<span class="keyword">static_cast&lt;</span>Receiver*<span class="keyword">&gt;</span>(this-&gt;<a class="code" href="classFunctionWrapper.htm#a066b0cd6827162674b332a5678390c77">m_receiver</a>)-&gt;*(this-&gt;<a class="code" href="classFunctionWrapper.htm#a937a827021852be163ddf579e6394e97">m_function</a>))(arg0, arg1);
<a name="l00200"></a>00200         }       
<a name="l00201"></a>00201 };
<a name="l00202"></a>00202 
<a name="l00203"></a>00203 <span class="keyword">template</span> &lt;<span class="keyword">class</span> Receiver, <span class="keyword">class</span> Arg0, <span class="keyword">class</span> Arg1, <span class="keyword">class</span> Arg2&gt;
<a name="l00204"></a><a class="code" href="classSlot_3_01Receiver_00_01Arg0_00_01Arg1_00_01Arg2_00_01void_00_01void_01_4.htm">00204</a> <span class="keyword">class </span><a class="code" href="classSlot.htm">Slot</a>&lt;Receiver, Arg0, Arg1, Arg2, void, void&gt; : <span class="keyword">public</span> <a class="code" href="classSlotBase.htm">SlotBase</a>&lt;Arg0, Arg1, Arg2&gt;,
<a name="l00205"></a>00205                                                                                                          <span class="keyword">public</span> <a class="code" href="classFunctionWrapper.htm">FunctionWrapper</a>&lt;void (Receiver::*)(Arg0,Arg1,Arg2)&gt;
<a name="l00206"></a>00206 {
<a name="l00207"></a>00207 <span class="keyword">public</span>:
<a name="l00208"></a>00208 
<a name="l00209"></a><a class="code" href="classSlot_3_01Receiver_00_01Arg0_00_01Arg1_00_01Arg2_00_01void_00_01void_01_4.htm#a5d37beda8e224c5bac63081bb744db75">00209</a>         <span class="keyword">typedef</span> void (Receiver::*<a class="code" href="classSlot.htm#aa90735e93678fe6988aef372cec8df22">Function</a>)(Arg0, Arg1, Arg2);
<a name="l00210"></a>00210         
<a name="l00211"></a><a class="code" href="classSlot_3_01Receiver_00_01Arg0_00_01Arg1_00_01Arg2_00_01void_00_01void_01_4.htm#a6cc19890180933c12998f13996f388da">00211</a>         <a class="code" href="classSlot_3_01Receiver_00_01Arg0_00_01Arg1_00_01Arg2_00_01void_00_01void_01_4.htm#a6cc19890180933c12998f13996f388da">Slot</a>(Receiver* rec, <a class="code" href="classSlot.htm#aa90735e93678fe6988aef372cec8df22">Function</a> func) {
<a name="l00212"></a>00212                 this-&gt;<a class="code" href="classFunctionWrapper.htm#a066b0cd6827162674b332a5678390c77">m_receiver</a> = rec;
<a name="l00213"></a>00213                 this-&gt;<a class="code" href="classFunctionWrapper.htm#a937a827021852be163ddf579e6394e97">m_function</a> = func;
<a name="l00214"></a>00214         }
<a name="l00215"></a>00215 
<a name="l00216"></a><a class="code" href="classSlot_3_01Receiver_00_01Arg0_00_01Arg1_00_01Arg2_00_01void_00_01void_01_4.htm#a250efee53a65621fa53a15fac523f6aa">00216</a>         <span class="keywordtype">void</span> <a class="code" href="classSlot_3_01Receiver_00_01Arg0_00_01Arg1_00_01Arg2_00_01void_00_01void_01_4.htm#a250efee53a65621fa53a15fac523f6aa">fire</a>(Arg0 arg0, Arg1 arg1, Arg2 arg2) {
<a name="l00217"></a>00217                 (<span class="keyword">static_cast&lt;</span>Receiver*<span class="keyword">&gt;</span>(this-&gt;<a class="code" href="classFunctionWrapper.htm#a066b0cd6827162674b332a5678390c77">m_receiver</a>)-&gt;*(this-&gt;<a class="code" href="classFunctionWrapper.htm#a937a827021852be163ddf579e6394e97">m_function</a>))(arg0, arg1, arg2);
<a name="l00218"></a>00218         }       
<a name="l00219"></a>00219 };
<a name="l00220"></a>00220 
<a name="l00221"></a>00221 <span class="keyword">template</span> &lt;<span class="keyword">class</span> Receiver, <span class="keyword">class</span> Arg0, <span class="keyword">class</span> Arg1, <span class="keyword">class</span> Arg2, <span class="keyword">class</span> Arg3&gt;
<a name="l00222"></a><a class="code" href="classSlot_3_01Receiver_00_01Arg0_00_01Arg1_00_01Arg2_00_01Arg3_00_01void_01_4.htm">00222</a> <span class="keyword">class </span><a class="code" href="classSlot.htm">Slot</a>&lt;Receiver, Arg0, Arg1, Arg2, Arg3, void&gt; : <span class="keyword">public</span> <a class="code" href="classSlotBase.htm">SlotBase</a>&lt;Arg0, Arg1, Arg2, Arg3&gt;,
<a name="l00223"></a>00223                                                                                                          <span class="keyword">public</span> <a class="code" href="classFunctionWrapper.htm">FunctionWrapper</a>&lt;void (Receiver::*)(Arg0,Arg1,Arg2,Arg3)&gt;
<a name="l00224"></a>00224 {
<a name="l00225"></a>00225 <span class="keyword">public</span>:
<a name="l00226"></a>00226 
<a name="l00227"></a><a class="code" href="classSlot_3_01Receiver_00_01Arg0_00_01Arg1_00_01Arg2_00_01Arg3_00_01void_01_4.htm#a503b5c91cac1dbc4264fd92f56fddfad">00227</a>         <span class="keyword">typedef</span> void (Receiver::*<a class="code" href="classSlot.htm#aa90735e93678fe6988aef372cec8df22">Function</a>)(Arg0, Arg1, Arg2, Arg3);
<a name="l00228"></a>00228         
<a name="l00229"></a><a class="code" href="classSlot_3_01Receiver_00_01Arg0_00_01Arg1_00_01Arg2_00_01Arg3_00_01void_01_4.htm#a5533251a8dee8c8a50a2e4494b144d97">00229</a>         <a class="code" href="classSlot_3_01Receiver_00_01Arg0_00_01Arg1_00_01Arg2_00_01Arg3_00_01void_01_4.htm#a5533251a8dee8c8a50a2e4494b144d97">Slot</a>(Receiver* rec, <a class="code" href="classSlot.htm#aa90735e93678fe6988aef372cec8df22">Function</a> func) {
<a name="l00230"></a>00230                 this-&gt;<a class="code" href="classFunctionWrapper.htm#a066b0cd6827162674b332a5678390c77">m_receiver</a> = rec;
<a name="l00231"></a>00231                 this-&gt;<a class="code" href="classFunctionWrapper.htm#a937a827021852be163ddf579e6394e97">m_function</a> = func;
<a name="l00232"></a>00232         }
<a name="l00233"></a>00233 
<a name="l00234"></a><a class="code" href="classSlot_3_01Receiver_00_01Arg0_00_01Arg1_00_01Arg2_00_01Arg3_00_01void_01_4.htm#a2f3b4a4300520b492dee045ec2f2da1b">00234</a>         <span class="keywordtype">void</span> <a class="code" href="classSlot_3_01Receiver_00_01Arg0_00_01Arg1_00_01Arg2_00_01Arg3_00_01void_01_4.htm#a2f3b4a4300520b492dee045ec2f2da1b">fire</a>(Arg0 arg0, Arg1 arg1, Arg2 arg2, Arg3 arg3) {
<a name="l00235"></a>00235                 (this-&gt;<a class="code" href="classFunctionWrapper.htm#a066b0cd6827162674b332a5678390c77">m_receiver</a>-&gt;*(this-&gt;<a class="code" href="classFunctionWrapper.htm#a937a827021852be163ddf579e6394e97">m_function</a>))(arg0, arg1, arg2, arg3);
<a name="l00236"></a>00236         }       
<a name="l00237"></a>00237 };
<a name="l00238"></a>00238 
<a name="l00239"></a>00239 
<a name="l00240"></a>00240 
<a name="l00241"></a>00241 
<a name="l00242"></a>00242 
<a name="l00243"></a>00243 <span class="keyword">template</span> &lt;<span class="keyword">class</span> Arg0=<span class="keywordtype">void</span>, <span class="keyword">class</span> Arg1=<span class="keywordtype">void</span>, <span class="keyword">class</span> Arg2=<span class="keywordtype">void</span>, <span class="keyword">class</span> Arg3=<span class="keywordtype">void</span>, <span class="keyword">class</span> Arg4=<span class="keywordtype">void</span>&gt;
<a name="l00244"></a><a class="code" href="classSignalBase.htm">00244</a> <span class="keyword">class </span><a class="code" href="classSignalBase.htm">SignalBase</a> : <span class="keyword">public</span> <a class="code" href="classSender.htm">Sender</a>
<a name="l00245"></a>00245 {
<a name="l00246"></a>00246 <span class="keyword">public</span>:
<a name="l00247"></a>00247 
<a name="l00248"></a><a class="code" href="classSignalBase.htm#a26c14857855a55a2ad435e9c8dfc7281">00248</a>         <span class="keyword">typedef</span> <a class="code" href="classSlot.htm">Slot&lt;Trackable, Arg0, Arg1, Arg2, Arg3, Arg4&gt;</a> <a class="code" href="classSignalBase.htm#a26c14857855a55a2ad435e9c8dfc7281">Sl</a>;
<a name="l00249"></a>00249         
<a name="l00250"></a><a class="code" href="classSignalBase.htm#a652fcade39230aeb39519ae4026df37b">00250</a>         <span class="keyword">virtual</span> <a class="code" href="classSignalBase.htm#a652fcade39230aeb39519ae4026df37b">~SignalBase</a>() {
<a name="l00251"></a>00251                 <span class="keywordflow">for</span> (<span class="keyword">typename</span> SlotSet::const_iterator it = this-&gt;<a class="code" href="classSignalBase.htm#a9b4e9b17e827f03c13e85e4c4a29b2d1">m_slots</a>.begin();
<a name="l00252"></a>00252                          it != this-&gt;<a class="code" href="classSignalBase.htm#a9b4e9b17e827f03c13e85e4c4a29b2d1">m_slots</a>.end(); ++it) {
<a name="l00253"></a>00253                         <a class="code" href="classSlot.htm">Sl</a>* s = <span class="keyword">static_cast&lt;</span><a class="code" href="classSlot.htm">Sl</a>*<span class="keyword">&gt;</span>(*it);
<a name="l00254"></a>00254                         s-&gt;<a class="code" href="classFunctionWrapper.htm#ac952d4bffe807e4517c12c4525828650">receiver</a>()-&gt;<a class="code" href="classTrackable.htm#afed9ac54b9dce3df7c3e1cf103f58b74">disconnected</a>(<span class="keyword">this</span>);
<a name="l00255"></a>00255                         <span class="keyword">delete</span> (*it);
<a name="l00256"></a>00256                 }
<a name="l00257"></a>00257         }
<a name="l00258"></a>00258 
<a name="l00259"></a><a class="code" href="classSignalBase.htm#a3f023ab0c4990934c6b970cdf09a8178">00259</a>         <span class="keywordtype">void</span> <a class="code" href="classSignalBase.htm#a3f023ab0c4990934c6b970cdf09a8178">connect</a>(<a class="code" href="classSlotBase.htm">SlotBase&lt;Arg0, Arg1, Arg2, Arg3, Arg4&gt;</a>* slot) {
<a name="l00260"></a>00260                 <a class="code" href="classSignalBase.htm#a9b4e9b17e827f03c13e85e4c4a29b2d1">m_slots</a>.insert(slot);
<a name="l00261"></a>00261         }
<a name="l00262"></a>00262 
<a name="l00263"></a><a class="code" href="classSignalBase.htm#ace0803c5f6a969ec6f1a23eeb3b73840">00263</a>         <span class="keywordtype">void</span> <a class="code" href="classSignalBase.htm#ace0803c5f6a969ec6f1a23eeb3b73840">connect</a>(<a class="code" href="classTrackable.htm">Trackable</a>* recv, <a class="code" href="classSlotBase.htm">SlotBase&lt;Arg0, Arg1, Arg2, Arg3, Arg4&gt;</a>* slot) {
<a name="l00264"></a>00264                 <a class="code" href="classSignalBase.htm#a9b4e9b17e827f03c13e85e4c4a29b2d1">m_slots</a>.insert(slot);
<a name="l00265"></a>00265                 recv-&gt;<a class="code" href="classTrackable.htm#afbdb07411138bda1188f03f3e0aa9767">connected</a>(<span class="keyword">this</span>);
<a name="l00266"></a>00266         }
<a name="l00267"></a>00267 
<a name="l00268"></a><a class="code" href="classSignalBase.htm#a5e674e0d819479ca28eeb792ff291d4b">00268</a>         <span class="keywordtype">void</span> <a class="code" href="classSignalBase.htm#a5e674e0d819479ca28eeb792ff291d4b">disconnect</a>(<a class="code" href="classTrackable.htm">Trackable</a>* recv) {
<a name="l00269"></a>00269                 <span class="keyword">typename</span> SlotSet::iterator it = this-&gt;<a class="code" href="classSignalBase.htm#a9b4e9b17e827f03c13e85e4c4a29b2d1">m_slots</a>.begin();
<a name="l00270"></a>00270                 <span class="keyword">typename</span> SlotSet::iterator itEnd = this-&gt;<a class="code" href="classSignalBase.htm#a9b4e9b17e827f03c13e85e4c4a29b2d1">m_slots</a>.end();
<a name="l00271"></a>00271                 <span class="keywordflow">while</span> (it != itEnd) {
<a name="l00272"></a>00272                         <a class="code" href="classSlot.htm">Sl</a>* s = <span class="keyword">static_cast&lt;</span><a class="code" href="classSlot.htm">Sl</a>*<span class="keyword">&gt;</span>(*it);
<a name="l00273"></a>00273                         <span class="keywordflow">if</span> (s-&gt;<a class="code" href="classFunctionWrapper.htm#ac952d4bffe807e4517c12c4525828650">receiver</a>() == recv) {
<a name="l00274"></a>00274                                 <span class="keyword">delete</span> (*it);
<a name="l00275"></a>00275                                 this-&gt;<a class="code" href="classSignalBase.htm#a9b4e9b17e827f03c13e85e4c4a29b2d1">m_slots</a>.erase(it++);
<a name="l00276"></a>00276                                 <span class="keywordflow">continue</span>;
<a name="l00277"></a>00277                         }
<a name="l00278"></a>00278 
<a name="l00279"></a>00279                         ++it;
<a name="l00280"></a>00280                 }
<a name="l00281"></a>00281         }
<a name="l00282"></a>00282 
<a name="l00283"></a><a class="code" href="classSignalBase.htm#a93994377e42ad74e5e9e0ee8a1ce90d7">00283</a>         <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classSignalBase.htm#a93994377e42ad74e5e9e0ee8a1ce90d7">disconnectTrackable</a>(<a class="code" href="classTrackable.htm">Trackable</a>* recv) {
<a name="l00284"></a>00284                 <a class="code" href="classSignalBase.htm#a5e674e0d819479ca28eeb792ff291d4b">disconnect</a>(recv);
<a name="l00285"></a>00285         }
<a name="l00286"></a>00286         
<a name="l00287"></a>00287 <span class="keyword">protected</span>:
<a name="l00288"></a>00288 
<a name="l00289"></a><a class="code" href="classSignalBase.htm#a26bc3eb5084bc60d33c47f07c7d3eb10">00289</a>         <span class="keyword">typedef</span> std::set&lt;SlotBase&lt;Arg0, Arg1, Arg2, Arg3, Arg4&gt;* &gt; <a class="code" href="classSignalBase.htm#a26bc3eb5084bc60d33c47f07c7d3eb10">SlotSet</a>;
<a name="l00290"></a><a class="code" href="classSignalBase.htm#a9b4e9b17e827f03c13e85e4c4a29b2d1">00290</a>         <a class="code" href="classSignalBase.htm#a26bc3eb5084bc60d33c47f07c7d3eb10">SlotSet</a> <a class="code" href="classSignalBase.htm#a9b4e9b17e827f03c13e85e4c4a29b2d1">m_slots</a>;
<a name="l00291"></a>00291 };
<a name="l00292"></a>00292 
<a name="l00293"></a>00293 <span class="keyword">template</span> &lt;<span class="keyword">class</span> Arg0=<span class="keywordtype">void</span>, <span class="keyword">class</span> Arg1=<span class="keywordtype">void</span>, <span class="keyword">class</span> Arg2=<span class="keywordtype">void</span>, <span class="keyword">class</span> Arg3=<span class="keywordtype">void</span>, <span class="keyword">class</span> Arg4=<span class="keywordtype">void</span>&gt;
<a name="l00294"></a><a class="code" href="classSignal.htm">00294</a> <span class="keyword">class </span><a class="code" href="classSignal.htm">Signal</a> : <span class="keyword">public</span> <a class="code" href="classSignalBase.htm">SignalBase</a>&lt;Arg0, Arg1, Arg2, Arg3, Arg4&gt;
<a name="l00295"></a>00295 {
<a name="l00296"></a>00296 <span class="keyword">public</span>:
<a name="l00297"></a>00297 
<a name="l00298"></a>00298         <span class="keyword">template</span> &lt;<span class="keyword">class</span> Receiver&gt;
<a name="l00299"></a><a class="code" href="classSignal.htm#a3f34b4f21a56cf2de7fdb42fcb1e20a5">00299</a>         <span class="keywordtype">void</span> <a class="code" href="classSignal.htm#a3f34b4f21a56cf2de7fdb42fcb1e20a5">connect</a>(Receiver* rec, <span class="keywordtype">void</span> (Receiver::*func)(Arg0, Arg1, Arg2, Arg3, Arg4)) {
<a name="l00300"></a>00300                 <a class="code" href="classSignal.htm#a3f34b4f21a56cf2de7fdb42fcb1e20a5">SignalBase&lt;Arg0&gt;::connect</a>(rec, <span class="keyword">new</span> <a class="code" href="classSlot.htm">Slot&lt;Receiver, Arg0, Arg1, Arg2, Arg3, Arg4&gt;</a>(rec, func));
<a name="l00301"></a>00301         }
<a name="l00302"></a>00302 
<a name="l00303"></a><a class="code" href="classSignal.htm#a08d44aa899a50da2d12f7194c41bb0ed">00303</a>         <span class="keywordtype">void</span> <a class="code" href="classSignal.htm#a08d44aa899a50da2d12f7194c41bb0ed">fire</a>(Arg0 arg0, Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4) {
<a name="l00304"></a>00304                 <span class="keyword">typename</span> std::set&lt;SlotBase&lt;Arg0, Arg1, Arg2, Arg3, Arg4&gt;* &gt;::iterator it = this-&gt;<a class="code" href="classSignalBase.htm#a9b4e9b17e827f03c13e85e4c4a29b2d1">m_slots</a>.begin();
<a name="l00305"></a>00305                 <span class="keywordflow">while</span> (it != this-&gt;<a class="code" href="classSignalBase.htm#a9b4e9b17e827f03c13e85e4c4a29b2d1">m_slots</a>.end()) {
<a name="l00306"></a>00306                         (*it++)-&gt;<a class="code" href="classSignal.htm#a08d44aa899a50da2d12f7194c41bb0ed">fire</a>(arg0, arg1, arg2, arg3, arg4);
<a name="l00307"></a>00307                 }
<a name="l00308"></a>00308         }
<a name="l00309"></a>00309 };
<a name="l00310"></a>00310 
<a name="l00311"></a>00311         
<a name="l00312"></a>00312 <span class="keyword">template</span> &lt;&gt;
<a name="l00313"></a><a class="code" href="classSignal_3_01void_00_01void_00_01void_00_01void_00_01void_01_4.htm">00313</a> <span class="keyword">class </span><a class="code" href="classSignal.htm">Signal</a>&lt;void, void, void, void, void&gt; : <span class="keyword">public</span> <a class="code" href="classSignalBase.htm">SignalBase</a>&lt;&gt;
<a name="l00314"></a>00314 {
<a name="l00315"></a>00315 <span class="keyword">public</span>:
<a name="l00316"></a>00316 
<a name="l00317"></a>00317         <span class="keyword">template</span> &lt;<span class="keyword">class</span> Receiver&gt;
<a name="l00318"></a><a class="code" href="classSignal_3_01void_00_01void_00_01void_00_01void_00_01void_01_4.htm#ac7a5dd9f462c06dde404f703838060cb">00318</a>         <span class="keywordtype">void</span> <a class="code" href="classSignal_3_01void_00_01void_00_01void_00_01void_00_01void_01_4.htm#ac7a5dd9f462c06dde404f703838060cb">connect</a>(Receiver* rec, <span class="keywordtype">void</span> (Receiver::*func)()) {
<a name="l00319"></a>00319                 <a class="code" href="classSignal.htm#a3f34b4f21a56cf2de7fdb42fcb1e20a5">SignalBase&lt;&gt;::connect</a>(rec, <span class="keyword">new</span> <a class="code" href="classSlot.htm">Slot&lt;Receiver&gt;</a>(rec, func));
<a name="l00320"></a>00320         }
<a name="l00321"></a>00321                 
<a name="l00322"></a><a class="code" href="classSignal_3_01void_00_01void_00_01void_00_01void_00_01void_01_4.htm#a30a6685078d548cdaea9aadb111c0580">00322</a>         <span class="keywordtype">void</span> <a class="code" href="classSignal_3_01void_00_01void_00_01void_00_01void_00_01void_01_4.htm#a30a6685078d548cdaea9aadb111c0580">fire</a>() {
<a name="l00323"></a>00323                 std::set&lt;SlotBase&lt;&gt;* &gt;::iterator it = this-&gt;<a class="code" href="classSignalBase.htm#a9b4e9b17e827f03c13e85e4c4a29b2d1">m_slots</a>.begin();
<a name="l00324"></a>00324                 <span class="keywordflow">while</span> (it != this-&gt;<a class="code" href="classSignalBase.htm#a9b4e9b17e827f03c13e85e4c4a29b2d1">m_slots</a>.end()) {
<a name="l00325"></a>00325                         (*it++)-&gt;<a class="code" href="classSignal.htm#a08d44aa899a50da2d12f7194c41bb0ed">fire</a>();
<a name="l00326"></a>00326                 }
<a name="l00327"></a>00327         }
<a name="l00328"></a>00328 };
<a name="l00329"></a>00329 
<a name="l00330"></a>00330 <span class="keyword">template</span> &lt;<span class="keyword">class</span> Arg0&gt;
<a name="l00331"></a><a class="code" href="classSignal_3_01Arg0_00_01void_00_01void_00_01void_00_01void_01_4.htm">00331</a> <span class="keyword">class </span><a class="code" href="classSignal.htm">Signal</a>&lt;Arg0, void, void, void, void&gt; : <span class="keyword">public</span> <a class="code" href="classSignalBase.htm">SignalBase</a>&lt;Arg0&gt;
<a name="l00332"></a>00332 {
<a name="l00333"></a>00333 <span class="keyword">public</span>:
<a name="l00334"></a>00334 
<a name="l00335"></a>00335         <span class="keyword">template</span> &lt;<span class="keyword">class</span> Receiver&gt;
<a name="l00336"></a><a class="code" href="classSignal_3_01Arg0_00_01void_00_01void_00_01void_00_01void_01_4.htm#a13f78a0bde0f0a8d7b7fb0f0ae122ca0">00336</a>         <span class="keywordtype">void</span> <a class="code" href="classSignal_3_01Arg0_00_01void_00_01void_00_01void_00_01void_01_4.htm#a13f78a0bde0f0a8d7b7fb0f0ae122ca0">connect</a>(Receiver* rec, <span class="keywordtype">void</span> (Receiver::*func)(Arg0)) {
<a name="l00337"></a>00337                 <a class="code" href="classSignal.htm#a3f34b4f21a56cf2de7fdb42fcb1e20a5">SignalBase&lt;Arg0&gt;::connect</a>(rec, <span class="keyword">new</span> <a class="code" href="classSlot.htm">Slot&lt;Receiver, Arg0&gt;</a>(rec, func));
<a name="l00338"></a>00338         }
<a name="l00339"></a>00339 
<a name="l00340"></a><a class="code" href="classSignal_3_01Arg0_00_01void_00_01void_00_01void_00_01void_01_4.htm#add65cd101fc3564780a330b07abde5e6">00340</a>         <span class="keywordtype">void</span> <a class="code" href="classSignal_3_01Arg0_00_01void_00_01void_00_01void_00_01void_01_4.htm#add65cd101fc3564780a330b07abde5e6">fire</a>(Arg0 arg0) {
<a name="l00341"></a>00341                 <span class="keyword">typename</span> std::set&lt;SlotBase&lt;Arg0&gt;* &gt;::iterator it = this-&gt;<a class="code" href="classSignalBase.htm#a9b4e9b17e827f03c13e85e4c4a29b2d1">m_slots</a>.begin();
<a name="l00342"></a>00342                 <span class="keywordflow">while</span> (it != this-&gt;<a class="code" href="classSignalBase.htm#a9b4e9b17e827f03c13e85e4c4a29b2d1">m_slots</a>.end()) {
<a name="l00343"></a>00343                         (*it++)-&gt;<a class="code" href="classSignal.htm#a08d44aa899a50da2d12f7194c41bb0ed">fire</a>(arg0);
<a name="l00344"></a>00344                 }
<a name="l00345"></a>00345         }
<a name="l00346"></a>00346 };
<a name="l00347"></a>00347 
<a name="l00348"></a>00348 <span class="keyword">template</span> &lt;<span class="keyword">class</span> Arg0, <span class="keyword">class</span> Arg1&gt;
<a name="l00349"></a><a class="code" href="classSignal_3_01Arg0_00_01Arg1_00_01void_00_01void_00_01void_01_4.htm">00349</a> <span class="keyword">class </span><a class="code" href="classSignal.htm">Signal</a>&lt;Arg0, Arg1, void, void, void&gt; : <span class="keyword">public</span> <a class="code" href="classSignalBase.htm">SignalBase</a>&lt;Arg0, Arg1&gt;
<a name="l00350"></a>00350 {
<a name="l00351"></a>00351 <span class="keyword">public</span>:
<a name="l00352"></a>00352 
<a name="l00353"></a>00353         <span class="keyword">template</span> &lt;<span class="keyword">class</span> Receiver&gt;
<a name="l00354"></a><a class="code" href="classSignal_3_01Arg0_00_01Arg1_00_01void_00_01void_00_01void_01_4.htm#ab17584d825fa97bf59ec09600e3bc975">00354</a>         <span class="keywordtype">void</span> <a class="code" href="classSignal_3_01Arg0_00_01Arg1_00_01void_00_01void_00_01void_01_4.htm#ab17584d825fa97bf59ec09600e3bc975">connect</a>(Receiver* rec, <span class="keywordtype">void</span> (Receiver::*func)(Arg0, Arg1)) {
<a name="l00355"></a>00355                 <a class="code" href="classSignal.htm#a3f34b4f21a56cf2de7fdb42fcb1e20a5">SignalBase&lt;Arg0, Arg1&gt;::connect</a>(rec, <span class="keyword">new</span> <a class="code" href="classSlot.htm">Slot&lt;Receiver, Arg0, Arg1&gt;</a>(rec, func));
<a name="l00356"></a>00356         }
<a name="l00357"></a>00357 
<a name="l00358"></a><a class="code" href="classSignal_3_01Arg0_00_01Arg1_00_01void_00_01void_00_01void_01_4.htm#adc33f7437de3c6afc257f853f28f8942">00358</a>         <span class="keywordtype">void</span> <a class="code" href="classSignal_3_01Arg0_00_01Arg1_00_01void_00_01void_00_01void_01_4.htm#adc33f7437de3c6afc257f853f28f8942">fire</a>(Arg0 arg0, Arg1 arg1) {
<a name="l00359"></a>00359                 <span class="keyword">typename</span> std::set&lt;SlotBase&lt;Arg0, Arg1&gt;* &gt;::iterator it = this-&gt;<a class="code" href="classSignalBase.htm#a9b4e9b17e827f03c13e85e4c4a29b2d1">m_slots</a>.begin();
<a name="l00360"></a>00360                 <span class="keywordflow">while</span> (it != this-&gt;<a class="code" href="classSignalBase.htm#a9b4e9b17e827f03c13e85e4c4a29b2d1">m_slots</a>.end()) {
<a name="l00361"></a>00361                         (*it++)-&gt;<a class="code" href="classSignal.htm#a08d44aa899a50da2d12f7194c41bb0ed">fire</a>(arg0, arg1);
<a name="l00362"></a>00362                 }
<a name="l00363"></a>00363         }
<a name="l00364"></a>00364 };
<a name="l00365"></a>00365 
<a name="l00366"></a>00366 <span class="keyword">template</span> &lt;<span class="keyword">class</span> Arg0, <span class="keyword">class</span> Arg1, <span class="keyword">class</span> Arg2&gt;
<a name="l00367"></a><a class="code" href="classSignal_3_01Arg0_00_01Arg1_00_01Arg2_00_01void_00_01void_01_4.htm">00367</a> <span class="keyword">class </span><a class="code" href="classSignal.htm">Signal</a>&lt;Arg0, Arg1, Arg2, void, void&gt; : <span class="keyword">public</span> <a class="code" href="classSignalBase.htm">SignalBase</a>&lt;Arg0, Arg1, Arg2&gt;
<a name="l00368"></a>00368 {
<a name="l00369"></a>00369 <span class="keyword">public</span>:
<a name="l00370"></a>00370 
<a name="l00371"></a>00371         <span class="keyword">template</span> &lt;<span class="keyword">class</span> Receiver&gt;
<a name="l00372"></a><a class="code" href="classSignal_3_01Arg0_00_01Arg1_00_01Arg2_00_01void_00_01void_01_4.htm#a0c6500ea536307fa2653480e2fa9f3bd">00372</a>         <span class="keywordtype">void</span> <a class="code" href="classSignal_3_01Arg0_00_01Arg1_00_01Arg2_00_01void_00_01void_01_4.htm#a0c6500ea536307fa2653480e2fa9f3bd">connect</a>(Receiver* rec, <span class="keywordtype">void</span> (Receiver::*func)(Arg0, Arg1, Arg2)) {
<a name="l00373"></a>00373                 <a class="code" href="classSignal.htm#a3f34b4f21a56cf2de7fdb42fcb1e20a5">SignalBase&lt;Arg0, Arg1, Arg2&gt;::connect</a>(rec, <span class="keyword">new</span> <a class="code" href="classSlot.htm">Slot&lt;Receiver, Arg0, Arg1, Arg2&gt;</a>(rec, func));
<a name="l00374"></a>00374         }
<a name="l00375"></a>00375 
<a name="l00376"></a><a class="code" href="classSignal_3_01Arg0_00_01Arg1_00_01Arg2_00_01void_00_01void_01_4.htm#ab0a35a6b33797561a3073c5262d400a5">00376</a>         <span class="keywordtype">void</span> <a class="code" href="classSignal_3_01Arg0_00_01Arg1_00_01Arg2_00_01void_00_01void_01_4.htm#ab0a35a6b33797561a3073c5262d400a5">fire</a>(Arg0 arg0, Arg1 arg1, Arg2 arg2) {
<a name="l00377"></a>00377                 <span class="keyword">typename</span> std::set&lt;SlotBase&lt;Arg0, Arg1, Arg2&gt;* &gt;::iterator it = this-&gt;<a class="code" href="classSignalBase.htm#a9b4e9b17e827f03c13e85e4c4a29b2d1">m_slots</a>.begin();
<a name="l00378"></a>00378                 <span class="keywordflow">while</span> (it != this-&gt;<a class="code" href="classSignalBase.htm#a9b4e9b17e827f03c13e85e4c4a29b2d1">m_slots</a>.end()) {
<a name="l00379"></a>00379                         (*it++)-&gt;<a class="code" href="classSignal.htm#a08d44aa899a50da2d12f7194c41bb0ed">fire</a>(arg0, arg1, arg2);
<a name="l00380"></a>00380                 }
<a name="l00381"></a>00381         }
<a name="l00382"></a>00382 };
<a name="l00383"></a>00383 
<a name="l00384"></a>00384 <span class="keyword">template</span> &lt;<span class="keyword">class</span> Arg0, <span class="keyword">class</span> Arg1, <span class="keyword">class</span> Arg2, <span class="keyword">class</span> Arg3&gt;
<a name="l00385"></a><a class="code" href="classSignal_3_01Arg0_00_01Arg1_00_01Arg2_00_01Arg3_00_01void_01_4.htm">00385</a> <span class="keyword">class </span><a class="code" href="classSignal.htm">Signal</a>&lt;Arg0, Arg1, Arg2, Arg3, void&gt; : <span class="keyword">public</span> <a class="code" href="classSignalBase.htm">SignalBase</a>&lt;Arg0, Arg1, Arg2, Arg3&gt;
<a name="l00386"></a>00386 {
<a name="l00387"></a>00387 <span class="keyword">public</span>:
<a name="l00388"></a>00388 
<a name="l00389"></a>00389         <span class="keyword">template</span> &lt;<span class="keyword">class</span> Receiver&gt;
<a name="l00390"></a><a class="code" href="classSignal_3_01Arg0_00_01Arg1_00_01Arg2_00_01Arg3_00_01void_01_4.htm#aee05f904c65a1b1d63ba5a0e0f6dfabf">00390</a>         <span class="keywordtype">void</span> <a class="code" href="classSignal_3_01Arg0_00_01Arg1_00_01Arg2_00_01Arg3_00_01void_01_4.htm#aee05f904c65a1b1d63ba5a0e0f6dfabf">connect</a>(Receiver* rec, <span class="keywordtype">void</span> (Receiver::*func)(Arg0, Arg1, Arg2, Arg3)) {
<a name="l00391"></a>00391                 <a class="code" href="classSignal.htm#a3f34b4f21a56cf2de7fdb42fcb1e20a5">SignalBase&lt;Arg0, Arg1, Arg2, Arg3&gt;::connect</a>(rec, <span class="keyword">new</span> <a class="code" href="classSlot.htm">Slot&lt;Receiver, Arg0, Arg1, Arg2, Arg3&gt;</a>(rec, func));
<a name="l00392"></a>00392         }
<a name="l00393"></a>00393 
<a name="l00394"></a><a class="code" href="classSignal_3_01Arg0_00_01Arg1_00_01Arg2_00_01Arg3_00_01void_01_4.htm#a87e218b8fb23a08671d1669fa186e532">00394</a>         <span class="keywordtype">void</span> <a class="code" href="classSignal_3_01Arg0_00_01Arg1_00_01Arg2_00_01Arg3_00_01void_01_4.htm#a87e218b8fb23a08671d1669fa186e532">fire</a>(Arg0 arg0, Arg1 arg1, Arg2 arg2, Arg3 arg3) {
<a name="l00395"></a>00395                 <span class="keyword">typename</span> std::set&lt;SlotBase&lt;Arg0, Arg1, Arg2, Arg3&gt;* &gt;::iterator it = this-&gt;<a class="code" href="classSignalBase.htm#a9b4e9b17e827f03c13e85e4c4a29b2d1">m_slots</a>.begin();
<a name="l00396"></a>00396                 <span class="keywordflow">while</span> (it != this-&gt;<a class="code" href="classSignalBase.htm#a9b4e9b17e827f03c13e85e4c4a29b2d1">m_slots</a>.end()) {
<a name="l00397"></a>00397                         (*it++)-&gt;<a class="code" href="classSignal.htm#a08d44aa899a50da2d12f7194c41bb0ed">fire</a>(arg0, arg1, arg2, arg3);
<a name="l00398"></a>00398                 }
<a name="l00399"></a>00399         }
<a name="l00400"></a>00400 };
<a name="l00401"></a>00401 
<a name="l00402"></a>00402 <span class="comment">/*</span>
<a name="l00403"></a>00403 <span class="comment"> *</span>
<a name="l00404"></a>00404 <span class="comment"> * Testing code </span>
<a name="l00405"></a>00405 <span class="comment"></span>
<a name="l00406"></a>00406 <span class="comment">class Rec : public Trackable {</span>
<a name="l00407"></a>00407 <span class="comment">public:</span>
<a name="l00408"></a>00408 <span class="comment"></span>
<a name="l00409"></a>00409 <span class="comment">        void memFun0() {</span>
<a name="l00410"></a>00410 <span class="comment">                printf(&quot;%s\n&quot;, __PRETTY_FUNCTION__);</span>
<a name="l00411"></a>00411 <span class="comment">        }</span>
<a name="l00412"></a>00412 <span class="comment"></span>
<a name="l00413"></a>00413 <span class="comment">        void memFun1(int a0) {</span>
<a name="l00414"></a>00414 <span class="comment">                printf(&quot;%s: %d\n&quot;, __PRETTY_FUNCTION__, a0);</span>
<a name="l00415"></a>00415 <span class="comment">        }</span>
<a name="l00416"></a>00416 <span class="comment"></span>
<a name="l00417"></a>00417 <span class="comment">        void memFun2(int a0, double a1) {</span>
<a name="l00418"></a>00418 <span class="comment">                printf(&quot;%s: %d, %g\n&quot;, __PRETTY_FUNCTION__, a0, a1);</span>
<a name="l00419"></a>00419 <span class="comment">        }</span>
<a name="l00420"></a>00420 <span class="comment"></span>
<a name="l00421"></a>00421 <span class="comment">        void memFun3(int a0, double a1, char a2) {</span>
<a name="l00422"></a>00422 <span class="comment">                printf(&quot;%s: %d, %g, %d\n&quot;, __PRETTY_FUNCTION__, a0, a1, a2);</span>
<a name="l00423"></a>00423 <span class="comment">        }</span>
<a name="l00424"></a>00424 <span class="comment"></span>
<a name="l00425"></a>00425 <span class="comment">        void memFun4(int a0, double a1, char a2, float a3) {</span>
<a name="l00426"></a>00426 <span class="comment">                printf(&quot;%s: %d, %g, %d, %f\n&quot;, __PRETTY_FUNCTION__, a0, a1, a2, a3);</span>
<a name="l00427"></a>00427 <span class="comment">        }</span>
<a name="l00428"></a>00428 <span class="comment">};</span>
<a name="l00429"></a>00429 <span class="comment"></span>
<a name="l00430"></a>00430 <span class="comment">int main() {</span>
<a name="l00431"></a>00431 <span class="comment"></span>
<a name="l00432"></a>00432 <span class="comment">        Signal&lt;&gt; sig0;</span>
<a name="l00433"></a>00433 <span class="comment">        Signal&lt;int&gt; sig1;</span>
<a name="l00434"></a>00434 <span class="comment">        Signal&lt;int, double&gt; sig2;</span>
<a name="l00435"></a>00435 <span class="comment">        Signal&lt;int, double, char&gt; sig3;</span>
<a name="l00436"></a>00436 <span class="comment">        Signal&lt;int, double, char, float&gt; sig4;</span>
<a name="l00437"></a>00437 <span class="comment">        </span>
<a name="l00438"></a>00438 <span class="comment">        {</span>
<a name="l00439"></a>00439 <span class="comment">                Rec r;</span>
<a name="l00440"></a>00440 <span class="comment">                </span>
<a name="l00441"></a>00441 <span class="comment">                sig0.connect(&amp;r, &amp;Rec::memFun0);</span>
<a name="l00442"></a>00442 <span class="comment">                sig1.connect(&amp;r, &amp;Rec::memFun1);</span>
<a name="l00443"></a>00443 <span class="comment">                sig2.connect(&amp;r, &amp;Rec::memFun2);</span>
<a name="l00444"></a>00444 <span class="comment">                sig3.connect(&amp;r, &amp;Rec::memFun3);</span>
<a name="l00445"></a>00445 <span class="comment">                sig4.connect(&amp;r, &amp;Rec::memFun4);</span>
<a name="l00446"></a>00446 <span class="comment"></span>
<a name="l00447"></a>00447 <span class="comment">                sig0.fire();</span>
<a name="l00448"></a>00448 <span class="comment">                sig1.fire(1);</span>
<a name="l00449"></a>00449 <span class="comment">                sig2.fire(1, 2.0);</span>
<a name="l00450"></a>00450 <span class="comment">                sig3.fire(1, 2.0, 3);</span>
<a name="l00451"></a>00451 <span class="comment">                sig4.fire(1, 2.0, 3, 4.0f);</span>
<a name="l00452"></a>00452 <span class="comment">        }</span>
<a name="l00453"></a>00453 <span class="comment"></span>
<a name="l00454"></a>00454 <span class="comment">        sig0.fire();</span>
<a name="l00455"></a>00455 <span class="comment">        sig1.fire(1);</span>
<a name="l00456"></a>00456 <span class="comment">        sig2.fire(1, 2.0);</span>
<a name="l00457"></a>00457 <span class="comment">        sig3.fire(1, 2.0, 3);</span>
<a name="l00458"></a>00458 <span class="comment">        sig4.fire(1, 2.0, 3, 4.0f);</span>
<a name="l00459"></a>00459 <span class="comment">}</span>
<a name="l00460"></a>00460 <span class="comment"></span>
<a name="l00461"></a>00461 <span class="comment">*/</span>
<a name="l00462"></a>00462 
<a name="l00463"></a>00463 <span class="preprocessor">#endif // SIGNALSLOT_H</span>
<a name="l00464"></a>00464 <span class="preprocessor"></span>
<a name="l00465"></a>00465 
</pre></div></div><!-- contents -->
</div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Properties</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Defines</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="SignalSlot_8h.htm">SignalSlot.h</a>      </li>

    <li class="footer">Generated on Wed Sep 26 2012 07:32:49 for LunaSysMgr by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.6.1 </li>
   </ul>
 </div>


</body>
</html>
