<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>LunaSysMgr: Utils.h File Reference</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>

</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">LunaSysMgr
   
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
      <li><a href="dirs.htm"><span>Directories</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.htm"><span>File&#160;List</span></a></li>
      <li><a href="globals.htm"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('Utils_8h.htm','');
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">Utils.h File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="Common_8h_source.htm">Common.h</a>&quot;</code><br/>
<code>#include &lt;time.h&gt;</code><br/>
<code>#include &lt;string&gt;</code><br/>
<code>#include &lt;vector&gt;</code><br/>
<code>#include &lt;sstream&gt;</code><br/>
<code>#include &lt;iostream&gt;</code><br/>
<code>#include &lt;regex.h&gt;</code><br/>
<code>#include &lt;QByteArray&gt;</code><br/>
<code>#include &lt;QUrl&gt;</code><br/>
<code>#include &lt;QGraphicsItem&gt;</code><br/>
<code>#include &lt;glib.h&gt;</code><br/>
</div><div class="textblock"><div class="dynheader">
Include dependency graph for Utils.h:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="Utils_8h__incl.svg" width="1046" height="118"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div><div class="textblock"><div class="dynheader">
This graph shows which files directly or indirectly include this file:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="Utils_8h__dep__incl.svg" width="8374" height="118"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<p><a href="Utils_8h_source.htm">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="func-members"></a>
Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="Utils_8h.htm#a8ab18e0440495aee30a8405b8d086a71">setPosTopLeft</a> (<a class="el" href="classQGraphicsItem.htm">QGraphicsItem</a> *item, <a class="el" href="classint.htm">int</a> x, <a class="el" href="classint.htm">int</a> y)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="Utils_8h.htm#a204e2f13079dae86310219e4cbbbcf06">readFile</a> (const char *filePath)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="Utils_8h.htm#a375f0b9e36aad193f4e9ee1d59c65660">writeFile</a> (const std::string &amp;filePath, const std::string &amp;buffer)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="Utils_8h.htm#ac95b4ab7fc2fd22c63687a6bbb338e36">writeFile</a> (const std::string &amp;filePath, QByteArray buffer)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="Utils_8h.htm#aee3eaf1c6bb0cec2c83122d013410262">writeToTempFile</a> (const std::string &amp;data, const std::string &amp;tempDir, std::string &amp;r_outputFile)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="Utils_8h.htm#afe2ffea7f45c7592f3bcc529683615fa">deleteFile</a> (const char *filePath)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">time_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="Utils_8h.htm#a1c21024afc29d8646335ba5b36bee9da">localTime</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="Utils_8h.htm#a61f83aebdbdd924d6511d7b100b18a44">currentTimeMs</a> ()</td></tr>
<tr><td class="memTemplParams" colspan="2">template&lt;class T &gt; </td></tr>
<tr><td class="memTemplItemLeft" align="right" valign="top">std::string&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="Utils_8h.htm#af34c17c687f58015148ed00d95f11d3c">toSTLString</a> (const T &amp;arg)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="Utils_8h.htm#a79621815108cf7e928bf6f4fcfa8aea7">getResourceNameFromUrl</a> (const QUrl &amp;url)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="Utils_8h.htm#a5102282bbd36f3dc8eba4fb582dab678">trimWhitespace</a> (const std::string &amp;s, const std::string &amp;drop=&quot;\r\n\t &quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="Utils_8h.htm#adc81e25c681b650bb02bd8e709992d9d">getNthSubstring</a> (unsigned <a class="el" href="classint.htm">int</a> n, std::string &amp;target, const std::string &amp;str, const std::string &amp;delims=&quot; \t\n\r&quot;)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classint.htm">int</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="Utils_8h.htm#a004641b53fefa228d1655c96cd431a0e">splitFileAndPath</a> (const std::string &amp;srcPathAndFile, std::string &amp;pathPart, std::string &amp;filePart)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classint.htm">int</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="Utils_8h.htm#a981edd1f2cd488512dfc8734377e3f64">splitFileAndExtension</a> (const std::string &amp;srcFileAndExt, std::string &amp;filePart, std::string &amp;extensionPart)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classint.htm">int</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="Utils_8h.htm#a37fb85e001edd300d7658fe2f15de2c5">splitStringOnKey</a> (std::vector&lt; std::string &gt; &amp;returnSplitSubstrings, const std::string &amp;baseStr, const std::string &amp;delims)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classint.htm">int</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="Utils_8h.htm#a2ffa16dd00190b217527f1d74ad5392f">remap_stdx_pipes</a> (<a class="el" href="classint.htm">int</a> readPipe, <a class="el" href="classint.htm">int</a> writePipe)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="Utils_8h.htm#a5a71dd60f6a2cfec156b11afd936d6c6">isNonErrorProcExit</a> (<a class="el" href="classint.htm">int</a> ecode, <a class="el" href="classint.htm">int</a> normalCode=0)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="Utils_8h.htm#a1178fee357c5a904b2c46a84a3b23e41">windowIdentifierFromAppAndProcessId</a> (const std::string &amp;appId, const std::string &amp;processId)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="Utils_8h.htm#a5e384f5d6ac2885fcf1d7de5d6f980b4">splitWindowIdentifierToAppAndProcessId</a> (const std::string &amp;id, std::string &amp;appId, std::string &amp;processId)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="Utils_8h.htm#a6402fb664d1d0fe171b2bd595bcd793c">getResourcePathFromString</a> (const std::string &amp;entry, const std::string &amp;appId, const std::string &amp;systemResourceFolder)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="Utils_8h.htm#ad7dee3598bfa2ad34df0c1848e2b206c">getHtml5DatabaseFolderNameForApp</a> (const std::string &amp;appId, std::string appFolderPath)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="Utils_8h.htm#ae67f11581254d7943e82b945b4419d14">threadCleanup</a> ()</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="Utils_8h.htm#a9fab6255a02987bf29a913a6849811f4">extractFromJson</a> (const std::string &amp;jsonString, const std::string &amp;key, std::string &amp;r_value)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="Utils_8h.htm#a1839ee4fc8f4340860a93d70fa41313b">extractFromJson</a> (struct json_object *root, const std::string &amp;key, std::string &amp;r_value)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="Utils_8h.htm#a23f0f5db1b55afe7e9a179491917bafb">extractFromJson</a> (struct json_object *root, const std::string &amp;key, <a class="el" href="classint.htm">int</a> &amp;r_value)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="Utils_8h.htm#aed336f5176aea43c348ecb280c4d3b12">extractFromJson</a> (struct json_object *root, const std::string &amp;key, bool &amp;r_value)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct json_object *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="Utils_8h.htm#a0ed01ff9e10504a1537261d732fe9854">JsonGetObject</a> (struct json_object *root, const std::string &amp;key)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="Utils_8h.htm#a7bdfc8b8dd3f385d96ac98cfb2bfe154">is_base64_string</a> (std::string const &amp;str)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="Utils_8h.htm#a3409fa3795f44deb77fe72094084d020">base64_encode</a> (unsigned char const *, unsigned <a class="el" href="classint.htm">int</a> len)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="Utils_8h.htm#a106490c99e374daddc9575ce945d8ba0">base64_decode</a> (std::string const &amp;s)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="Utils_8h.htm#a5229b0ef0f36d68644490367c7d2d76c">doesExistOnFilesystem</a> (const char *pathAndFile)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classint.htm">int</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="Utils_8h.htm#a6f69e511bf2b5371dd99ab06aa5a79be">fileCopy</a> (const char *srcFileAndPath, const char *dstFileAndPath)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">gboolean&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="Utils_8h.htm#aa5a0ff9558909cecf98fee8aedf02573">compare_regex</a> (const gchar *regex, const gchar *string)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="classint.htm">int</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="Utils_8h.htm#abfae98c927bc1b46d7e222094c0c58c4">determineEnclosingDir</a> (const std::string &amp;fileNameAndPath, std::string &amp;r_enclosingDir)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="Utils_8h.htm#a614a8350713dd411eb34525aed9b79e7">string_printf</a> (const char *format,...) G_GNUC_PRINTF(1</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">std::string std::string &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="Utils_8h.htm#abf0e486ef5b92f5dcbaffa37e31552c8">append_format</a> (std::string &amp;str, const char *format,...) G_GNUC_PRINTF(2</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">std::string std::string <br class="typebreak"/>
volatile void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="Utils_8h.htm#a550bd117fad94b94fa98f091936fd7c8">secure_memset</a> (volatile void *dst, <a class="el" href="classint.htm">int</a> c, size_t len)</td></tr>
</table>
<hr/><h2>Function Documentation</h2>
<a class="anchor" id="abf0e486ef5b92f5dcbaffa37e31552c8"></a><!-- doxytag: member="Utils.h::append_format" ref="abf0e486ef5b92f5dcbaffa37e31552c8" args="(std::string &amp;str, const char *format,...) G_GNUC_PRINTF(2" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string std::string&amp; <a class="el" href="Utils_8h.htm#abf0e486ef5b92f5dcbaffa37e31552c8">append_format</a> </td>
          <td>(</td>
          <td class="paramtype">std::string &amp;&#160;</td>
          <td class="paramname"><em>str</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>format</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>...</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a106490c99e374daddc9575ce945d8ba0"></a><!-- doxytag: member="Utils.h::base64_decode" ref="a106490c99e374daddc9575ce945d8ba0" args="(std::string const &amp;s)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string <a class="el" href="Utils_8h.htm#a106490c99e374daddc9575ce945d8ba0">base64_decode</a> </td>
          <td>(</td>
          <td class="paramtype">std::string const &amp;&#160;</td>
          <td class="paramname"><em>s</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a3409fa3795f44deb77fe72094084d020"></a><!-- doxytag: member="Utils.h::base64_encode" ref="a3409fa3795f44deb77fe72094084d020" args="(unsigned char const *, unsigned int len)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string <a class="el" href="Utils_8h.htm#a3409fa3795f44deb77fe72094084d020">base64_encode</a> </td>
          <td>(</td>
          <td class="paramtype">unsigned char const *&#160;</td>
          <td class="paramname">, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned <a class="el" href="classint.htm">int</a>&#160;</td>
          <td class="paramname"><em>len</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="aa5a0ff9558909cecf98fee8aedf02573"></a><!-- doxytag: member="Utils.h::compare_regex" ref="aa5a0ff9558909cecf98fee8aedf02573" args="(const gchar *regex, const gchar *string)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">gboolean <a class="el" href="Utils_8h.htm#aa5a0ff9558909cecf98fee8aedf02573">compare_regex</a> </td>
          <td>(</td>
          <td class="paramtype">const gchar *&#160;</td>
          <td class="paramname"><em>regex</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const gchar *&#160;</td>
          <td class="paramname"><em>string</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a61f83aebdbdd924d6511d7b100b18a44"></a><!-- doxytag: member="Utils.h::currentTimeMs" ref="a61f83aebdbdd924d6511d7b100b18a44" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned long <a class="el" href="Utils_8h.htm#a61f83aebdbdd924d6511d7b100b18a44">currentTimeMs</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="afe2ffea7f45c7592f3bcc529683615fa"></a><!-- doxytag: member="Utils.h::deleteFile" ref="afe2ffea7f45c7592f3bcc529683615fa" args="(const char *filePath)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="Utils_8h.htm#afe2ffea7f45c7592f3bcc529683615fa">deleteFile</a> </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>filePath</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="abfae98c927bc1b46d7e222094c0c58c4"></a><!-- doxytag: member="Utils.h::determineEnclosingDir" ref="abfae98c927bc1b46d7e222094c0c58c4" args="(const std::string &amp;fileNameAndPath, std::string &amp;r_enclosingDir)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classint.htm">int</a> <a class="el" href="Utils_8h.htm#abfae98c927bc1b46d7e222094c0c58c4">determineEnclosingDir</a> </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>fileNameAndPath</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::string &amp;&#160;</td>
          <td class="paramname"><em>r_enclosingDir</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a5229b0ef0f36d68644490367c7d2d76c"></a><!-- doxytag: member="Utils.h::doesExistOnFilesystem" ref="a5229b0ef0f36d68644490367c7d2d76c" args="(const char *pathAndFile)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="Utils_8h.htm#a5229b0ef0f36d68644490367c7d2d76c">doesExistOnFilesystem</a> </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>pathAndFile</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a9fab6255a02987bf29a913a6849811f4"></a><!-- doxytag: member="Utils.h::extractFromJson" ref="a9fab6255a02987bf29a913a6849811f4" args="(const std::string &amp;jsonString, const std::string &amp;key, std::string &amp;r_value)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="Utils_8h.htm#aed336f5176aea43c348ecb280c4d3b12">extractFromJson</a> </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>jsonString</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::string &amp;&#160;</td>
          <td class="paramname"><em>r_value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a1839ee4fc8f4340860a93d70fa41313b"></a><!-- doxytag: member="Utils.h::extractFromJson" ref="a1839ee4fc8f4340860a93d70fa41313b" args="(struct json_object *root, const std::string &amp;key, std::string &amp;r_value)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="Utils_8h.htm#aed336f5176aea43c348ecb280c4d3b12">extractFromJson</a> </td>
          <td>(</td>
          <td class="paramtype">struct json_object *&#160;</td>
          <td class="paramname"><em>root</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::string &amp;&#160;</td>
          <td class="paramname"><em>r_value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a23f0f5db1b55afe7e9a179491917bafb"></a><!-- doxytag: member="Utils.h::extractFromJson" ref="a23f0f5db1b55afe7e9a179491917bafb" args="(struct json_object *root, const std::string &amp;key, int &amp;r_value)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="Utils_8h.htm#aed336f5176aea43c348ecb280c4d3b12">extractFromJson</a> </td>
          <td>(</td>
          <td class="paramtype">struct json_object *&#160;</td>
          <td class="paramname"><em>root</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classint.htm">int</a> &amp;&#160;</td>
          <td class="paramname"><em>r_value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="aed336f5176aea43c348ecb280c4d3b12"></a><!-- doxytag: member="Utils.h::extractFromJson" ref="aed336f5176aea43c348ecb280c4d3b12" args="(struct json_object *root, const std::string &amp;key, bool &amp;r_value)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="Utils_8h.htm#aed336f5176aea43c348ecb280c4d3b12">extractFromJson</a> </td>
          <td>(</td>
          <td class="paramtype">struct json_object *&#160;</td>
          <td class="paramname"><em>root</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>key</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool &amp;&#160;</td>
          <td class="paramname"><em>r_value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a6f69e511bf2b5371dd99ab06aa5a79be"></a><!-- doxytag: member="Utils.h::fileCopy" ref="a6f69e511bf2b5371dd99ab06aa5a79be" args="(const char *srcFileAndPath, const char *dstFileAndPath)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classint.htm">int</a> <a class="el" href="Utils_8h.htm#a6f69e511bf2b5371dd99ab06aa5a79be">fileCopy</a> </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>srcFileAndPath</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>dstFileAndPath</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="ad7dee3598bfa2ad34df0c1848e2b206c"></a><!-- doxytag: member="Utils.h::getHtml5DatabaseFolderNameForApp" ref="ad7dee3598bfa2ad34df0c1848e2b206c" args="(const std::string &amp;appId, std::string appFolderPath)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string <a class="el" href="Utils_8h.htm#ad7dee3598bfa2ad34df0c1848e2b206c">getHtml5DatabaseFolderNameForApp</a> </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>appId</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::string&#160;</td>
          <td class="paramname"><em>appFolderPath</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="adc81e25c681b650bb02bd8e709992d9d"></a><!-- doxytag: member="Utils.h::getNthSubstring" ref="adc81e25c681b650bb02bd8e709992d9d" args="(unsigned int n, std::string &amp;target, const std::string &amp;str, const std::string &amp;delims=&quot; \t\n\r&quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="Utils_8h.htm#adc81e25c681b650bb02bd8e709992d9d">getNthSubstring</a> </td>
          <td>(</td>
          <td class="paramtype">unsigned <a class="el" href="classint.htm">int</a>&#160;</td>
          <td class="paramname"><em>n</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::string &amp;&#160;</td>
          <td class="paramname"><em>target</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>str</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>delims</em> = <code>&quot;&#160;\t\n\r&quot;</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a79621815108cf7e928bf6f4fcfa8aea7"></a><!-- doxytag: member="Utils.h::getResourceNameFromUrl" ref="a79621815108cf7e928bf6f4fcfa8aea7" args="(const QUrl &amp;url)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string <a class="el" href="Utils_8h.htm#a79621815108cf7e928bf6f4fcfa8aea7">getResourceNameFromUrl</a> </td>
          <td>(</td>
          <td class="paramtype">const QUrl &amp;&#160;</td>
          <td class="paramname"><em>url</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a6402fb664d1d0fe171b2bd595bcd793c"></a><!-- doxytag: member="Utils.h::getResourcePathFromString" ref="a6402fb664d1d0fe171b2bd595bcd793c" args="(const std::string &amp;entry, const std::string &amp;appId, const std::string &amp;systemResourceFolder)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string <a class="el" href="Utils_8h.htm#a6402fb664d1d0fe171b2bd595bcd793c">getResourcePathFromString</a> </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>entry</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>appId</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>systemResourceFolder</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a7bdfc8b8dd3f385d96ac98cfb2bfe154"></a><!-- doxytag: member="Utils.h::is_base64_string" ref="a7bdfc8b8dd3f385d96ac98cfb2bfe154" args="(std::string const &amp;str)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="Utils_8h.htm#a7bdfc8b8dd3f385d96ac98cfb2bfe154">is_base64_string</a> </td>
          <td>(</td>
          <td class="paramtype">std::string const &amp;&#160;</td>
          <td class="paramname"><em>str</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a5a71dd60f6a2cfec156b11afd936d6c6"></a><!-- doxytag: member="Utils.h::isNonErrorProcExit" ref="a5a71dd60f6a2cfec156b11afd936d6c6" args="(int ecode, int normalCode=0)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="Utils_8h.htm#a5a71dd60f6a2cfec156b11afd936d6c6">isNonErrorProcExit</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classint.htm">int</a>&#160;</td>
          <td class="paramname"><em>ecode</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classint.htm">int</a>&#160;</td>
          <td class="paramname"><em>normalCode</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a0ed01ff9e10504a1537261d732fe9854"></a><!-- doxytag: member="Utils.h::JsonGetObject" ref="a0ed01ff9e10504a1537261d732fe9854" args="(struct json_object *root, const std::string &amp;key)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct json_object* <a class="el" href="Utils_8h.htm#a0ed01ff9e10504a1537261d732fe9854">JsonGetObject</a> </td>
          <td>(</td>
          <td class="paramtype">struct json_object *&#160;</td>
          <td class="paramname"><em>root</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>key</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [read]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a1c21024afc29d8646335ba5b36bee9da"></a><!-- doxytag: member="Utils.h::localTime" ref="a1c21024afc29d8646335ba5b36bee9da" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">time_t <a class="el" href="Utils_8h.htm#a1c21024afc29d8646335ba5b36bee9da">localTime</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a204e2f13079dae86310219e4cbbbcf06"></a><!-- doxytag: member="Utils.h::readFile" ref="a204e2f13079dae86310219e4cbbbcf06" args="(const char *filePath)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">char* <a class="el" href="Utils_8h.htm#a204e2f13079dae86310219e4cbbbcf06">readFile</a> </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>filePath</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a2ffa16dd00190b217527f1d74ad5392f"></a><!-- doxytag: member="Utils.h::remap_stdx_pipes" ref="a2ffa16dd00190b217527f1d74ad5392f" args="(int readPipe, int writePipe)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classint.htm">int</a> <a class="el" href="Utils_8h.htm#a2ffa16dd00190b217527f1d74ad5392f">remap_stdx_pipes</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classint.htm">int</a>&#160;</td>
          <td class="paramname"><em>readPipe</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classint.htm">int</a>&#160;</td>
          <td class="paramname"><em>writePipe</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a550bd117fad94b94fa98f091936fd7c8"></a><!-- doxytag: member="Utils.h::secure_memset" ref="a550bd117fad94b94fa98f091936fd7c8" args="(volatile void *dst, int c, size_t len)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string std::string volatile void* <a class="el" href="Utils_8h.htm#a550bd117fad94b94fa98f091936fd7c8">secure_memset</a> </td>
          <td>(</td>
          <td class="paramtype">volatile void *&#160;</td>
          <td class="paramname"><em>dst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classint.htm">int</a>&#160;</td>
          <td class="paramname"><em>c</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>len</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a8ab18e0440495aee30a8405b8d086a71"></a><!-- doxytag: member="Utils.h::setPosTopLeft" ref="a8ab18e0440495aee30a8405b8d086a71" args="(QGraphicsItem *item, int x, int y)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="Utils_8h.htm#a8ab18e0440495aee30a8405b8d086a71">setPosTopLeft</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classQGraphicsItem.htm">QGraphicsItem</a> *&#160;</td>
          <td class="paramname"><em>item</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classint.htm">int</a>&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classint.htm">int</a>&#160;</td>
          <td class="paramname"><em>y</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a981edd1f2cd488512dfc8734377e3f64"></a><!-- doxytag: member="Utils.h::splitFileAndExtension" ref="a981edd1f2cd488512dfc8734377e3f64" args="(const std::string &amp;srcFileAndExt, std::string &amp;filePart, std::string &amp;extensionPart)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classint.htm">int</a> <a class="el" href="Utils_8h.htm#a981edd1f2cd488512dfc8734377e3f64">splitFileAndExtension</a> </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>srcFileAndExt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::string &amp;&#160;</td>
          <td class="paramname"><em>filePart</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::string &amp;&#160;</td>
          <td class="paramname"><em>extensionPart</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a004641b53fefa228d1655c96cd431a0e"></a><!-- doxytag: member="Utils.h::splitFileAndPath" ref="a004641b53fefa228d1655c96cd431a0e" args="(const std::string &amp;srcPathAndFile, std::string &amp;pathPart, std::string &amp;filePart)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classint.htm">int</a> <a class="el" href="Utils_8h.htm#a004641b53fefa228d1655c96cd431a0e">splitFileAndPath</a> </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>srcPathAndFile</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::string &amp;&#160;</td>
          <td class="paramname"><em>pathPart</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::string &amp;&#160;</td>
          <td class="paramname"><em>filePart</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a37fb85e001edd300d7658fe2f15de2c5"></a><!-- doxytag: member="Utils.h::splitStringOnKey" ref="a37fb85e001edd300d7658fe2f15de2c5" args="(std::vector&lt; std::string &gt; &amp;returnSplitSubstrings, const std::string &amp;baseStr, const std::string &amp;delims)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classint.htm">int</a> <a class="el" href="Utils_8h.htm#a37fb85e001edd300d7658fe2f15de2c5">splitStringOnKey</a> </td>
          <td>(</td>
          <td class="paramtype">std::vector&lt; std::string &gt; &amp;&#160;</td>
          <td class="paramname"><em>returnSplitSubstrings</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>baseStr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>delims</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a5e384f5d6ac2885fcf1d7de5d6f980b4"></a><!-- doxytag: member="Utils.h::splitWindowIdentifierToAppAndProcessId" ref="a5e384f5d6ac2885fcf1d7de5d6f980b4" args="(const std::string &amp;id, std::string &amp;appId, std::string &amp;processId)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="Utils_8h.htm#a5e384f5d6ac2885fcf1d7de5d6f980b4">splitWindowIdentifierToAppAndProcessId</a> </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::string &amp;&#160;</td>
          <td class="paramname"><em>appId</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::string &amp;&#160;</td>
          <td class="paramname"><em>processId</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a614a8350713dd411eb34525aed9b79e7"></a><!-- doxytag: member="Utils.h::string_printf" ref="a614a8350713dd411eb34525aed9b79e7" args="(const char *format,...) G_GNUC_PRINTF(1" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string <a class="el" href="Utils_8h.htm#a614a8350713dd411eb34525aed9b79e7">string_printf</a> </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>format</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>...</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="ae67f11581254d7943e82b945b4419d14"></a><!-- doxytag: member="Utils.h::threadCleanup" ref="ae67f11581254d7943e82b945b4419d14" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="Utils_8h.htm#ae67f11581254d7943e82b945b4419d14">threadCleanup</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="af34c17c687f58015148ed00d95f11d3c"></a><!-- doxytag: member="Utils.h::toSTLString" ref="af34c17c687f58015148ed00d95f11d3c" args="(const T &amp;arg)" -->
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">std::string <a class="el" href="Utils_8h.htm#af34c17c687f58015148ed00d95f11d3c">toSTLString</a> </td>
          <td>(</td>
          <td class="paramtype">const T &amp;&#160;</td>
          <td class="paramname"><em>arg</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a5102282bbd36f3dc8eba4fb582dab678"></a><!-- doxytag: member="Utils.h::trimWhitespace" ref="a5102282bbd36f3dc8eba4fb582dab678" args="(const std::string &amp;s, const std::string &amp;drop=&quot;\r\n\t &quot;)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string <a class="el" href="Utils_8h.htm#a5102282bbd36f3dc8eba4fb582dab678">trimWhitespace</a> </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>s</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>drop</em> = <code>&quot;\r\n\t&#160;&quot;</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a1178fee357c5a904b2c46a84a3b23e41"></a><!-- doxytag: member="Utils.h::windowIdentifierFromAppAndProcessId" ref="a1178fee357c5a904b2c46a84a3b23e41" args="(const std::string &amp;appId, const std::string &amp;processId)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string <a class="el" href="Utils_8h.htm#a1178fee357c5a904b2c46a84a3b23e41">windowIdentifierFromAppAndProcessId</a> </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>appId</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>processId</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a375f0b9e36aad193f4e9ee1d59c65660"></a><!-- doxytag: member="Utils.h::writeFile" ref="a375f0b9e36aad193f4e9ee1d59c65660" args="(const std::string &amp;filePath, const std::string &amp;buffer)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="Utils_8h.htm#ac95b4ab7fc2fd22c63687a6bbb338e36">writeFile</a> </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>filePath</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>buffer</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="ac95b4ab7fc2fd22c63687a6bbb338e36"></a><!-- doxytag: member="Utils.h::writeFile" ref="ac95b4ab7fc2fd22c63687a6bbb338e36" args="(const std::string &amp;filePath, QByteArray buffer)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="Utils_8h.htm#ac95b4ab7fc2fd22c63687a6bbb338e36">writeFile</a> </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>filePath</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">QByteArray&#160;</td>
          <td class="paramname"><em>buffer</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="aee3eaf1c6bb0cec2c83122d013410262"></a><!-- doxytag: member="Utils.h::writeToTempFile" ref="aee3eaf1c6bb0cec2c83122d013410262" args="(const std::string &amp;data, const std::string &amp;tempDir, std::string &amp;r_outputFile)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="Utils_8h.htm#aee3eaf1c6bb0cec2c83122d013410262">writeToTempFile</a> </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>tempDir</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::string &amp;&#160;</td>
          <td class="paramname"><em>r_outputFile</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
</div><!-- contents -->
</div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Properties</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Defines</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="Utils_8h.htm">Utils.h</a>      </li>

    <li class="footer">Generated on Sun Oct 14 2012 10:11:00 for LunaSysMgr by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.6.1 </li>
   </ul>
 </div>


</body>
</html>
