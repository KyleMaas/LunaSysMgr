<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>LunaSysMgr: ApplicationDescription.h Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>

</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">LunaSysMgr
   
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
      <li><a href="dirs.htm"><span>Directories</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.htm"><span>File&#160;List</span></a></li>
      <li><a href="globals.htm"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('ApplicationDescription_8h.htm','');
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">ApplicationDescription.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="ApplicationDescription_8h.htm">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/* @@@LICENSE</span>
<a name="l00002"></a>00002 <span class="comment">*</span>
<a name="l00003"></a>00003 <span class="comment">*      Copyright (c) 2008-2012 Hewlett-Packard Development Company, L.P.</span>
<a name="l00004"></a>00004 <span class="comment">*</span>
<a name="l00005"></a>00005 <span class="comment">* Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span>
<a name="l00006"></a>00006 <span class="comment">* you may not use this file except in compliance with the License.</span>
<a name="l00007"></a>00007 <span class="comment">* You may obtain a copy of the License at</span>
<a name="l00008"></a>00008 <span class="comment">*</span>
<a name="l00009"></a>00009 <span class="comment">* http://www.apache.org/licenses/LICENSE-2.0</span>
<a name="l00010"></a>00010 <span class="comment">*</span>
<a name="l00011"></a>00011 <span class="comment">* Unless required by applicable law or agreed to in writing, software</span>
<a name="l00012"></a>00012 <span class="comment">* distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span>
<a name="l00013"></a>00013 <span class="comment">* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span>
<a name="l00014"></a>00014 <span class="comment">* See the License for the specific language governing permissions and</span>
<a name="l00015"></a>00015 <span class="comment">* limitations under the License.</span>
<a name="l00016"></a>00016 <span class="comment">*</span>
<a name="l00017"></a>00017 <span class="comment">* LICENSE@@@ */</span>
<a name="l00018"></a>00018 
<a name="l00019"></a>00019 
<a name="l00020"></a>00020 
<a name="l00021"></a>00021 
<a name="l00022"></a>00022 <span class="preprocessor">#ifndef APPLICATIONDESCRIPTION_H</span>
<a name="l00023"></a>00023 <span class="preprocessor"></span><span class="preprocessor">#define APPLICATIONDESCRIPTION_H</span>
<a name="l00024"></a>00024 <span class="preprocessor"></span>
<a name="l00025"></a>00025 <span class="preprocessor">#include &quot;<a class="code" href="Common_8h.htm">Common.h</a>&quot;</span>
<a name="l00026"></a>00026 
<a name="l00027"></a>00027 <span class="preprocessor">#include &lt;string&gt;</span>
<a name="l00028"></a>00028 <span class="preprocessor">#include &lt;stdint.h&gt;</span>
<a name="l00029"></a>00029 <span class="preprocessor">#include &lt;set&gt;</span>
<a name="l00030"></a>00030 <span class="preprocessor">#include &lt;list&gt;</span>
<a name="l00031"></a>00031 
<a name="l00032"></a>00032 <span class="preprocessor">#include &quot;<a class="code" href="GraphicsDefs_8h.htm">GraphicsDefs.h</a>&quot;</span>
<a name="l00033"></a>00033 <span class="preprocessor">#include &quot;<a class="code" href="LaunchPoint_8h.htm">LaunchPoint.h</a>&quot;</span>
<a name="l00034"></a>00034 <span class="preprocessor">#include &quot;<a class="code" href="KeywordMap_8h.htm">KeywordMap.h</a>&quot;</span>
<a name="l00035"></a>00035 <span class="preprocessor">#include &quot;<a class="code" href="CmdResourceHandlers_8h.htm">CmdResourceHandlers.h</a>&quot;</span>
<a name="l00036"></a>00036 
<a name="l00037"></a>00037 <span class="keyword">struct </span>json_object;
<a name="l00038"></a>00038 <span class="keyword">struct </span><a class="code" href="structApplicationStatus.htm">ApplicationStatus</a>;
<a name="l00039"></a>00039 
<a name="l00040"></a><a class="code" href="classSysmgrBuiltinLaunchHelper.htm">00040</a> <span class="keyword">class </span><a class="code" href="classSysmgrBuiltinLaunchHelper.htm">SysmgrBuiltinLaunchHelper</a> : <span class="keyword">public</span> <a class="code" href="classQObject.htm">QObject</a>
<a name="l00041"></a>00041 {
<a name="l00042"></a>00042         Q_OBJECT
<a name="l00043"></a>00043 <span class="keyword">public</span>:
<a name="l00044"></a>00044 
<a name="l00045"></a><a class="code" href="classSysmgrBuiltinLaunchHelper.htm#afc64db88becd7b868d2f17fd15607757">00045</a>         <a class="code" href="classSysmgrBuiltinLaunchHelper.htm#afc64db88becd7b868d2f17fd15607757">SysmgrBuiltinLaunchHelper</a>(<span class="keyword">const</span> std::string&amp; args)
<a name="l00046"></a>00046         : <a class="code" href="classSysmgrBuiltinLaunchHelper.htm#a39818d74fa59723abe04ff20d1551558">m_builtIn_argsAsStringEncodedJson</a>(args) {}
<a name="l00047"></a>00047 
<a name="l00048"></a><a class="code" href="classSysmgrBuiltinLaunchHelper.htm#a38eb0e3fa00ecddcc7e3e6b5dfd01c10">00048</a>         <span class="keywordtype">void</span> <a class="code" href="classSysmgrBuiltinLaunchHelper.htm#a38eb0e3fa00ecddcc7e3e6b5dfd01c10">launch</a>()
<a name="l00049"></a>00049         {
<a name="l00050"></a>00050                 Q_EMIT <a class="code" href="classSysmgrBuiltinLaunchHelper.htm#a7bbcbf224876cb9ef0d9dff0b71c966c">signalEntry</a>(<a class="code" href="classSysmgrBuiltinLaunchHelper.htm#a39818d74fa59723abe04ff20d1551558">m_builtIn_argsAsStringEncodedJson</a>);
<a name="l00051"></a>00051         }
<a name="l00052"></a><a class="code" href="classSysmgrBuiltinLaunchHelper.htm#a20220438e203305aa60401d4987dfaed">00052</a>         <span class="keywordtype">void</span> <a class="code" href="classSysmgrBuiltinLaunchHelper.htm#a38eb0e3fa00ecddcc7e3e6b5dfd01c10">launch</a>(<span class="keyword">const</span> std::string&amp; overrideArgs)
<a name="l00053"></a>00053         {
<a name="l00054"></a>00054                 Q_EMIT <a class="code" href="classSysmgrBuiltinLaunchHelper.htm#a7bbcbf224876cb9ef0d9dff0b71c966c">signalEntry</a>(std::string(overrideArgs));
<a name="l00055"></a>00055         }
<a name="l00056"></a><a class="code" href="classSysmgrBuiltinLaunchHelper.htm#aa9f25871a9c1845247c400bd6fb282f6">00056</a>         <span class="keywordtype">void</span> <a class="code" href="classSysmgrBuiltinLaunchHelper.htm#aa9f25871a9c1845247c400bd6fb282f6">launchNoArgs</a>()
<a name="l00057"></a>00057         {
<a name="l00058"></a>00058                 Q_EMIT <a class="code" href="classSysmgrBuiltinLaunchHelper.htm#a7bbcbf224876cb9ef0d9dff0b71c966c">signalEntry</a>(std::string(<span class="stringliteral">&quot;&quot;</span>));
<a name="l00059"></a>00059         }
<a name="l00060"></a>00060 
<a name="l00061"></a>00061         Q_SIGNALS:
<a name="l00062"></a>00062                 <span class="keywordtype">void</span> <a class="code" href="classSysmgrBuiltinLaunchHelper.htm#a7bbcbf224876cb9ef0d9dff0b71c966c">signalEntry</a>(<span class="keyword">const</span> std::string&amp; argsAsStringEncodedJson);
<a name="l00063"></a>00063 <span class="keyword">public</span>:
<a name="l00064"></a>00064 
<a name="l00065"></a><a class="code" href="classSysmgrBuiltinLaunchHelper.htm#a39818d74fa59723abe04ff20d1551558">00065</a>         std::string                                     <a class="code" href="classSysmgrBuiltinLaunchHelper.htm#a39818d74fa59723abe04ff20d1551558">m_builtIn_argsAsStringEncodedJson</a>;
<a name="l00066"></a>00066 };
<a name="l00067"></a>00067 
<a name="l00068"></a><a class="code" href="classApplicationDescription.htm">00068</a> <span class="keyword">class </span><a class="code" href="classApplicationDescription.htm">ApplicationDescription</a>
<a name="l00069"></a>00069 {
<a name="l00070"></a>00070 <span class="keyword">public</span>:
<a name="l00071"></a>00071 
<a name="l00072"></a><a class="code" href="classApplicationDescription.htm#a0804589277c83b91deb64da3c603b408">00072</a>         <span class="keyword">enum</span> <a class="code" href="classApplicationDescription.htm#a0804589277c83b91deb64da3c603b408">Type</a> {
<a name="l00073"></a><a class="code" href="classApplicationDescription.htm#a0804589277c83b91deb64da3c603b408a4f37a8724c6e22fa213a2705b75a77aa">00073</a>                 <a class="code" href="classApplicationDescription.htm#a0804589277c83b91deb64da3c603b408a4f37a8724c6e22fa213a2705b75a77aa">Type_Web</a> = 0,
<a name="l00074"></a><a class="code" href="classApplicationDescription.htm#a0804589277c83b91deb64da3c603b408ac5bce19e7d16adbd3621f3e3effcc697">00074</a>                 <a class="code" href="classApplicationDescription.htm#a0804589277c83b91deb64da3c603b408ac5bce19e7d16adbd3621f3e3effcc697">Type_Native</a>, 
<a name="l00075"></a><a class="code" href="classApplicationDescription.htm#a0804589277c83b91deb64da3c603b408af1073a0ed6706d18845dc5afb025d0b4">00075</a>                 <a class="code" href="classApplicationDescription.htm#a0804589277c83b91deb64da3c603b408af1073a0ed6706d18845dc5afb025d0b4">Type_PDK</a>,
<a name="l00076"></a><a class="code" href="classApplicationDescription.htm#a0804589277c83b91deb64da3c603b408a0f2e535d3124d5f3c31fc411f6d000fc">00076</a>                 <a class="code" href="classApplicationDescription.htm#a0804589277c83b91deb64da3c603b408a0f2e535d3124d5f3c31fc411f6d000fc">Type_SysmgrBuiltin</a>,
<a name="l00077"></a><a class="code" href="classApplicationDescription.htm#a0804589277c83b91deb64da3c603b408a9824eb44c2e6a5a136619ac101e5b1b6">00077</a>         <a class="code" href="classApplicationDescription.htm#a0804589277c83b91deb64da3c603b408a9824eb44c2e6a5a136619ac101e5b1b6">Type_Qt</a>
<a name="l00078"></a>00078         };
<a name="l00079"></a>00079 
<a name="l00080"></a><a class="code" href="classApplicationDescription.htm#a092e0a72e5d952ec08adde90c5e73740">00080</a>         <span class="keyword">enum</span> <a class="code" href="classApplicationDescription.htm#a092e0a72e5d952ec08adde90c5e73740">Status</a> {
<a name="l00081"></a><a class="code" href="classApplicationDescription.htm#a092e0a72e5d952ec08adde90c5e73740ada17135afe330a81c81521ad9f276abd">00081</a>                 <a class="code" href="classApplicationDescription.htm#a092e0a72e5d952ec08adde90c5e73740ada17135afe330a81c81521ad9f276abd">Status_Ready</a> = 0,
<a name="l00082"></a><a class="code" href="classApplicationDescription.htm#a092e0a72e5d952ec08adde90c5e73740a9242598fcb03fcd776ab77a02d6872fa">00082</a>                 <a class="code" href="classApplicationDescription.htm#a092e0a72e5d952ec08adde90c5e73740a9242598fcb03fcd776ab77a02d6872fa">Status_Updating</a>,
<a name="l00083"></a><a class="code" href="classApplicationDescription.htm#a092e0a72e5d952ec08adde90c5e73740aa1aa4d6ad02985cf412907f0c70007b9">00083</a>                 <a class="code" href="classApplicationDescription.htm#a092e0a72e5d952ec08adde90c5e73740aa1aa4d6ad02985cf412907f0c70007b9">Status_Installing</a>,
<a name="l00084"></a><a class="code" href="classApplicationDescription.htm#a092e0a72e5d952ec08adde90c5e73740a3f3f596258b7b97ecd92ee622c821696">00084</a>                 <a class="code" href="classApplicationDescription.htm#a092e0a72e5d952ec08adde90c5e73740a3f3f596258b7b97ecd92ee622c821696">Status_Failed</a>
<a name="l00085"></a>00085         };
<a name="l00086"></a>00086 
<a name="l00087"></a><a class="code" href="classApplicationDescription.htm#ad77ca26a14e37bb6c215a6b5e4236434">00087</a>         <span class="keyword">enum</span> <a class="code" href="classApplicationDescription.htm#ad77ca26a14e37bb6c215a6b5e4236434">HardwareFeaturesNeeded</a> {
<a name="l00088"></a><a class="code" href="classApplicationDescription.htm#ad77ca26a14e37bb6c215a6b5e4236434adf816f5785483025943198b708a4349a">00088</a>                 <a class="code" href="classApplicationDescription.htm#ad77ca26a14e37bb6c215a6b5e4236434adf816f5785483025943198b708a4349a">HardwareFeaturesNeeded_None</a>          = 0,
<a name="l00089"></a><a class="code" href="classApplicationDescription.htm#ad77ca26a14e37bb6c215a6b5e4236434ab066f2d36bdb6b3d6147cdf9bee363c3">00089</a>                 <a class="code" href="classApplicationDescription.htm#ad77ca26a14e37bb6c215a6b5e4236434ab066f2d36bdb6b3d6147cdf9bee363c3">HardwareFeaturesNeeded_Wifi</a>          = 1 &lt;&lt; 0,
<a name="l00090"></a><a class="code" href="classApplicationDescription.htm#ad77ca26a14e37bb6c215a6b5e4236434a139752ccfa059c290db9c284571927fa">00090</a>                 <a class="code" href="classApplicationDescription.htm#ad77ca26a14e37bb6c215a6b5e4236434a139752ccfa059c290db9c284571927fa">HardwareFeaturesNeeded_Bluetooth</a>     = 1 &lt;&lt; 1,
<a name="l00091"></a><a class="code" href="classApplicationDescription.htm#ad77ca26a14e37bb6c215a6b5e4236434aa0120cf1f8d5a5a17e281c15967a0cca">00091</a>                 <a class="code" href="classApplicationDescription.htm#ad77ca26a14e37bb6c215a6b5e4236434aa0120cf1f8d5a5a17e281c15967a0cca">HardwareFeaturesNeeded_Compass</a>       = 1 &lt;&lt; 2,
<a name="l00092"></a><a class="code" href="classApplicationDescription.htm#ad77ca26a14e37bb6c215a6b5e4236434ab5f0b379b7d3436ee5aff57f6cfc89cf">00092</a>                 <a class="code" href="classApplicationDescription.htm#ad77ca26a14e37bb6c215a6b5e4236434ab5f0b379b7d3436ee5aff57f6cfc89cf">HardwareFeaturesNeeded_Accelerometer</a> = 1 &lt;&lt; 3,
<a name="l00093"></a><a class="code" href="classApplicationDescription.htm#ad77ca26a14e37bb6c215a6b5e4236434a7524d69fbafb9c740dc70396cad17aca">00093</a>                 <a class="code" href="classApplicationDescription.htm#ad77ca26a14e37bb6c215a6b5e4236434a7524d69fbafb9c740dc70396cad17aca">HardwareFeaturesNeeded_Last</a>          = 1 &lt;&lt; 31
<a name="l00094"></a>00094         };
<a name="l00095"></a>00095 
<a name="l00096"></a>00096         <a class="code" href="classApplicationDescription.htm#a908dce6688563745bb44425b11aa186f">ApplicationDescription</a>();
<a name="l00097"></a>00097         <a class="code" href="classApplicationDescription.htm#a75cacd88da01b5bb46b79992543d5202">~ApplicationDescription</a>();
<a name="l00098"></a>00098 
<a name="l00099"></a>00099         <span class="keyword">static</span> <a class="code" href="classApplicationDescription.htm">ApplicationDescription</a>* <a class="code" href="classApplicationDescription.htm#a52e623216e8762481e07fcbdd5ce610d">fromFile</a>(<span class="keyword">const</span> std::string&amp; filePath, <span class="keyword">const</span> std::string&amp; <a class="code" href="classApplicationDescription.htm#ab9d9b2464937e75e1acd40e6640d2376">folderPath</a>);
<a name="l00100"></a>00100         <span class="keyword">static</span> <a class="code" href="classApplicationDescription.htm">ApplicationDescription</a>* <a class="code" href="classApplicationDescription.htm#a52d0ce463c3139f6099e03ce4e0fe6f3">fromJsonString</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* jsonStr);
<a name="l00101"></a>00101         <span class="keyword">static</span> <a class="code" href="classApplicationDescription.htm">ApplicationDescription</a>* <a class="code" href="classApplicationDescription.htm#abc6cfdb5680733ce488f2e9a554276ec">fromApplicationStatus</a>(<span class="keyword">const</span> <a class="code" href="structApplicationStatus.htm">ApplicationStatus</a>&amp; appStatus, <span class="keywordtype">bool</span> isUpdating);
<a name="l00102"></a>00102         <span class="keyword">static</span> <a class="code" href="classApplicationDescription.htm">ApplicationDescription</a>* <a class="code" href="classApplicationDescription.htm#a316114e821c8b3542771b9bb85662acc">fromNativeDockApp</a>(<span class="keyword">const</span> std::string&amp; <span class="keywordtype">id</span>, <span class="keyword">const</span> std::string&amp; <a class="code" href="classApplicationDescription.htm#aeb68b90dac5d833774fec20b577b7fc0">title</a>, 
<a name="l00103"></a>00103                                                 <span class="keyword">const</span> std::string&amp; <a class="code" href="classApplicationDescription.htm#ae82d7e0f1bb6ad5c9f19bc0987767503">version</a>, <span class="keyword">const</span> std::string&amp; splashIcon,
<a name="l00104"></a>00104                                                 <span class="keyword">const</span> std::string&amp; <a class="code" href="classApplicationDescription.htm#a54683fe7210199d5cbcb2576a4729078">splashBackgroundName</a>, <span class="keyword">const</span> std::string&amp; miniicon,
<a name="l00105"></a>00105                                                 <span class="keyword">const</span> std::string&amp; vendor, <span class="keyword">const</span> std::string&amp; <a class="code" href="classApplicationDescription.htm#aef29163bfe406fb107d3f5edd0655825">vendorUrl</a>,
<a name="l00106"></a>00106                                                 <span class="keyword">const</span> std::string&amp; appmenu);
<a name="l00107"></a>00107         <span class="keyword">static</span> std::string         <a class="code" href="classApplicationDescription.htm#abf9c412f66445fd75086da51d13c2966">versionFromFile</a>(<span class="keyword">const</span> std::string&amp; filePath, <span class="keyword">const</span> std::string&amp; <a class="code" href="classApplicationDescription.htm#ab9d9b2464937e75e1acd40e6640d2376">folderPath</a>);
<a name="l00108"></a>00108         
<a name="l00109"></a><a class="code" href="classApplicationDescription.htm#add2980bcd89a90cb3f4674d8adf021b3">00109</a>         <span class="keyword">const</span> std::string&amp; <a class="code" href="classApplicationDescription.htm#add2980bcd89a90cb3f4674d8adf021b3">id</a>()<span class="keyword">         const </span>{ <span class="keywordflow">return</span> m_id; }
<a name="l00110"></a><a class="code" href="classApplicationDescription.htm#aeb68b90dac5d833774fec20b577b7fc0">00110</a>         <span class="keyword">const</span> std::string&amp; <a class="code" href="classApplicationDescription.htm#aeb68b90dac5d833774fec20b577b7fc0">title</a>()<span class="keyword">         const </span>{ <span class="keywordflow">return</span> m_title; }
<a name="l00111"></a><a class="code" href="classApplicationDescription.htm#a8eb4ba98ae50bcc974e0a2fef0355233">00111</a>         <span class="keyword">const</span> std::string&amp; <a class="code" href="classApplicationDescription.htm#a8eb4ba98ae50bcc974e0a2fef0355233">menuName</a>()<span class="keyword">           const </span>{ <span class="keywordflow">return</span> m_appmenuName; }
<a name="l00112"></a><a class="code" href="classApplicationDescription.htm#ad8a1c91d1c7712793337225c5dc7d466">00112</a>         <span class="keyword">const</span> std::string&amp; <a class="code" href="classApplicationDescription.htm#ad8a1c91d1c7712793337225c5dc7d466">category</a>()<span class="keyword">   const </span>{ <span class="keywordflow">return</span> m_category; } 
<a name="l00113"></a><a class="code" href="classApplicationDescription.htm#aba1125d238890debe38fb6588bcee97b">00113</a>         std::list&lt;std::string&gt; <a class="code" href="classApplicationDescription.htm#aba1125d238890debe38fb6588bcee97b">keywords</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_keywords.<a class="code" href="classKeywordMap.htm#a3eca3ecf9015edfcbec2ff4f1d10ff64">allKeywords</a>(); }
<a name="l00114"></a><a class="code" href="classApplicationDescription.htm#a75fffddfc010e1c1c3331d4d5ddc5ddc">00114</a>         <span class="keyword">const</span> std::string&amp; <a class="code" href="classApplicationDescription.htm#a75fffddfc010e1c1c3331d4d5ddc5ddc">entryPoint</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_entryPoint; }
<a name="l00115"></a><a class="code" href="classApplicationDescription.htm#ae82d7e0f1bb6ad5c9f19bc0987767503">00115</a>         <span class="keyword">const</span> std::string&amp; <a class="code" href="classApplicationDescription.htm#ae82d7e0f1bb6ad5c9f19bc0987767503">version</a>()<span class="keyword">    const </span>{ <span class="keywordflow">return</span> m_version; }
<a name="l00116"></a><a class="code" href="classApplicationDescription.htm#a4ad7041b169e4bee5653bfa03e5d2b27">00116</a>         <span class="keywordtype">bool</span>               <a class="code" href="classApplicationDescription.htm#a4ad7041b169e4bee5653bfa03e5d2b27">isHeadLess</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_isHeadLess; }
<a name="l00117"></a><a class="code" href="classApplicationDescription.htm#a5ac8818aa25ec0a9eb916949c0d65645">00117</a>         <span class="keywordtype">bool</span>               <a class="code" href="classApplicationDescription.htm#a5ac8818aa25ec0a9eb916949c0d65645">hasTransparentWindows</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_hasTransparentWindows; }
<a name="l00118"></a><a class="code" href="classApplicationDescription.htm#a7074eb27a7de13c867b66993b6d5390c">00118</a>         <span class="keywordtype">bool</span>                       <a class="code" href="classApplicationDescription.htm#a7074eb27a7de13c867b66993b6d5390c">isRemovable</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_isRemovable; }
<a name="l00119"></a><a class="code" href="classApplicationDescription.htm#a2a0b7c0f8e60cdc86d74baa393e980bf">00119</a>         <span class="keywordtype">bool</span>                       <a class="code" href="classApplicationDescription.htm#a2a0b7c0f8e60cdc86d74baa393e980bf">isUserHideable</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_isUserHideable; }
<a name="l00120"></a><a class="code" href="classApplicationDescription.htm#adde8ef577fd9265920ce8491d6784ac2">00120</a>         <span class="keywordtype">bool</span>                       <a class="code" href="classApplicationDescription.htm#adde8ef577fd9265920ce8491d6784ac2">isVisible</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_isVisible; }
<a name="l00121"></a><a class="code" href="classApplicationDescription.htm#ab9d9b2464937e75e1acd40e6640d2376">00121</a>         <span class="keyword">const</span> std::string&amp; <a class="code" href="classApplicationDescription.htm#ab9d9b2464937e75e1acd40e6640d2376">folderPath</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_folderPath; }
<a name="l00122"></a><a class="code" href="classApplicationDescription.htm#a306593528fd49e5e040f9c733b213c80">00122</a>         <a class="code" href="classApplicationDescription.htm#a0804589277c83b91deb64da3c603b408">Type</a>                       <a class="code" href="classApplicationDescription.htm#a306593528fd49e5e040f9c733b213c80">type</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_type; }
<a name="l00123"></a><a class="code" href="classApplicationDescription.htm#a4d98002d26db8b19a829ab3dcfe66423">00123</a>         <a class="code" href="classApplicationDescription.htm#a092e0a72e5d952ec08adde90c5e73740">Status</a>                     <a class="code" href="classApplicationDescription.htm#a4d98002d26db8b19a829ab3dcfe66423">status</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_status; }
<a name="l00124"></a><a class="code" href="classApplicationDescription.htm#a56c45571bd03d340e7983443e2314c28">00124</a>         <span class="keywordtype">int</span>                        <a class="code" href="classApplicationDescription.htm#a56c45571bd03d340e7983443e2314c28">progress</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_progress; }
<a name="l00125"></a><a class="code" href="classApplicationDescription.htm#a369c58be95e21a25c1da7adbc666b37e">00125</a>         <span class="keyword">const</span> std::string&amp; <a class="code" href="classApplicationDescription.htm#a369c58be95e21a25c1da7adbc666b37e">attributes</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_attributes; }
<a name="l00126"></a><a class="code" href="classApplicationDescription.htm#a9359a2daf09b91a9826bc52a1a2c0523">00126</a>         <span class="keywordtype">bool</span>                       <a class="code" href="classApplicationDescription.htm#a9359a2daf09b91a9826bc52a1a2c0523">hasAccounts</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_hasAccounts; }
<a name="l00127"></a>00127 
<a name="l00128"></a><a class="code" href="classApplicationDescription.htm#a5e052715fa480c674dc26c9a4638d43d">00128</a>         <span class="keywordtype">bool</span> <a class="code" href="classApplicationDescription.htm#a5e052715fa480c674dc26c9a4638d43d">dockModeStatus</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_dockMode; }
<a name="l00129"></a><a class="code" href="classApplicationDescription.htm#a2e27064ef0ab568926ebdc081e61ac5e">00129</a>         <span class="keyword">const</span> std::string&amp;  <a class="code" href="classApplicationDescription.htm#a2e27064ef0ab568926ebdc081e61ac5e">dockModeTitle</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_dockModeTitle; }
<a name="l00130"></a>00130         
<a name="l00131"></a><a class="code" href="classApplicationDescription.htm#a2599fc8b55bc347e8c99d1e212d54621">00131</a>         <span class="keyword">const</span> std::string&amp; <a class="code" href="classApplicationDescription.htm#a2599fc8b55bc347e8c99d1e212d54621">miniIconUrl</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> m_miniIconName;}
<a name="l00132"></a><a class="code" href="classApplicationDescription.htm#a5e68ceb1b67299014f8e5ccdd2b82bc9">00132</a>         <span class="keyword">const</span> std::string&amp; <a class="code" href="classApplicationDescription.htm#a5e68ceb1b67299014f8e5ccdd2b82bc9">vendorName</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> m_vendorName;}
<a name="l00133"></a><a class="code" href="classApplicationDescription.htm#aef29163bfe406fb107d3f5edd0655825">00133</a>         <span class="keyword">const</span> std::string&amp; <a class="code" href="classApplicationDescription.htm#aef29163bfe406fb107d3f5edd0655825">vendorUrl</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_vendorUrl;}
<a name="l00134"></a><a class="code" href="classApplicationDescription.htm#a9759f63b5e6d7bd7364c34a1f5ad29b6">00134</a>         uint64_t <a class="code" href="classApplicationDescription.htm#a9759f63b5e6d7bd7364c34a1f5ad29b6">appSize</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> m_appSize;}
<a name="l00135"></a><a class="code" href="classApplicationDescription.htm#aae577bd63cf9aa36dd8e8034429ab570">00135</a>         <span class="keywordtype">void</span> <a class="code" href="classApplicationDescription.htm#aae577bd63cf9aa36dd8e8034429ab570">setAppSize</a>(<span class="keyword">const</span> uint64_t&amp; s) { m_appSize = s;}
<a name="l00136"></a><a class="code" href="classApplicationDescription.htm#aeefd8b5917aa95ab33126f6193702ee1">00136</a>         uint32_t <a class="code" href="classApplicationDescription.htm#aeefd8b5917aa95ab33126f6193702ee1">blockSize</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_fsBlockSize; }
<a name="l00137"></a><a class="code" href="classApplicationDescription.htm#a6346234461ad9f0c29c676d998b3625a">00137</a>         <span class="keywordtype">void</span> <a class="code" href="classApplicationDescription.htm#a6346234461ad9f0c29c676d998b3625a">setBlockSize</a>(uint32_t s) { m_fsBlockSize = s;}
<a name="l00138"></a>00138 
<a name="l00139"></a><a class="code" href="classApplicationDescription.htm#a0dc4e35e9efa59b99548a260ae901e1e">00139</a>         <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classApplicationDescription.htm#a0dc4e35e9efa59b99548a260ae901e1e">runtimeMemoryRequired</a>()<span class="keyword"> const </span>{<span class="keywordflow">return</span> m_runtimeMemoryRequired;}
<a name="l00140"></a>00140 
<a name="l00141"></a>00141         QPixmap <a class="code" href="classApplicationDescription.htm#a2af5b35050affe5fb6cadc2c697a424e">miniIcon</a>() <span class="keyword">const</span>;
<a name="l00142"></a>00142 
<a name="l00143"></a><a class="code" href="classApplicationDescription.htm#a2183496b8a32826389b1a21916690a58">00143</a>         <span class="keyword">const</span> std::string&amp; <a class="code" href="classApplicationDescription.htm#a2183496b8a32826389b1a21916690a58">splashIconName</a>()<span class="keyword"> const </span>{
<a name="l00144"></a>00144                 <span class="keywordflow">return</span> m_splashIconName;
<a name="l00145"></a>00145         }
<a name="l00146"></a><a class="code" href="classApplicationDescription.htm#a54683fe7210199d5cbcb2576a4729078">00146</a>     <span class="keyword">const</span> std::string &amp;<a class="code" href="classApplicationDescription.htm#a54683fe7210199d5cbcb2576a4729078">splashBackgroundName</a>()<span class="keyword"> const </span>{
<a name="l00147"></a>00147         <span class="keywordflow">return</span> m_splashBackgroundName;
<a name="l00148"></a>00148     }
<a name="l00149"></a>00149 
<a name="l00150"></a><a class="code" href="classApplicationDescription.htm#a1651deb875ef84d82bc5b42eeda798b8">00150</a>     <span class="keyword">const</span> <span class="keywordtype">bool</span> <a class="code" href="classApplicationDescription.htm#a1651deb875ef84d82bc5b42eeda798b8">launchInNewGroup</a>()<span class="keyword"> const </span>{
<a name="l00151"></a>00151         <span class="keywordflow">return</span> m_launchInNewGroup;
<a name="l00152"></a>00152     }
<a name="l00153"></a>00153 
<a name="l00154"></a>00154         <span class="keyword">const</span> std::list&lt;ResourceHandler&gt;&amp; <a class="code" href="classApplicationDescription.htm#a207773027e3f405db963fe647d23d1d7">mimeTypes</a>() <span class="keyword">const</span>;
<a name="l00155"></a>00155         <span class="keyword">const</span> std::list&lt;RedirectHandler&gt;&amp; <a class="code" href="classApplicationDescription.htm#a5588b2f435623a0bc50470995cacc9bc">redirectTypes</a>() <span class="keyword">const</span>;
<a name="l00156"></a>00156         
<a name="l00157"></a>00157         <span class="keyword">const</span> <a class="code" href="LaunchPoint_8h.htm#add3ace36d420f4c7f29f016edf84d80f">LaunchPointList</a>&amp;        <a class="code" href="classApplicationDescription.htm#af1461c90aadaccac63bdce29e351db7e">launchPoints</a>() <span class="keyword">const</span>;
<a name="l00158"></a>00158         <span class="keywordtype">void</span>                                              <a class="code" href="classApplicationDescription.htm#af1461c90aadaccac63bdce29e351db7e">launchPoints</a>(<a class="code" href="LaunchPoint_8h.htm#add3ace36d420f4c7f29f016edf84d80f">LaunchPointList</a>&amp; launchPointList);               <span class="comment">//copy version of launchPoints(). Useful for add/remove of stuff from the list</span>
<a name="l00159"></a>00159 
<a name="l00160"></a>00160         <span class="keywordtype">void</span>               <a class="code" href="classApplicationDescription.htm#a6607741fc739e294e99f089292b50f74">addLaunchPoint</a>(<a class="code" href="classLaunchPoint.htm">LaunchPoint</a>* lp);
<a name="l00161"></a>00161         <span class="keyword">const</span> <a class="code" href="classLaunchPoint.htm">LaunchPoint</a>* <a class="code" href="classApplicationDescription.htm#a71c378eea808a0b1aab6025adc676e85">findLaunchPoint</a>(<span class="keyword">const</span> std::string&amp; lpId);
<a name="l00162"></a>00162         <span class="keyword">const</span> <a class="code" href="classLaunchPoint.htm">LaunchPoint</a>* <a class="code" href="classApplicationDescription.htm#a8be15e9020618fc3bfd7af25836e657e">getDefaultLaunchPoint</a>() <span class="keyword">const</span>;
<a name="l00163"></a>00163         <span class="keywordtype">void</span>               <a class="code" href="classApplicationDescription.htm#adf515fa57a3e178baeae6d970fd8ad49">removeLaunchPoint</a>(<span class="keyword">const</span> <a class="code" href="classLaunchPoint.htm">LaunchPoint</a>* lp);
<a name="l00164"></a>00164 
<a name="l00165"></a>00165         <span class="comment">// NOTE: it is the callers responsibility to json_object_put the return value   </span>
<a name="l00166"></a>00166         json_object* <a class="code" href="classApplicationDescription.htm#a961dda3d6920ea2dc8f3e1e5880e6941">toJSON</a>() <span class="keyword">const</span>;
<a name="l00167"></a>00167 
<a name="l00168"></a>00168         std::string <a class="code" href="classApplicationDescription.htm#a4bb79f7aaa7396ee048418e62ce3b366">toString</a>() <span class="keyword">const</span>;
<a name="l00169"></a>00169 
<a name="l00170"></a><a class="code" href="classApplicationDescription.htm#a7f0123b36fd95c4a943c50c69574544b">00170</a>         <span class="keywordtype">bool</span> <a class="code" href="classApplicationDescription.htm#a7f0123b36fd95c4a943c50c69574544b">canExecute</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> !m_executionLock; }
<a name="l00171"></a><a class="code" href="classApplicationDescription.htm#a28fb2624f85e96267d51fac2f63b885a">00171</a>         <span class="keywordtype">void</span> <a class="code" href="classApplicationDescription.htm#a28fb2624f85e96267d51fac2f63b885a">executionLock</a>(<span class="keywordtype">bool</span> xp=<span class="keyword">true</span>) { m_executionLock = xp;}
<a name="l00172"></a>00172 
<a name="l00173"></a><a class="code" href="classApplicationDescription.htm#a87c370f37ad87d118fa696ed9a3c9f6e">00173</a>         <span class="keywordtype">bool</span> <a class="code" href="classApplicationDescription.htm#a87c370f37ad87d118fa696ed9a3c9f6e">isRemoveFlagged</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_flaggedForRemoval;}
<a name="l00174"></a><a class="code" href="classApplicationDescription.htm#adac9f9d567c7c4c73d6296eb21327e91">00174</a>         <span class="keywordtype">void</span> <a class="code" href="classApplicationDescription.htm#adac9f9d567c7c4c73d6296eb21327e91">flagForRemoval</a>(<span class="keywordtype">bool</span> rf=<span class="keyword">true</span>) { m_flaggedForRemoval = rf;}
<a name="l00175"></a>00175         <span class="keywordtype">bool</span> <a class="code" href="classApplicationDescription.htm#a9f7efb1444298b70c2ff710aa3a624bb">setRemovable</a>(<span class="keywordtype">bool</span> v=<span class="keyword">true</span>);
<a name="l00176"></a>00176         <span class="keywordtype">bool</span> <a class="code" href="classApplicationDescription.htm#ac3cf031b0c478241c5eb06537365cc4c">setVisible</a>(<span class="keywordtype">bool</span> v=<span class="keyword">true</span>);
<a name="l00177"></a><a class="code" href="classApplicationDescription.htm#a0ac04d9cd8a92ded1102cdac0de66b61">00177</a>         <span class="keywordtype">void</span> <a class="code" href="classApplicationDescription.htm#a0ac04d9cd8a92ded1102cdac0de66b61">setVersion</a>(<span class="keyword">const</span> std::string&amp; <a class="code" href="classApplicationDescription.htm#ae82d7e0f1bb6ad5c9f19bc0987767503">version</a>) { m_version = <a class="code" href="classApplicationDescription.htm#ae82d7e0f1bb6ad5c9f19bc0987767503">version</a>; }
<a name="l00178"></a>00178 
<a name="l00179"></a><a class="code" href="classApplicationDescription.htm#a9c89abe341e26e4474c787b92f3487db">00179</a>         uint32_t <a class="code" href="classApplicationDescription.htm#a9c89abe341e26e4474c787b92f3487db">hardwareFeaturesNeeded</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_hardwareFeaturesNeeded; }
<a name="l00180"></a>00180 
<a name="l00181"></a>00181         <span class="comment">// NOTE: only applications which reside in ROM (/usr/palm/applications) </span>
<a name="l00182"></a>00182         <span class="comment">// should set this flag to true</span>
<a name="l00183"></a><a class="code" href="classApplicationDescription.htm#afcc89d211cd9a6db08d2cd0814c6a619">00183</a>         <span class="keywordtype">void</span> <a class="code" href="classApplicationDescription.htm#afcc89d211cd9a6db08d2cd0814c6a619">setUserHideable</a>(<span class="keywordtype">bool</span> hideable) { m_isUserHideable = hideable; }
<a name="l00184"></a>00184 
<a name="l00185"></a><a class="code" href="classApplicationDescription.htm#af6d818e191b62245b3ed44b533673295">00185</a>         <span class="keywordtype">void</span> <a class="code" href="classApplicationDescription.htm#af6d818e191b62245b3ed44b533673295">setStatus</a>(<a class="code" href="classApplicationDescription.htm#a092e0a72e5d952ec08adde90c5e73740">Status</a> newStatus) { m_status = newStatus; }
<a name="l00186"></a>00186 
<a name="l00187"></a><a class="code" href="classApplicationDescription.htm#a225984a3894f3e24360ffd769a847b1c">00187</a>         <span class="keywordtype">void</span> <a class="code" href="classApplicationDescription.htm#a225984a3894f3e24360ffd769a847b1c">setHasAccounts</a>(<span class="keywordtype">bool</span> <a class="code" href="classApplicationDescription.htm#a9359a2daf09b91a9826bc52a1a2c0523">hasAccounts</a>) { m_hasAccounts = <a class="code" href="classApplicationDescription.htm#a9359a2daf09b91a9826bc52a1a2c0523">hasAccounts</a>; }
<a name="l00188"></a>00188 
<a name="l00189"></a><a class="code" href="classApplicationDescription.htm#a00de427f19a8ab33fb5945afd27d05f5">00189</a>         uint32_t <a class="code" href="classApplicationDescription.htm#a00de427f19a8ab33fb5945afd27d05f5">uiRevision</a>()  { <span class="keywordflow">return</span> m_uiRevision; }
<a name="l00190"></a><a class="code" href="classApplicationDescription.htm#ae1e791cd9b878fb20196603d6622f126">00190</a>         <span class="keywordtype">bool</span> <a class="code" href="classApplicationDescription.htm#ae1e791cd9b878fb20196603d6622f126">tapToShareSupported</a>()<span class="keyword"> const  </span>{ <span class="keywordflow">return</span> m_tapToShareSupported; }
<a name="l00191"></a>00191 
<a name="l00192"></a><a class="code" href="classApplicationDescription.htm#a22c751dc33506c7df6a59b1a19098676">00192</a>         std::string <a class="code" href="classApplicationDescription.htm#a22c751dc33506c7df6a59b1a19098676">requestedWindowOrientation</a>() { <span class="keywordflow">return</span> m_requestedWindowOrientation; }
<a name="l00193"></a>00193 
<a name="l00194"></a>00194         <span class="keywordtype">bool</span> <a class="code" href="classApplicationDescription.htm#a714a2ad332df41bc983306a232196d84">operator==</a>(<span class="keyword">const</span> <a class="code" href="classApplicationDescription.htm">ApplicationDescription</a>&amp; cmp) <span class="keyword">const</span>;
<a name="l00195"></a>00195         <span class="keywordtype">bool</span> <a class="code" href="classApplicationDescription.htm#a628a7b2e68401c05b7d76c7f7432d7e0">operator!=</a>(<span class="keyword">const</span> <a class="code" href="classApplicationDescription.htm">ApplicationDescription</a>&amp; cmp) <span class="keyword">const</span>;
<a name="l00196"></a>00196 
<a name="l00197"></a>00197         <span class="keywordtype">bool</span> <a class="code" href="classApplicationDescription.htm#aef421ef3f36ffa14d08a22287b38bd97">strictCompare</a>(<span class="keyword">const</span> <a class="code" href="classApplicationDescription.htm">ApplicationDescription</a>&amp; cmp) <span class="keyword">const</span>;
<a name="l00198"></a>00198 
<a name="l00199"></a>00199         <span class="keywordtype">void</span> <a class="code" href="classApplicationDescription.htm#a827eaabf1a8345a8e2dddab9fafb02d7">update</a>(<span class="keyword">const</span> <a class="code" href="structApplicationStatus.htm">ApplicationStatus</a>&amp; appStatus, <span class="keywordtype">bool</span> isUpdating);
<a name="l00200"></a>00200         <span class="keywordtype">int</span>  <a class="code" href="classApplicationDescription.htm#a827eaabf1a8345a8e2dddab9fafb02d7">update</a>(<span class="keyword">const</span> <a class="code" href="classApplicationDescription.htm">ApplicationDescription</a>&amp; appDesc);
<a name="l00201"></a>00201         
<a name="l00202"></a>00202         <span class="keywordtype">bool</span>    <a class="code" href="classApplicationDescription.htm#aaf7ffd5cb01506c72028a55f41da8cf8">doesMatchKeywordExact</a>(<span class="keyword">const</span> gchar* keyword) <span class="keyword">const</span>;
<a name="l00203"></a>00203         <span class="keywordtype">bool</span>    <a class="code" href="classApplicationDescription.htm#a6c240bb1626ec1ae763c57fb9cc2b674">doesMatchKeywordPartial</a>(<span class="keyword">const</span> gchar* keyword) <span class="keyword">const</span>;
<a name="l00204"></a>00204         
<a name="l00205"></a>00205         <span class="keywordtype">void</span> <a class="code" href="classApplicationDescription.htm#affd3ee82ce5ce77df51af633527e91a2">getAppDescriptionString</a>(std::string &amp;descString) <span class="keyword">const</span>;
<a name="l00206"></a>00206 
<a name="l00207"></a>00207         <span class="keywordtype">void</span> <a class="code" href="classApplicationDescription.htm#ad69137d98bd11a850ce550eb02a9b918">startSysmgrBuiltIn</a>(<span class="keyword">const</span> std::string&amp; jsonArgsString) <span class="keyword">const</span>;
<a name="l00208"></a>00208         <span class="keywordtype">void</span> <a class="code" href="classApplicationDescription.htm#ad69137d98bd11a850ce550eb02a9b918">startSysmgrBuiltIn</a>() <span class="keyword">const</span>;
<a name="l00209"></a>00209         <span class="keywordtype">void</span> <a class="code" href="classApplicationDescription.htm#ada9b22cb77df1cf538e7de6779334c58">startSysmgrBuiltInNoArgs</a>() <span class="keyword">const</span>;
<a name="l00210"></a>00210 
<a name="l00211"></a>00211         <span class="keywordtype">bool</span> <a class="code" href="classApplicationDescription.htm#afd3765397578ede2f509352188c0dcad">initSysmgrBuiltIn</a>(<a class="code" href="classQObject.htm">QObject</a> * pReceiver,<span class="keyword">const</span> std::string&amp; entrypt,<span class="keyword">const</span> std::string&amp; args);
<a name="l00212"></a>00212 
<a name="l00213"></a><a class="code" href="classApplicationDescription.htm#a85d47bd7533d1f272c04e1bdfd809536">00213</a>         <span class="keywordtype">void</span> <a class="code" href="classApplicationDescription.htm#a85d47bd7533d1f272c04e1bdfd809536">dbgSetProgressManually</a>(<span class="keywordtype">int</span> progv) { m_progress = progv; }
<a name="l00214"></a>00214 
<a name="l00215"></a>00215     <span class="keywordtype">bool</span> <a class="code" href="classApplicationDescription.htm#a0c7ab72b476e232f6ce274c057541c23">securityChecksVerified</a>();
<a name="l00216"></a>00216 
<a name="l00217"></a>00217 <span class="keyword">private</span>:
<a name="l00218"></a>00218 
<a name="l00219"></a>00219         <span class="keyword">class </span>MimeRegInfo {
<a name="l00220"></a>00220         <span class="keyword">public</span>:
<a name="l00221"></a>00221                 MimeRegInfo() : stream(false) {}
<a name="l00222"></a>00222                 <span class="comment">//FIXME: don&#39;t need this anymore; originally intended to have it handle deep copies from pointers but now it&#39;s just the same as the default copy constr.</span>
<a name="l00223"></a>00223                 MimeRegInfo(<span class="keyword">const</span> MimeRegInfo&amp; c) {
<a name="l00224"></a>00224                         mimeType = c.mimeType;
<a name="l00225"></a>00225                         extension = c.extension;
<a name="l00226"></a>00226                         urlPattern = c.urlPattern;
<a name="l00227"></a>00227                         scheme = c.scheme;
<a name="l00228"></a>00228                         stream = c.stream;
<a name="l00229"></a>00229                 }
<a name="l00230"></a>00230                 MimeRegInfo&amp; operator=(<span class="keyword">const</span> MimeRegInfo&amp; c) {
<a name="l00231"></a>00231                         <span class="keywordflow">if</span> (<span class="keyword">this</span> == &amp;c)
<a name="l00232"></a>00232                                 <span class="keywordflow">return</span> *<span class="keyword">this</span>;
<a name="l00233"></a>00233                         mimeType = c.mimeType;
<a name="l00234"></a>00234                         extension = c.extension;
<a name="l00235"></a>00235                         urlPattern = c.urlPattern;
<a name="l00236"></a>00236                         scheme = c.scheme;
<a name="l00237"></a>00237                         stream = c.stream;
<a name="l00238"></a>00238                         <span class="keywordflow">return</span> *<span class="keyword">this</span>;
<a name="l00239"></a>00239                 }
<a name="l00240"></a>00240                 std::string mimeType;
<a name="l00241"></a>00241                 std::string extension;
<a name="l00242"></a>00242                 std::string urlPattern;
<a name="l00243"></a>00243                 std::string scheme;
<a name="l00244"></a>00244                 <span class="keywordtype">bool</span> stream;
<a name="l00245"></a>00245         };
<a name="l00246"></a>00246 
<a name="l00247"></a>00247         <span class="keyword">static</span> <span class="keywordtype">int</span>      utilExtractMimeTypes(<span class="keyword">struct</span> json_object * jsonMimeTypeArray,std::vector&lt;MimeRegInfo&gt;&amp; extractedMimeTypes);
<a name="l00248"></a>00248 
<a name="l00249"></a>00249         std::string                     m_id;
<a name="l00250"></a>00250         std::string                                     m_title;                                <span class="comment">//copy of default launchpoint&#39;s title</span>
<a name="l00251"></a>00251         std::string                     m_category;
<a name="l00252"></a>00252         std::string                     m_entryPoint;
<a name="l00253"></a>00253         std::string                     m_version;
<a name="l00254"></a>00254         <span class="keywordtype">bool</span>                            m_isHeadLess;
<a name="l00255"></a>00255         std::list&lt;ResourceHandler&gt;      m_mimeTypes;
<a name="l00256"></a>00256         std::list&lt;RedirectHandler&gt;      m_redirectTypes;
<a name="l00257"></a>00257         <a class="code" href="LaunchPoint_8h.htm#add3ace36d420f4c7f29f016edf84d80f">LaunchPointList</a>                 m_launchPoints;
<a name="l00258"></a>00258         std::string                                     m_splashIconName;
<a name="l00259"></a>00259         std::string                                     m_splashBackgroundName;
<a name="l00260"></a>00260         std::string                                     m_miniIconName;
<a name="l00261"></a>00261         <span class="keywordtype">bool</span>                            m_hasTransparentWindows;
<a name="l00262"></a>00262         std::string                     m_folderPath;
<a name="l00263"></a>00263         <span class="keywordtype">bool</span>                                            m_executionLock;
<a name="l00264"></a>00264         <span class="keywordtype">bool</span>                                            m_flaggedForRemoval;
<a name="l00265"></a>00265         <span class="keywordtype">bool</span>                                            m_isRemovable;
<a name="l00266"></a>00266         <span class="keywordtype">bool</span>                                            m_isUserHideable;
<a name="l00267"></a>00267         <span class="keywordtype">int</span>                                                     m_progress;
<a name="l00268"></a>00268         <span class="keywordtype">bool</span>                                            m_isVisible;
<a name="l00269"></a>00269         uint32_t                                        m_hardwareFeaturesNeeded;
<a name="l00270"></a>00270         <a class="code" href="BezelGesture_8h.htm#a1d1cfd8ffb84e947f82999c682b666a7">Type</a>                                            m_type;
<a name="l00271"></a>00271         <a class="code" href="classApplicationDescription.htm#a092e0a72e5d952ec08adde90c5e73740">Status</a>                                          m_status;
<a name="l00272"></a>00272         <span class="keywordtype">bool</span>                                            m_hasAccounts;
<a name="l00273"></a>00273         <span class="keywordtype">bool</span>                                            m_launchInNewGroup;
<a name="l00274"></a>00274         uint32_t                                        m_uiRevision;
<a name="l00275"></a>00275         <span class="keywordtype">bool</span>                                            m_tapToShareSupported;
<a name="l00276"></a>00276 
<a name="l00277"></a>00277         <span class="comment">// Dock Mode parameters</span>
<a name="l00278"></a>00278         <span class="keywordtype">bool</span>                                            m_dockMode;
<a name="l00279"></a>00279         std::string                                     m_dockModeTitle;
<a name="l00280"></a>00280 
<a name="l00281"></a>00281         std::string                 m_attributes;
<a name="l00282"></a>00282 
<a name="l00283"></a>00283         std::string                                     m_vendorName;
<a name="l00284"></a>00284         std::string                                     m_vendorUrl;
<a name="l00285"></a>00285         uint64_t                                        m_appSize;                      
<a name="l00286"></a>00286         uint32_t                                        m_fsBlockSize;          
<a name="l00287"></a>00287 
<a name="l00288"></a>00288         <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>                            m_runtimeMemoryRequired; <span class="comment">// Amount (in MB) of RAM the application expects to use during runtime</span>
<a name="l00289"></a>00289         std::string                                     m_appmenuName;
<a name="l00290"></a>00290         <a class="code" href="classKeywordMap.htm">KeywordMap</a>                                      m_keywords;
<a name="l00291"></a>00291         std::string                             m_universalSearchJsonStr;
<a name="l00292"></a>00292         std::string                                     m_servicesJsonStr;
<a name="l00293"></a>00293         std::string                                     m_accountsJsonStr;
<a name="l00294"></a>00294 
<a name="l00295"></a>00295         std::string                     m_requestedWindowOrientation;
<a name="l00296"></a>00296 
<a name="l00297"></a>00297         <span class="comment">// if type == SysmgrBuiltin</span>
<a name="l00298"></a>00298 
<a name="l00299"></a>00299         <a class="code" href="classSysmgrBuiltinLaunchHelper.htm">SysmgrBuiltinLaunchHelper</a> *             m_pBuiltin_launcher;
<a name="l00300"></a>00300         <span class="keywordtype">void</span> updateSysmgrBuiltinWithLocalization();
<a name="l00301"></a>00301 };      
<a name="l00302"></a>00302 
<a name="l00303"></a>00303 
<a name="l00304"></a>00304 <span class="preprocessor">#endif </span><span class="comment">/* APPLICATIONDESCRIPTION_H */</span>
</pre></div></div><!-- contents -->
</div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Properties</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Defines</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="ApplicationDescription_8h.htm">ApplicationDescription.h</a>      </li>

    <li class="footer">Generated on Fri Oct 5 2012 19:52:25 for LunaSysMgr by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.6.1 </li>
   </ul>
 </div>


</body>
</html>
