<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>LunaSysMgr: ApplicationManager.h Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>

</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">LunaSysMgr
   
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
      <li><a href="dirs.htm"><span>Directories</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.htm"><span>File&#160;List</span></a></li>
      <li><a href="globals.htm"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('ApplicationManager_8h.htm','');
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">ApplicationManager.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="ApplicationManager_8h.htm">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/* @@@LICENSE</span>
<a name="l00002"></a>00002 <span class="comment">*</span>
<a name="l00003"></a>00003 <span class="comment">*      Copyright (c) 2008-2012 Hewlett-Packard Development Company, L.P.</span>
<a name="l00004"></a>00004 <span class="comment">*</span>
<a name="l00005"></a>00005 <span class="comment">* Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span>
<a name="l00006"></a>00006 <span class="comment">* you may not use this file except in compliance with the License.</span>
<a name="l00007"></a>00007 <span class="comment">* You may obtain a copy of the License at</span>
<a name="l00008"></a>00008 <span class="comment">*</span>
<a name="l00009"></a>00009 <span class="comment">* http://www.apache.org/licenses/LICENSE-2.0</span>
<a name="l00010"></a>00010 <span class="comment">*</span>
<a name="l00011"></a>00011 <span class="comment">* Unless required by applicable law or agreed to in writing, software</span>
<a name="l00012"></a>00012 <span class="comment">* distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span>
<a name="l00013"></a>00013 <span class="comment">* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span>
<a name="l00014"></a>00014 <span class="comment">* See the License for the specific language governing permissions and</span>
<a name="l00015"></a>00015 <span class="comment">* limitations under the License.</span>
<a name="l00016"></a>00016 <span class="comment">*</span>
<a name="l00017"></a>00017 <span class="comment">* LICENSE@@@ */</span>
<a name="l00018"></a>00018 
<a name="l00019"></a>00019 
<a name="l00020"></a>00020 
<a name="l00021"></a>00021 
<a name="l00022"></a>00022 <span class="preprocessor">#ifndef __ApplicationManager_h__</span>
<a name="l00023"></a>00023 <span class="preprocessor"></span><span class="preprocessor">#define __ApplicationManager_h__</span>
<a name="l00024"></a>00024 <span class="preprocessor"></span>
<a name="l00025"></a>00025 <span class="preprocessor">#include &quot;<a class="code" href="Common_8h.htm">Common.h</a>&quot;</span>
<a name="l00026"></a>00026 
<a name="l00027"></a>00027 <span class="preprocessor">#include &lt;vector&gt;</span>
<a name="l00028"></a>00028 <span class="preprocessor">#include &lt;string&gt;</span>
<a name="l00029"></a>00029 <span class="preprocessor">#include &lt;list&gt;</span>
<a name="l00030"></a>00030 <span class="preprocessor">#include &lt;map&gt;</span>
<a name="l00031"></a>00031 <span class="preprocessor">#include &lt;set&gt;</span>
<a name="l00032"></a>00032 
<a name="l00033"></a>00033 <span class="preprocessor">#include &quot;lunaservice.h&quot;</span>
<a name="l00034"></a>00034 <span class="preprocessor">#include &quot;<a class="code" href="Mutex_8h.htm">Mutex.h</a>&quot;</span>
<a name="l00035"></a>00035 <span class="preprocessor">#include &quot;<a class="code" href="MimeSystem_8h.htm">MimeSystem.h</a>&quot;</span>
<a name="l00036"></a>00036 
<a name="l00037"></a>00037 <span class="preprocessor">#include &lt;QObject&gt;</span>
<a name="l00038"></a>00038 <span class="preprocessor">#include &lt;QBitArray&gt;</span>
<a name="l00039"></a>00039 
<a name="l00040"></a>00040 <span class="keyword">class </span><a class="code" href="classApplicationDescription.htm">ApplicationDescription</a>;
<a name="l00041"></a>00041 <span class="keyword">class </span><a class="code" href="classPackageDescription.htm">PackageDescription</a>;
<a name="l00042"></a>00042 <span class="keyword">class </span><a class="code" href="classServiceDescription.htm">ServiceDescription</a>;
<a name="l00043"></a>00043 <span class="keyword">class </span><a class="code" href="classLaunchPoint.htm">LaunchPoint</a>;
<a name="l00044"></a>00044 <span class="keyword">class </span>CommandHandler;
<a name="l00045"></a>00045 <span class="keyword">class </span><a class="code" href="classResourceHandler.htm">ResourceHandler</a>;
<a name="l00046"></a>00046 <span class="keyword">class </span><a class="code" href="classRedirectHandler.htm">RedirectHandler</a>;
<a name="l00047"></a>00047 
<a name="l00048"></a>00048 <span class="comment">//LAUNCHER3-ADDED:</span>
<a name="l00049"></a><a class="code" href="namespaceLaunchPointUpdatedReason.htm">00049</a> <span class="keyword">namespace </span>LaunchPointUpdatedReason
<a name="l00050"></a>00050 {
<a name="l00051"></a><a class="code" href="namespaceLaunchPointUpdatedReason.htm#a2238cacb26a71678fde35fca5ae3268c">00051</a>         <span class="keyword">enum</span> <a class="code" href="namespaceLaunchPointUpdatedReason.htm#a2238cacb26a71678fde35fca5ae3268c">Enum</a>
<a name="l00052"></a>00052         {
<a name="l00053"></a><a class="code" href="namespaceLaunchPointUpdatedReason.htm#a2238cacb26a71678fde35fca5ae3268ca5dcc84d09ddba1eb6486a820820d3f84">00053</a>                 <a class="code" href="namespaceLaunchPointUpdatedReason.htm#a2238cacb26a71678fde35fca5ae3268ca5dcc84d09ddba1eb6486a820820d3f84">INVALID</a> = 0,
<a name="l00054"></a><a class="code" href="namespaceLaunchPointUpdatedReason.htm#a2238cacb26a71678fde35fca5ae3268ca646537b97d2c056c4e9b205ae88d95df">00054</a>                 <a class="code" href="namespaceLaunchPointUpdatedReason.htm#a2238cacb26a71678fde35fca5ae3268ca646537b97d2c056c4e9b205ae88d95df">Status</a>,
<a name="l00055"></a><a class="code" href="namespaceLaunchPointUpdatedReason.htm#a2238cacb26a71678fde35fca5ae3268cacaae737c0e60d70869c1ce91367539b7">00055</a>                 <a class="code" href="namespaceLaunchPointUpdatedReason.htm#a2238cacb26a71678fde35fca5ae3268cacaae737c0e60d70869c1ce91367539b7">Progress</a>,
<a name="l00056"></a><a class="code" href="namespaceLaunchPointUpdatedReason.htm#a2238cacb26a71678fde35fca5ae3268ca4bee665fe78fbe78d93207047c3f4471">00056</a>                 <a class="code" href="namespaceLaunchPointUpdatedReason.htm#a2238cacb26a71678fde35fca5ae3268ca4bee665fe78fbe78d93207047c3f4471">Icon</a>,
<a name="l00057"></a><a class="code" href="namespaceLaunchPointUpdatedReason.htm#a2238cacb26a71678fde35fca5ae3268cae2a71fd5b315994267d7916c271c8ec9">00057</a>                 <a class="code" href="namespaceLaunchPointUpdatedReason.htm#a2238cacb26a71678fde35fca5ae3268cae2a71fd5b315994267d7916c271c8ec9">SIZEOF</a>
<a name="l00058"></a>00058         };
<a name="l00059"></a>00059 }
<a name="l00060"></a>00060 
<a name="l00061"></a><a class="code" href="namespaceLaunchPointAddedReason.htm">00061</a> <span class="keyword">namespace </span>LaunchPointAddedReason
<a name="l00062"></a>00062 {
<a name="l00063"></a><a class="code" href="namespaceLaunchPointAddedReason.htm#a4d87faa1f6640b1843b8a57df927f2b0">00063</a>         <span class="keyword">enum</span> <a class="code" href="namespaceLaunchPointAddedReason.htm#a4d87faa1f6640b1843b8a57df927f2b0">Enum</a>
<a name="l00064"></a>00064         {
<a name="l00065"></a><a class="code" href="namespaceLaunchPointAddedReason.htm#a4d87faa1f6640b1843b8a57df927f2b0a57549f201b9bdc65e28a75bf16495b43">00065</a>                 <a class="code" href="namespaceLaunchPointAddedReason.htm#a4d87faa1f6640b1843b8a57df927f2b0a57549f201b9bdc65e28a75bf16495b43">INVALID</a> = 0,
<a name="l00066"></a><a class="code" href="namespaceLaunchPointAddedReason.htm#a4d87faa1f6640b1843b8a57df927f2b0a95b44040ec59f5cea9ac7ef2aa175ff8">00066</a>                 <a class="code" href="namespaceLaunchPointAddedReason.htm#a4d87faa1f6640b1843b8a57df927f2b0a95b44040ec59f5cea9ac7ef2aa175ff8">InstallerStatusUpdate</a>,
<a name="l00067"></a><a class="code" href="namespaceLaunchPointAddedReason.htm#a4d87faa1f6640b1843b8a57df927f2b0a77d89f5ed5270a5c61b983e83c127211">00067</a>                 <a class="code" href="namespaceLaunchPointAddedReason.htm#a4d87faa1f6640b1843b8a57df927f2b0a77d89f5ed5270a5c61b983e83c127211">PostLaunchPointUpdateAdded</a>,             <span class="comment">// temp flag - see AppMonitor::slotLaunchPointAdded</span>
<a name="l00068"></a><a class="code" href="namespaceLaunchPointAddedReason.htm#a4d87faa1f6640b1843b8a57df927f2b0a37bfd5896750d3c8e043a207a2149893">00068</a>                 <a class="code" href="namespaceLaunchPointAddedReason.htm#a4d87faa1f6640b1843b8a57df927f2b0a37bfd5896750d3c8e043a207a2149893">SIZEOF</a>
<a name="l00069"></a>00069         };
<a name="l00070"></a>00070 }
<a name="l00071"></a>00071 
<a name="l00072"></a><a class="code" href="namespaceLaunchPointRemovedReason.htm">00072</a> <span class="keyword">namespace </span>LaunchPointRemovedReason
<a name="l00073"></a>00073 {
<a name="l00074"></a><a class="code" href="namespaceLaunchPointRemovedReason.htm#a1cde6eaabd045b256f4be833009371c6">00074</a>         <span class="keyword">enum</span> <a class="code" href="namespaceLaunchPointRemovedReason.htm#a1cde6eaabd045b256f4be833009371c6">Enum</a>
<a name="l00075"></a>00075         {
<a name="l00076"></a><a class="code" href="namespaceLaunchPointRemovedReason.htm#a1cde6eaabd045b256f4be833009371c6ae95f510cbf1d752617b29f31c6c7595a">00076</a>                 <a class="code" href="namespaceLaunchPointRemovedReason.htm#a1cde6eaabd045b256f4be833009371c6ae95f510cbf1d752617b29f31c6c7595a">INVALID</a> = 0,
<a name="l00077"></a><a class="code" href="namespaceLaunchPointRemovedReason.htm#a1cde6eaabd045b256f4be833009371c6ad181a29880ceb4c4d54a4349d4dd270c">00077</a>                 <a class="code" href="namespaceLaunchPointRemovedReason.htm#a1cde6eaabd045b256f4be833009371c6ad181a29880ceb4c4d54a4349d4dd270c">InstallerStatusUpdate</a>,
<a name="l00078"></a><a class="code" href="namespaceLaunchPointRemovedReason.htm#a1cde6eaabd045b256f4be833009371c6a21486992bce7e7e0f38757a1dc0942fb">00078</a>                 <a class="code" href="namespaceLaunchPointRemovedReason.htm#a1cde6eaabd045b256f4be833009371c6a21486992bce7e7e0f38757a1dc0942fb">SIZEOF</a>
<a name="l00079"></a>00079         };
<a name="l00080"></a>00080 }
<a name="l00081"></a>00081 
<a name="l00082"></a>00082 <span class="comment">// sort items in the search set by title</span>
<a name="l00083"></a><a class="code" href="structcmptitle.htm">00083</a> <span class="keyword">struct </span><a class="code" href="structcmptitle.htm">cmptitle</a> {
<a name="l00084"></a>00084         <span class="keywordtype">bool</span> <a class="code" href="structcmptitle.htm#a0cbef12c727e044ef0a3fcfdf5e585c9">operator()</a>(<span class="keyword">const</span> <a class="code" href="classLaunchPoint.htm">LaunchPoint</a>*,<span class="keyword">const</span> <a class="code" href="classLaunchPoint.htm">LaunchPoint</a>*) <span class="keyword">const</span>;
<a name="l00085"></a>00085 };
<a name="l00086"></a><a class="code" href="ApplicationManager_8h.htm#ab554004275b43017bf63cc213b9e4902">00086</a> <span class="keyword">typedef</span> std::set&lt;const LaunchPoint*,cmptitle&gt; <a class="code" href="ApplicationManager_8h.htm#ab554004275b43017bf63cc213b9e4902">SearchSet</a>;
<a name="l00087"></a>00087 
<a name="l00088"></a><a class="code" href="namespaceDimensionsSystemInterface.htm">00088</a> <span class="keyword">namespace </span>DimensionsSystemInterface
<a name="l00089"></a>00089 {
<a name="l00090"></a>00090 <span class="keyword">class </span><a class="code" href="classDimensionsSystemInterface_1_1AppEffector.htm">AppEffector</a>;
<a name="l00091"></a>00091 }
<a name="l00092"></a>00092 
<a name="l00093"></a><a class="code" href="classApplicationManager.htm">00093</a> <span class="keyword">class </span><a class="code" href="classApplicationManager.htm">ApplicationManager</a> : <span class="keyword">public</span> <a class="code" href="classQObject.htm">QObject</a>
<a name="l00094"></a>00094 {
<a name="l00095"></a>00095         Q_OBJECT
<a name="l00096"></a>00096 
<a name="l00097"></a>00097 <span class="keyword">public</span>:
<a name="l00098"></a>00098 
<a name="l00099"></a>00099         <span class="comment">//LAUNCHER3-ADDED:  TEMP: need a better way to send LS messages but for now, just letting AppEffector in</span>
<a name="l00100"></a>00100         <span class="comment">//                                      launcher have access to the service handle in here (with the proper precautions)</span>
<a name="l00101"></a><a class="code" href="classApplicationManager.htm#a87da156598ad8f113972189adb97d020">00101</a>         <span class="keyword">friend</span> <span class="keyword">class </span><a class="code" href="classDimensionsSystemInterface_1_1AppEffector.htm">DimensionsSystemInterface::AppEffector</a>;
<a name="l00102"></a>00102 
<a name="l00103"></a><a class="code" href="classApplicationManager.htm#ab4ac9fec82244f95729657cbea5d071e">00103</a>         <span class="keyword">typedef</span> std::vector&lt;const LaunchPoint *&gt; <a class="code" href="classApplicationManager.htm#ab4ac9fec82244f95729657cbea5d071e">LaunchPointCollection</a>;
<a name="l00104"></a>00104 
<a name="l00105"></a>00105         <a class="code" href="classApplicationManager.htm#a05a04d6e3834adf031606133bbee313d">~ApplicationManager</a>();
<a name="l00106"></a>00106 
<a name="l00107"></a>00107         <span class="keyword">static</span> <a class="code" href="classApplicationManager.htm">ApplicationManager</a>* <a class="code" href="classApplicationManager.htm#ae1738bb1421b2936a9290584a251e1a2">instance</a>();
<a name="l00108"></a>00108 
<a name="l00109"></a>00109         <span class="keywordtype">bool</span> <a class="code" href="classApplicationManager.htm#aef3807a9436a30e867c61bcff11b456c">init</a>();
<a name="l00110"></a>00110         <span class="keywordtype">void</span> <a class="code" href="classApplicationManager.htm#a091166a4f8fce39035f25f4ae3550c09">scan</a>();
<a name="l00111"></a>00111         <span class="keywordtype">void</span> <a class="code" href="classApplicationManager.htm#a4f88aad7a9b7e0240ea1f3b58526db0b">postInstallScan</a>(<span class="keyword">const</span> std::string&amp; appId);
<a name="l00112"></a>00112         <span class="keywordtype">void</span> <a class="code" href="classApplicationManager.htm#a4f88aad7a9b7e0240ea1f3b58526db0b">postInstallScan</a>(json_object * pPackageInfoJson, <span class="keyword">const</span> std::string&amp; packageFolder);
<a name="l00113"></a>00113 
<a name="l00114"></a>00114         <span class="keywordtype">void</span> <a class="code" href="classApplicationManager.htm#ac77573652553146c1b12be12205d1ba6">launchBootTimeApps</a>();
<a name="l00115"></a>00115         <span class="keywordtype">bool</span> <a class="code" href="classApplicationManager.htm#a00755bc6a519d2c5aac954b53d092109">isLaunchAtBootApp</a>(<span class="keyword">const</span> std::string&amp; appId);
<a name="l00116"></a>00116 
<a name="l00117"></a>00117         <a class="code" href="classApplicationDescription.htm">ApplicationDescription</a>* <a class="code" href="classApplicationManager.htm#aad2cc8bbad9d91bc1cce50702f6c7b93">getAppById</a>(<span class="keyword">const</span> std::string&amp; <span class="keywordtype">id</span>);
<a name="l00118"></a>00118         <a class="code" href="classApplicationDescription.htm">ApplicationDescription</a>* <a class="code" href="classApplicationManager.htm#a50c44b2e674a3a3918a5ef55c471e061">getAppByIdHardwareCompatibleAppsOnly</a>(<span class="keyword">const</span> std::string&amp; <span class="keywordtype">id</span>);
<a name="l00119"></a>00119         <a class="code" href="classApplicationDescription.htm">ApplicationDescription</a>* <a class="code" href="classApplicationManager.htm#abfd3eaf3c81d4756dd804d27e7c494a9">getAppByMime</a>(<span class="keyword">const</span> std::string&amp; mime);
<a name="l00120"></a>00120         <a class="code" href="classApplicationDescription.htm">ApplicationDescription</a>* <a class="code" href="classApplicationManager.htm#acd9983b8abf5aed3f30a88703e389187">getPendingAppById</a>(<span class="keyword">const</span> std::string&amp; <span class="keywordtype">id</span>);
<a name="l00121"></a>00121 
<a name="l00122"></a>00122         <a class="code" href="classPackageDescription.htm">PackageDescription</a>* <a class="code" href="classApplicationManager.htm#a326f41713e1859ead084ecc2de0100d9">getPackageInfoByAppId</a>(<span class="keyword">const</span> std::string&amp; anyAppIdInPackage);
<a name="l00123"></a>00123         <a class="code" href="classPackageDescription.htm">PackageDescription</a>* <a class="code" href="classApplicationManager.htm#a76a2eb666db1e3e9d87deb5a759f203a">getPackageInfoByServiceId</a>(<span class="keyword">const</span> std::string&amp; anyServiceIdInPackage);
<a name="l00124"></a>00124         <a class="code" href="classPackageDescription.htm">PackageDescription</a>* <a class="code" href="classApplicationManager.htm#a0a05bb400097389012c5ea3a59abad10">getPackageInfoByPackageId</a>(<span class="keyword">const</span> std::string&amp; packageId);
<a name="l00125"></a>00125 
<a name="l00126"></a>00126         <a class="code" href="classServiceDescription.htm">ServiceDescription</a>* <a class="code" href="classApplicationManager.htm#ad27d4c470ff267ed3ce7a6b054e664f7">getServiceInfoByServiceId</a>(<span class="keyword">const</span> std::string&amp; serviceId);
<a name="l00127"></a>00127 
<a name="l00128"></a>00128         <span class="keywordtype">bool</span> <a class="code" href="classApplicationManager.htm#a487bbb29c809275b1f783a78c3cd824a">getAppsByPackageId</a>(<span class="keyword">const</span> std::string&amp; packageId, std::vector&lt;ApplicationDescription *&gt;&amp; r_apps);
<a name="l00129"></a>00129         <span class="keywordtype">bool</span> <a class="code" href="classApplicationManager.htm#ad1caed4e3cd32c4659643e7e2d8c1f9b">getServicesByPackageId</a>(<span class="keyword">const</span> std::string&amp; packageId, std::vector&lt;ServiceDescription *&gt;&amp; r_services);
<a name="l00130"></a>00130 
<a name="l00131"></a>00131         <span class="keywordtype">void</span> <a class="code" href="classApplicationManager.htm#aba9bb4256c1f2fcbd15f84fc7e049189">searchLaunchPoints</a>(<a class="code" href="ApplicationManager_8h.htm#ab554004275b43017bf63cc213b9e4902">SearchSet</a>&amp; matchedByTitle, <a class="code" href="ApplicationManager_8h.htm#ab554004275b43017bf63cc213b9e4902">SearchSet</a>&amp; matchedByKeyword, <span class="keyword">const</span> std::string&amp; searchTerm) <span class="keyword">const</span>;
<a name="l00132"></a>00132 
<a name="l00133"></a>00133         <span class="keywordtype">bool</span>                                    <a class="code" href="classApplicationManager.htm#adfb63bf359cf23f5c09eae678ba15fad">removePendingApp</a>(<span class="keyword">const</span> std::string&amp; <span class="keywordtype">id</span>);
<a name="l00134"></a>00134         <span class="keywordtype">bool</span>                    <a class="code" href="classApplicationManager.htm#a3c24c31266ad7427f0e5919bbec9aa5b">removePackage</a>(<span class="keyword">const</span> std::string&amp; <span class="keywordtype">id</span>,<span class="keywordtype">int</span> cause);
<a name="l00135"></a>00135         <span class="keyword">const</span> <a class="code" href="classLaunchPoint.htm">LaunchPoint</a>*      <a class="code" href="classApplicationManager.htm#a7afd687bc49f3c0baa30e063a92aa95d">getLaunchPointById</a>(<span class="keyword">const</span> std::string&amp; launchPointId);
<a name="l00136"></a>00136         <span class="keyword">const</span> <a class="code" href="classLaunchPoint.htm">LaunchPoint</a>*      <a class="code" href="classApplicationManager.htm#a26429253ec55784b7d06e951a55d2f15">getLaunchPointByIdHardwareCompatibleAppsOnly</a>(<span class="keyword">const</span> std::string&amp; launchPointId);
<a name="l00137"></a>00137 
<a name="l00138"></a>00138         std::string <a class="code" href="classApplicationManager.htm#a1d9df4fa3668b2f3d5cf4bdd4759f522">addLaunchPoint</a>(<span class="keyword">const</span> std::string&amp; <span class="keywordtype">id</span>,
<a name="l00139"></a>00139                                                            <span class="keyword">const</span> std::string&amp; title,
<a name="l00140"></a>00140                                                            <span class="keyword">const</span> std::string&amp; menuName,
<a name="l00141"></a>00141                                                            <span class="keyword">const</span> std::string&amp; icon,
<a name="l00142"></a>00142                                                            <span class="keyword">const</span> std::string&amp; params,
<a name="l00143"></a>00143                                                            <span class="keyword">const</span> <span class="keywordtype">bool</span> removable=<span class="keyword">true</span>);
<a name="l00144"></a>00144         <span class="keywordtype">bool</span>        <a class="code" href="classApplicationManager.htm#a58110d0d1e1942a082eccf24069c8ae6">removeLaunchPoint</a>(<span class="keyword">const</span> std::string&amp; launchPointId,std::string&amp; extendedReturnCause);
<a name="l00145"></a>00145         <span class="comment">// NOTE: this will need to be extended in the future to support other field updates</span>
<a name="l00146"></a>00146         <span class="keywordtype">bool</span>            <a class="code" href="classApplicationManager.htm#af2f9aae995863db911b56abcb9eafa40">updateLaunchPointIcon</a>(<span class="keyword">const</span> std::string&amp; launchPointId, <span class="keyword">const</span> std::string&amp; newIconPath);
<a name="l00147"></a>00147 
<a name="l00148"></a>00148         <span class="keywordtype">bool</span> <a class="code" href="classApplicationManager.htm#adfd21d9abc0df52f74209bb26a49568c">enableDockModeLaunchPoint</a> (<span class="keyword">const</span> <span class="keywordtype">char</span>* appId);
<a name="l00149"></a>00149         <span class="keywordtype">bool</span> <a class="code" href="classApplicationManager.htm#ae24e349c67d23af21e285145824f5210">disableDockModeLaunchPoint</a> (<span class="keyword">const</span> <span class="keywordtype">char</span>* appId);
<a name="l00150"></a>00150 
<a name="l00151"></a>00151         <a class="code" href="classApplicationManager.htm#ab4ac9fec82244f95729657cbea5d071e">LaunchPointCollection</a> <a class="code" href="classApplicationManager.htm#ae66d672f406b23dbe2f05e3b74062359">dockLaunchPoints</a>(<span class="keywordtype">bool</span> *needsUpdate = NULL);
<a name="l00152"></a>00152         <a class="code" href="classApplicationManager.htm#ab4ac9fec82244f95729657cbea5d071e">LaunchPointCollection</a> <a class="code" href="classApplicationManager.htm#aa625a28cbf8f3fbe8aabdaeb32a847be">allLaunchPoints</a>();
<a name="l00153"></a>00153         <a class="code" href="classApplicationManager.htm#ab4ac9fec82244f95729657cbea5d071e">LaunchPointCollection</a> <a class="code" href="classApplicationManager.htm#a3ab9eb695d8874205f82556854734439">allPendingLaunchPoints</a>();
<a name="l00154"></a>00154         <a class="code" href="classApplicationManager.htm#ab4ac9fec82244f95729657cbea5d071e">LaunchPointCollection</a> <a class="code" href="classApplicationManager.htm#a50ee517e2aff2b31face5b1c2595ce30">allDockModeLaunchPoints</a>();
<a name="l00155"></a>00155 
<a name="l00156"></a><a class="code" href="classApplicationManager.htm#a7cc8990ef96caa8afeefe61fa9c3bb79">00156</a>         <span class="keyword">const</span> std::set&lt;const LaunchPoint*&gt;&amp; <a class="code" href="classApplicationManager.htm#a7cc8990ef96caa8afeefe61fa9c3bb79">enabledDockModeLaunchPoints</a>() { <span class="keywordflow">return</span> m_dockModeLaunchPoints; }
<a name="l00157"></a>00157 
<a name="l00158"></a>00158         std::vector&lt;ApplicationDescription*&gt; <a class="code" href="classApplicationManager.htm#afb474771f499ca2e815908d06d0f831f">allApps</a>();
<a name="l00159"></a>00159         std::map&lt;std::string, PackageDescription*&gt; <a class="code" href="classApplicationManager.htm#a08ec8ea47c2215849cfcf1caf63e2cb5">allPackages</a>();
<a name="l00160"></a>00160 
<a name="l00161"></a>00161 
<a name="l00162"></a>00162         std::string                             <a class="code" href="classApplicationManager.htm#adbb216d3f0fe48d18429c7612e5d5217">mimeTableAsJsonString</a>();
<a name="l00163"></a>00163 
<a name="l00164"></a>00164         <span class="keywordtype">void</span> <a class="code" href="classApplicationManager.htm#a9628ef34ab77414138b35082dcde0035">relayStatus</a>(<span class="keyword">const</span> std::string&amp; jsonPayload,<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> ticketId);
<a name="l00165"></a>00165 
<a name="l00166"></a>00166         <span class="keyword">static</span> <a class="code" href="classApplicationDescription.htm">ApplicationDescription</a>* <a class="code" href="classApplicationManager.htm#a6a90dd86955096fca6e9f992a74af2c7">checkAppAgainstWhiteList</a>( <a class="code" href="classApplicationDescription.htm">ApplicationDescription</a>* appDesc );
<a name="l00167"></a>00167         <span class="keywordtype">bool</span> <a class="code" href="classApplicationManager.htm#a582312d75227a6f11fb47776e33e8837">isTrustedInstallerApp</a> (<span class="keyword">const</span> std::string&amp; uri) <span class="keyword">const</span>;
<a name="l00168"></a>00168         <span class="keywordtype">bool</span> <a class="code" href="classApplicationManager.htm#a0e086dd77256fbd59c45e8fc2f47c530">isTrustedPalmApp</a>(<span class="keyword">const</span> <a class="code" href="classApplicationDescription.htm">ApplicationDescription</a>* appDesc) <span class="keyword">const</span>;
<a name="l00169"></a>00169         <span class="keywordtype">bool</span> <a class="code" href="classApplicationManager.htm#a0e086dd77256fbd59c45e8fc2f47c530">isTrustedPalmApp</a>(<span class="keyword">const</span> std::string&amp; appId);
<a name="l00170"></a>00170 
<a name="l00171"></a>00171         <span class="comment">//LAUNCHER3-ADDED:  this is intended to be a one-stop shopping point to tell the launcher if this is an app which</span>
<a name="l00172"></a>00172         <span class="comment">//              ships with the platform (either HPalm&#39;s own app or a &quot;2nd party&quot; contractor/partner app which should be treated the same way)</span>
<a name="l00173"></a>00173         <span class="comment">//              For now it will just be a passthrough to isTrustedPalm().</span>
<a name="l00174"></a>00174         <span class="keywordtype">bool</span> <a class="code" href="classApplicationManager.htm#aa100c10dad762d99e19542a3131d1123">isFactoryPlatformApp</a>(<span class="keyword">const</span> std::string&amp; appId);
<a name="l00175"></a>00175 
<a name="l00176"></a><a class="code" href="structApplicationManager_1_1DownloadRequest.htm">00176</a>         <span class="keyword">struct </span><a class="code" href="structApplicationManager_1_1DownloadRequest.htm">DownloadRequest</a> {
<a name="l00177"></a><a class="code" href="structApplicationManager_1_1DownloadRequest.htm#a120d418721ea279dca78f7b3e2ebc053">00177</a>                 <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> <a class="code" href="structApplicationManager_1_1DownloadRequest.htm#a120d418721ea279dca78f7b3e2ebc053">m_ticket</a>;
<a name="l00178"></a><a class="code" href="structApplicationManager_1_1DownloadRequest.htm#a7b0cff8c0ec42ff7bae2591cd6a7c57c">00178</a>                 std::string <a class="code" href="structApplicationManager_1_1DownloadRequest.htm#a7b0cff8c0ec42ff7bae2591cd6a7c57c">m_overrideHandlerAppId</a>;
<a name="l00179"></a><a class="code" href="structApplicationManager_1_1DownloadRequest.htm#a3bd4016414e8d9ddb6da54efcd1362a0">00179</a>                 std::string <a class="code" href="structApplicationManager_1_1DownloadRequest.htm#a3bd4016414e8d9ddb6da54efcd1362a0">m_mime</a>;
<a name="l00180"></a><a class="code" href="structApplicationManager_1_1DownloadRequest.htm#a46fcc901450320f4dbb9f8e9af5f827c">00180</a>                 <span class="keywordtype">bool</span> <a class="code" href="structApplicationManager_1_1DownloadRequest.htm#a46fcc901450320f4dbb9f8e9af5f827c">m_isSubscribed</a>;
<a name="l00181"></a>00181 
<a name="l00182"></a><a class="code" href="structApplicationManager_1_1DownloadRequest.htm#af4d8ea65baefa61af77f2c5ddba0dbff">00182</a>                 <a class="code" href="structApplicationManager_1_1DownloadRequest.htm#af4d8ea65baefa61af77f2c5ddba0dbff">DownloadRequest</a> (<span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> ticket, <span class="keyword">const</span> std::string&amp; ovrHandlerAppId, <span class="keyword">const</span> std::string&amp; strMime, <span class="keywordtype">bool</span> isSubscribed)
<a name="l00183"></a>00183                 : <a class="code" href="structApplicationManager_1_1DownloadRequest.htm#a120d418721ea279dca78f7b3e2ebc053">m_ticket</a>(ticket), <a class="code" href="structApplicationManager_1_1DownloadRequest.htm#a7b0cff8c0ec42ff7bae2591cd6a7c57c">m_overrideHandlerAppId</a> (ovrHandlerAppId), <a class="code" href="structApplicationManager_1_1DownloadRequest.htm#a3bd4016414e8d9ddb6da54efcd1362a0">m_mime</a> (strMime), <a class="code" href="structApplicationManager_1_1DownloadRequest.htm#a46fcc901450320f4dbb9f8e9af5f827c">m_isSubscribed</a> (isSubscribed)
<a name="l00184"></a>00184                 {  }
<a name="l00185"></a>00185 
<a name="l00186"></a><a class="code" href="structApplicationManager_1_1DownloadRequest.htm#ab700a1fd740a7cf3820849f86ed6ccd9">00186</a>                 <a class="code" href="structApplicationManager_1_1DownloadRequest.htm#af4d8ea65baefa61af77f2c5ddba0dbff">DownloadRequest</a> (<span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> ticket, <span class="keywordtype">bool</span> isSubscribed)
<a name="l00187"></a>00187                 : <a class="code" href="structApplicationManager_1_1DownloadRequest.htm#a120d418721ea279dca78f7b3e2ebc053">m_ticket</a> (ticket), <a class="code" href="structApplicationManager_1_1DownloadRequest.htm#a46fcc901450320f4dbb9f8e9af5f827c">m_isSubscribed</a> (isSubscribed)
<a name="l00188"></a>00188                 {  }
<a name="l00189"></a>00189         };
<a name="l00190"></a>00190 
<a name="l00191"></a><a class="code" href="classApplicationManager.htm#a191e199d7033553ded8a5e9d4bb1a2a8">00191</a>         <span class="keyword">static</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> <a class="code" href="classApplicationManager.htm#a191e199d7033553ded8a5e9d4bb1a2a8">s_ticketGenerator</a>;
<a name="l00192"></a>00192 
<a name="l00193"></a>00193         <span class="keyword">static</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> <a class="code" href="classApplicationManager.htm#a5acab727fd6bec0b9b026787bf863017">generateNewTicket</a>();
<a name="l00194"></a>00194 
<a name="l00195"></a>00195         <span class="keyword">static</span> <span class="keywordtype">bool</span> <a class="code" href="classApplicationManager.htm#aeb07d438d7370adb157eeafd907167d6">cbDownloadManagerUpdate</a> (LSHandle* lsHandle, LSMessage* msg, <span class="keywordtype">void</span>* user_data);
<a name="l00196"></a>00196         <span class="keyword">static</span> <span class="keywordtype">bool</span> <a class="code" href="classApplicationManager.htm#a4ff76e190af0098f5188bf9262afe605">isRemoteFile</a> (<span class="keyword">const</span> <span class="keywordtype">char</span>* uri);
<a name="l00197"></a>00197         <span class="keyword">static</span> <span class="keywordtype">bool</span> <a class="code" href="classApplicationManager.htm#ab7fef379f40f51904a3960a14b39806d">isAppPackage</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* uri);
<a name="l00198"></a>00198 
<a name="l00199"></a>00199         <span class="keyword">static</span> <span class="keywordtype">bool</span> <a class="code" href="classApplicationManager.htm#a8018fa5d8dc65933c4a60f41ef7bc173">getAppEntryPointFromAppinfoFile</a>(<span class="keyword">const</span> std::string&amp; baseDirOfApp,std::string&amp; r_entryPointPath);
<a name="l00200"></a>00200 
<a name="l00201"></a>00201         <span class="keyword">static</span> <span class="keywordtype">bool</span> <a class="code" href="classApplicationManager.htm#a889df96ab4076e4daadb205f51bfd94d">cbAppInstallServiceConnection</a> (LSHandle* lshandle, LSMessage* msg, <span class="keywordtype">void</span>* user_data);
<a name="l00202"></a>00202         <span class="keyword">static</span> <span class="keywordtype">bool</span> <a class="code" href="classApplicationManager.htm#a0b00148b4373e0773d5ed1206075b843">cbApplicationStatusCallback</a> (LSHandle* lsHandle, LSMessage* msg, <span class="keywordtype">void</span>* user_data);
<a name="l00203"></a>00203         <span class="keywordtype">void</span> <a class="code" href="classApplicationManager.htm#aa8c017ab9c05e12286bf8006044d2319">handleApplicationStatusUpdates</a>(LSMessage* msg);
<a name="l00204"></a>00204 
<a name="l00205"></a><a class="code" href="classApplicationManager.htm#a180d80c82faf5403dcba5db34f24ff02">00205</a>         <span class="keyword">enum</span> <a class="code" href="classApplicationManager.htm#a180d80c82faf5403dcba5db34f24ff02">ExecuteLockOperation</a> {
<a name="l00206"></a><a class="code" href="classApplicationManager.htm#a180d80c82faf5403dcba5db34f24ff02acab29db007376d3f8ead8cefcb6c9afd">00206</a>                 <a class="code" href="classApplicationManager.htm#a180d80c82faf5403dcba5db34f24ff02acab29db007376d3f8ead8cefcb6c9afd">ExecuteUnlock</a>,
<a name="l00207"></a><a class="code" href="classApplicationManager.htm#a180d80c82faf5403dcba5db34f24ff02a0191402d077621447084fee0ccb6702c">00207</a>                 <a class="code" href="classApplicationManager.htm#a180d80c82faf5403dcba5db34f24ff02a0191402d077621447084fee0ccb6702c">ExecuteLock</a>,
<a name="l00208"></a><a class="code" href="classApplicationManager.htm#a180d80c82faf5403dcba5db34f24ff02a8e1c0548469c2d5326c5e3c565ed3576">00208</a>                 <a class="code" href="classApplicationManager.htm#a180d80c82faf5403dcba5db34f24ff02a8e1c0548469c2d5326c5e3c565ed3576">ExecuteLockAndTerminate</a>
<a name="l00209"></a>00209         };
<a name="l00210"></a>00210         <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="classApplicationManager.htm#a441b0ff54e841b7de55144cc5cc10c2a">executeLockApp</a>(<span class="keyword">const</span> std::string&amp; appId,<a class="code" href="classApplicationManager.htm#a180d80c82faf5403dcba5db34f24ff02">ExecuteLockOperation</a> op);
<a name="l00211"></a>00211 
<a name="l00212"></a>00212         <span class="keywordtype">void</span> <a class="code" href="classApplicationManager.htm#a96ed81b49fd82fbbeda9568904dfc5b5">dbgEmitSignalLaunchPointUpdated</a>(<span class="keyword">const</span> <a class="code" href="classLaunchPoint.htm">LaunchPoint</a> * lp,<span class="keyword">const</span> QBitArray&amp; statusBits);
<a name="l00213"></a>00213         <span class="keyword">static</span> QString <a class="code" href="classApplicationManager.htm#a6b400849b1c715c02a1cf20419e2e94f">dbgOutputLaunchpointUpdateReasons</a>(<span class="keyword">const</span> QBitArray&amp; reasons);
<a name="l00214"></a>00214 
<a name="l00215"></a>00215 Q_SIGNALS:
<a name="l00216"></a>00216 
<a name="l00217"></a>00217         <span class="comment">//LAUNCHER3-ADD: (modified)</span>
<a name="l00218"></a>00218         <span class="keywordtype">void</span> <a class="code" href="classApplicationManager.htm#a2d95c1e82f1eb13eda1e3e716a31c40e">signalLaunchPointRemoved</a>(<span class="keyword">const</span> <a class="code" href="classLaunchPoint.htm">LaunchPoint</a>*,QBitArray reasons = QBitArray());
<a name="l00219"></a>00219         <span class="keywordtype">void</span> <a class="code" href="classApplicationManager.htm#a95c70d3802da3f832073ef31846e246a">signalLaunchPointUpdated</a>(<span class="keyword">const</span> <a class="code" href="classLaunchPoint.htm">LaunchPoint</a>*,QBitArray reasons = QBitArray());
<a name="l00220"></a>00220         <span class="keywordtype">void</span> <a class="code" href="classApplicationManager.htm#ae09919966a7e5366715ca8ed76a37d1e">signalLaunchPointAdded</a>(<span class="keyword">const</span> <a class="code" href="classLaunchPoint.htm">LaunchPoint</a>*,QBitArray reasons = QBitArray());
<a name="l00221"></a>00221 
<a name="l00222"></a>00222         <span class="comment">//LAUNCHER3-ADD:</span>
<a name="l00223"></a>00223         <span class="keywordtype">void</span> <a class="code" href="classApplicationManager.htm#a7c551e0b3fda74cc7790f1441550be58">signalInitialScanStart</a>();
<a name="l00224"></a>00224         <span class="keywordtype">void</span> <a class="code" href="classApplicationManager.htm#a041a536c3d6ad0be1453eab53975efd9">signalInitialScanEnd</a>();
<a name="l00225"></a>00225         <span class="keywordtype">void</span> <a class="code" href="classApplicationManager.htm#a65ae8e1ce0e072bfbc03d6508f6945e0">signalScanFoundApp</a>(<span class="keyword">const</span> <a class="code" href="classApplicationDescription.htm">ApplicationDescription</a> *);
<a name="l00226"></a>00226         <span class="keywordtype">void</span> <a class="code" href="classApplicationManager.htm#a8c26e6046ef9b638c45a58ec61a8ce15">signalScanFoundAuxiliaryLaunchPoint</a>(<span class="keyword">const</span> <a class="code" href="classApplicationDescription.htm">ApplicationDescription</a> *,<span class="keyword">const</span> <a class="code" href="classLaunchPoint.htm">LaunchPoint</a> *);
<a name="l00227"></a>00227 
<a name="l00228"></a>00228         <span class="comment">//--end</span>
<a name="l00229"></a>00229 
<a name="l00230"></a>00230         <span class="keywordtype">void</span> <a class="code" href="classApplicationManager.htm#a56f8697dba719b4f8fe6312956412281">signalDockModeLaunchPointEnabled</a> (<span class="keyword">const</span> <a class="code" href="classLaunchPoint.htm">LaunchPoint</a>*);
<a name="l00231"></a>00231         <span class="keywordtype">void</span> <a class="code" href="classApplicationManager.htm#acae7b6f18e002694c1f4a61cb74cec3a">signalDockModeLaunchPointDisabled</a> (<span class="keyword">const</span> <a class="code" href="classLaunchPoint.htm">LaunchPoint</a>*);
<a name="l00232"></a>00232 
<a name="l00233"></a>00233 <span class="keyword">public</span> Q_SLOTS:
<a name="l00234"></a>00234 
<a name="l00235"></a>00235         <span class="keywordtype">void</span> <a class="code" href="classApplicationManager.htm#a131bbb4e6624140faec4fd0966736dac">slotBuiltInAppEntryPoint_DockMode</a>(<span class="keyword">const</span> std::string&amp; argsAsStringEncodedJson);
<a name="l00236"></a>00236         <span class="keywordtype">void</span> <a class="code" href="classApplicationManager.htm#a3bf2838ffba547517e107f85f6fded45">slotBuiltInAppEntryPoint_VoiceDial</a>(<span class="keyword">const</span> std::string&amp; argsAsStringEncodedJson);
<a name="l00237"></a>00237         <span class="keywordtype">void</span> <a class="code" href="classApplicationManager.htm#ace58de893a2662e01d4c7649c88a159a">slotVoiceDialAllowSettingChanged</a>(<span class="keywordtype">bool</span> v);
<a name="l00238"></a>00238 
<a name="l00239"></a>00239         <span class="keywordtype">void</span> <a class="code" href="classApplicationManager.htm#a8f9adcfe45b8426a2c21128496861925">slotBuiltInAppEntryPoint_Launchermode0</a>(<span class="keyword">const</span> std::string&amp; argsAsStringEncodedJson);
<a name="l00240"></a>00240 
<a name="l00241"></a>00241 <span class="keyword">private</span>:
<a name="l00242"></a>00242 
<a name="l00243"></a>00243         <span class="keywordtype">void</span> scanForApplications();
<a name="l00244"></a>00244         <span class="keywordtype">void</span> scanForPackages();
<a name="l00245"></a>00245         <span class="keywordtype">void</span> createPackageDescriptionForOldApps();
<a name="l00246"></a>00246         <span class="keywordtype">void</span> scanForServices();
<a name="l00247"></a>00247         <span class="keywordtype">void</span> scanForSystemApplications();
<a name="l00248"></a>00248         <span class="keywordtype">void</span> scanForPendingApplications();
<a name="l00249"></a>00249         <span class="keywordtype">void</span> scanForLaunchPoints(std::string launchPointFolder);
<a name="l00250"></a>00250         <span class="keywordtype">void</span> scanApplicationsFolders(<span class="keyword">const</span> std::string&amp; appFolders);
<a name="l00251"></a>00251         <span class="keywordtype">void</span> scanApplicationsFolders(<span class="keyword">const</span> std::string&amp; appFoldersPath,std::map&lt;std::string,ApplicationDescription *&gt;&amp; foundApps);
<a name="l00252"></a>00252         <a class="code" href="classApplicationDescription.htm">ApplicationDescription</a>* scanOneApplicationFolder(<span class="keyword">const</span> std::string&amp; appFolderPath);
<a name="l00253"></a>00253         <a class="code" href="classPackageDescription.htm">PackageDescription</a>* scanOnePackageFolder(<span class="keyword">const</span> std::string&amp; packageFolderPath);
<a name="l00254"></a>00254         <a class="code" href="classServiceDescription.htm">ServiceDescription</a>* scanOneServiceFolder(<span class="keyword">const</span> std::string&amp; serviceFolderPath);
<a name="l00255"></a>00255 
<a name="l00256"></a>00256         <a class="code" href="classApplicationDescription.htm">ApplicationDescription</a>* installApp(<span class="keyword">const</span> std::string&amp; appId);
<a name="l00257"></a>00257         <a class="code" href="classApplicationDescription.htm">ApplicationDescription</a>* installSysApp(<span class="keyword">const</span> std::string&amp; appId);
<a name="l00258"></a>00258         <span class="keywordtype">bool</span>                    removeApp(<span class="keyword">const</span> std::string&amp; <span class="keywordtype">id</span>,<span class="keywordtype">int</span> cause);
<a name="l00259"></a>00259         <span class="keywordtype">bool</span>                                    removeSysApp(<span class="keyword">const</span> std::string&amp; <span class="keywordtype">id</span>);
<a name="l00260"></a>00260 
<a name="l00261"></a>00261         <span class="comment">//discoverAppChanges: temporal non-safety; apps may change state after the lists are generated. Call under proper locks</span>
<a name="l00262"></a>00262         <span class="keywordtype">void</span> discoverAppChanges(std::vector&lt;ApplicationDescription *&gt;&amp; added,std::vector&lt;ApplicationDescription *&gt;&amp; removed,std::vector&lt;ApplicationDescription *&gt;&amp; changed);
<a name="l00263"></a>00263 
<a name="l00264"></a>00264         <a class="code" href="classApplicationDescription.htm">ApplicationDescription</a>* <a class="code" href="classApplicationManager.htm#aad2cc8bbad9d91bc1cce50702f6c7b93">getAppById</a>( <span class="keyword">const</span> std::string&amp; appId,<span class="keyword">const</span> std::map&lt;std::string,ApplicationDescription *&gt;&amp; appMap);
<a name="l00265"></a>00265 
<a name="l00266"></a>00266         <span class="keywordtype">void</span> scanFolderResursively( <span class="keyword">const</span> std::string&amp; path );
<a name="l00267"></a>00267         <span class="keywordtype">void</span> clear();
<a name="l00268"></a>00268         <span class="keywordtype">void</span> dumpStats();
<a name="l00269"></a>00269         std::string findUniqueFileName(<span class="keyword">const</span> std::string&amp; folder);
<a name="l00270"></a>00270         <span class="keywordtype">bool</span> isNumber(<span class="keyword">const</span> std::string&amp; str) <span class="keyword">const</span>;
<a name="l00271"></a>00271         <span class="keyword">static</span> <span class="keywordtype">bool</span> isValidMimeType( <span class="keyword">const</span> std::string&amp; mime );
<a name="l00272"></a>00272         <span class="keyword">static</span> <span class="keywordtype">bool</span> isGenericMimeType( <span class="keyword">const</span> std::string&amp; mime );
<a name="l00273"></a>00273         <span class="keyword">static</span> std::string getContentType(<span class="keyword">const</span> std::string&amp; mime);
<a name="l00274"></a>00274         <span class="keyword">static</span> <span class="keywordtype">bool</span> urlSchemeIsFile( <span class="keyword">const</span> std::string&amp; url );
<a name="l00275"></a>00275         <span class="keyword">static</span> std::string deriveMimeTypeFromFileMagic( <span class="keyword">const</span> std::string&amp; localFilePath );
<a name="l00276"></a>00276 
<a name="l00277"></a>00277         <span class="keyword">static</span> <span class="keywordtype">void</span> createOrUpdatePackageManifest(<a class="code" href="classPackageDescription.htm">PackageDescription</a>* packageDesc);
<a name="l00278"></a>00278 
<a name="l00279"></a>00279         <span class="keyword">static</span> <span class="keywordtype">void</span> serviceInstallerInstallApp(<span class="keyword">const</span> std::string&amp; <span class="keywordtype">id</span>, <span class="keyword">const</span> std::string&amp; type, <span class="keyword">const</span> std::string&amp; root);
<a name="l00280"></a>00280         <span class="keyword">static</span> <span class="keywordtype">void</span> serviceInstallerUninstallApp(<span class="keyword">const</span> std::string&amp; <span class="keywordtype">id</span>, <span class="keyword">const</span> std::string&amp; type, <span class="keyword">const</span> std::string&amp; root);
<a name="l00281"></a>00281 
<a name="l00282"></a>00282         <span class="keywordtype">void</span> runAppInstallScripts();
<a name="l00283"></a>00283         <span class="keywordtype">void</span> loadHiddenApps();
<a name="l00284"></a>00284         <span class="keywordtype">void</span> hideApp(<span class="keyword">const</span> std::string&amp; appId);
<a name="l00285"></a>00285         <span class="keywordtype">bool</span> isAppHidden(<span class="keyword">const</span> std::string&amp; appId) <span class="keyword">const</span>;
<a name="l00286"></a>00286         <span class="keywordtype">bool</span> isSysappAllowed(<span class="keyword">const</span> std::string&amp; sysappId,<span class="keyword">const</span> std::string&amp; sourcePath);
<a name="l00287"></a>00287 
<a name="l00288"></a>00288         <span class="keywordtype">void</span> executeLockAppLoaded(<span class="keyword">const</span> std::string&amp; appId,<a class="code" href="classApplicationManager.htm#a180d80c82faf5403dcba5db34f24ff02">ExecuteLockOperation</a> op);
<a name="l00289"></a>00289         <span class="keyword">static</span> std::set&lt;std::string&gt; s_appExeclockSet;
<a name="l00290"></a>00290         <span class="keyword">static</span> <a class="code" href="classMutex.htm">Mutex</a> s_mutexExecLockFunctions;
<a name="l00291"></a>00291 
<a name="l00292"></a>00292         std::set&lt;std::string&gt; m_hiddenApps;
<a name="l00293"></a>00293         std::vector&lt;ApplicationDescription*&gt; m_registeredApps;
<a name="l00294"></a>00294         std::vector&lt;ApplicationDescription*&gt; m_systemApps;
<a name="l00295"></a>00295         std::vector&lt;ApplicationDescription*&gt; m_pendingApps;
<a name="l00296"></a>00296 
<a name="l00297"></a>00297         std::set&lt;const LaunchPoint*&gt; m_dockModeLaunchPoints;
<a name="l00298"></a>00298 
<a name="l00299"></a>00299         std::map&lt;std::string, PackageDescription*&gt; m_registeredPackages;
<a name="l00300"></a>00300         std::map&lt;std::string, ServiceDescription*&gt; m_registeredServices;
<a name="l00301"></a>00301 
<a name="l00302"></a>00302         <a class="code" href="classMutex.htm">Mutex</a> m_mutex;
<a name="l00303"></a>00303 
<a name="l00304"></a>00304         <span class="keywordtype">bool</span>    startService();
<a name="l00305"></a>00305         <span class="keywordtype">void</span>    stopService();
<a name="l00306"></a>00306         <span class="keywordtype">void</span>    postLaunchPointChange(<span class="keyword">const</span> <a class="code" href="classLaunchPoint.htm">LaunchPoint</a>* lp, <span class="keyword">const</span> std::string&amp; change);
<a name="l00307"></a>00307         LSPalmService*  m_service;
<a name="l00308"></a>00308         LSHandle* m_serviceHandlePublic;
<a name="l00309"></a>00309         LSHandle* m_serviceHandlePrivate;
<a name="l00310"></a>00310         <span class="keyword">static</span> <span class="keywordtype">long</span> s_ticketId;
<a name="l00311"></a>00311         <span class="keywordtype">bool</span> m_initialScan;
<a name="l00312"></a>00312 
<a name="l00313"></a>00313         <a class="code" href="classApplicationManager.htm">ApplicationManager</a>( );
<a name="l00314"></a>00314         <a class="code" href="classApplicationManager.htm">ApplicationManager</a>&amp; operator=( <span class="keyword">const</span> <a class="code" href="classApplicationManager.htm">ApplicationManager</a>&amp; );
<a name="l00315"></a>00315         <a class="code" href="classApplicationManager.htm">ApplicationManager</a>( <span class="keyword">const</span> <a class="code" href="classApplicationManager.htm">ApplicationManager</a>&amp; );
<a name="l00316"></a>00316 };
<a name="l00317"></a>00317 
<a name="l00318"></a>00318 <span class="comment">// Calback for the ListRunningApps response generated by the AppManager service</span>
<a name="l00319"></a>00319 <span class="keywordtype">void</span> <a class="code" href="ApplicationManager_8h.htm#a60957324cec5413b5584be3dbcaa8517">appManagerCallback_listRunningApps</a>( <span class="keyword">const</span> std::string&amp; runnigAppsJsonArray );
<a name="l00320"></a>00320 
<a name="l00321"></a>00321 <span class="preprocessor">#endif // __ApplicationManager_h__</span>
</pre></div></div><!-- contents -->
</div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Properties</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Defines</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="ApplicationManager_8h.htm">ApplicationManager.h</a>      </li>

    <li class="footer">Generated on Sun Oct 14 2012 10:10:58 for LunaSysMgr by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.6.1 </li>
   </ul>
 </div>


</body>
</html>
