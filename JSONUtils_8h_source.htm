<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>LunaSysMgr: JSONUtils.h Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>

</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">LunaSysMgr
   
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
      <li><a href="dirs.htm"><span>Directories</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.htm"><span>File&#160;List</span></a></li>
      <li><a href="globals.htm"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('JSONUtils_8h.htm','');
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">JSONUtils.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="JSONUtils_8h.htm">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/* @@@LICENSE</span>
<a name="l00002"></a>00002 <span class="comment">*</span>
<a name="l00003"></a>00003 <span class="comment">*      Copyright (c) 2010-2012 Hewlett-Packard Development Company, L.P.</span>
<a name="l00004"></a>00004 <span class="comment">*                                                       2012 Eric Blade &lt;blade.eric@gmail.com&gt;</span>
<a name="l00005"></a>00005 <span class="comment">*</span>
<a name="l00006"></a>00006 <span class="comment">* Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span>
<a name="l00007"></a>00007 <span class="comment">* you may not use this file except in compliance with the License.</span>
<a name="l00008"></a>00008 <span class="comment">* You may obtain a copy of the License at</span>
<a name="l00009"></a>00009 <span class="comment">*</span>
<a name="l00010"></a>00010 <span class="comment">* http://www.apache.org/licenses/LICENSE-2.0</span>
<a name="l00011"></a>00011 <span class="comment">*</span>
<a name="l00012"></a>00012 <span class="comment">* Unless required by applicable law or agreed to in writing, software</span>
<a name="l00013"></a>00013 <span class="comment">* distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span>
<a name="l00014"></a>00014 <span class="comment">* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span>
<a name="l00015"></a>00015 <span class="comment">* See the License for the specific language governing permissions and</span>
<a name="l00016"></a>00016 <span class="comment">* limitations under the License.</span>
<a name="l00017"></a>00017 <span class="comment">*</span>
<a name="l00018"></a>00018 <span class="comment">* LICENSE@@@ */</span>
<a name="l00019"></a>00019 
<a name="l00020"></a>00020 
<a name="l00021"></a>00021 
<a name="l00022"></a>00022 
<a name="l00023"></a>00023 <span class="preprocessor">#ifndef JSONUTILS_H</span>
<a name="l00024"></a>00024 <span class="preprocessor"></span><span class="preprocessor">#define JSONUTILS_H</span>
<a name="l00025"></a>00025 <span class="preprocessor"></span>
<a name="l00026"></a>00026 <span class="preprocessor">#include &quot;<a class="code" href="Settings_8h.htm">Settings.h</a>&quot;</span>
<a name="l00027"></a>00027 
<a name="l00028"></a>00028 <span class="preprocessor">#include &lt;lunaservice.h&gt;</span>
<a name="l00029"></a>00029 <span class="preprocessor">#include &lt;pbnjson.h&gt;</span>
<a name="l00030"></a>00030 <span class="preprocessor">#include &lt;pbnjson.hpp&gt;</span>
<a name="l00031"></a>00031 
<a name="l00032"></a>00032 <span class="comment">/*</span>
<a name="l00033"></a>00033 <span class="comment"> * Helper macros to build schemas in a more reliable, readable &amp; editable way in C++</span>
<a name="l00034"></a>00034 <span class="comment"> */</span>
<a name="l00035"></a>00035 
<a name="l00036"></a><a class="code" href="JSONUtils_8h.htm#a18d295a837ac71add5578860b55e5502">00036</a> <span class="preprocessor">#define STR(x) #x</span>
<a name="l00037"></a>00037 <span class="preprocessor"></span>
<a name="l00038"></a>00038 <span class="keyword">extern</span> <span class="keyword">const</span> <span class="keywordtype">char</span> * <a class="code" href="JSONUtils_8h.htm#a6c460e5622952adca04b1c452ede44ec">STANDARD_JSON_SUCCESS</a>;
<a name="l00039"></a>00039 
<a name="l00045"></a>00045 <span class="comment">// Build a standard reply as a const char * string consistently</span>
<a name="l00046"></a><a class="code" href="JSONUtils_8h.htm#a6c460e5622952adca04b1c452ede44ec">00046</a> <span class="preprocessor">#define STANDARD_JSON_SUCCESS                                           &quot;{\&quot;returnValue\&quot;:true}&quot;</span>
<a name="l00047"></a><a class="code" href="JSONUtils_8h.htm#ab404a45d0e488456ffd451655f7a8146">00047</a> <span class="preprocessor"></span><span class="preprocessor">#define STANDARD_JSON_ERROR(errorCode, errorText)       &quot;{\&quot;returnValue\&quot;:false,\&quot;errorCode\&quot;:&quot;STR(errorCode)&quot;,\&quot;errorText\&quot;:\&quot;&quot; errorText &quot;\&quot;}&quot;</span>
<a name="l00048"></a><a class="code" href="JSONUtils_8h.htm#af04e35ac5fc4aafb01c824f8aaedd94f">00048</a> <span class="preprocessor"></span><span class="preprocessor">#define MISSING_PARAMETER_ERROR(name, type)                     &quot;{\&quot;returnValue\&quot;:false,\&quot;errorCode\&quot;:2,\&quot;errorText\&quot;:\&quot;Missing &#39;&quot; STR(name) &quot;&#39; &quot; STR(type) &quot; parameter.\&quot;}&quot;</span>
<a name="l00049"></a><a class="code" href="JSONUtils_8h.htm#a4427e034331df0dc99f901721d9c701d">00049</a> <span class="preprocessor"></span><span class="preprocessor">#define INVALID_PARAMETER_ERROR(name, type)                     &quot;{\&quot;returnValue\&quot;:false,\&quot;errorCode\&quot;:3,\&quot;errorText\&quot;:\&quot;Invalid &#39;&quot; STR(name) &quot;&#39; &quot; STR(type) &quot; parameter value.\&quot;}&quot;</span>
<a name="l00050"></a>00050 <span class="preprocessor"></span>
<a name="l00051"></a>00051 <span class="comment">// Test the name of a json parameter to determine if it&#39;s a system parameter that we should ignore. Pass a (char *)</span>
<a name="l00052"></a><a class="code" href="JSONUtils_8h.htm#a3b7fff2e4f52ba12433a0a1ab1270a6d">00052</a> <span class="preprocessor">#define IS_SYSTEM_PARAMETER(x)  ((x) &amp;&amp; *(x) == &#39;$&#39;)</span>
<a name="l00053"></a><a class="code" href="JSONUtils_8h.htm#aab14490c72ffed21923d009888935616">00053</a> <span class="preprocessor"></span><span class="preprocessor">#define SYSTEM_PARAMETERS &quot;\&quot;$activity\&quot;:{\&quot;type\&quot;:\&quot;object\&quot;,\&quot;optional\&quot;:true}&quot;</span>
<a name="l00054"></a>00054 <span class="preprocessor"></span>
<a name="l00055"></a>00055 <span class="comment">// Build a schema as a const char * string without any execution overhead</span>
<a name="l00056"></a><a class="code" href="JSONUtils_8h.htm#a9062eff57280b1a3ddccc33c94138dfe">00056</a> <span class="preprocessor">#define SCHEMA_ANY                              &quot;{}&quot;</span>
<a name="l00057"></a><a class="code" href="JSONUtils_8h.htm#afba276d4bb5da46333b6b28b5729a3b5">00057</a> <span class="preprocessor"></span><span class="preprocessor">#define SCHEMA_0                                &quot;{\&quot;type\&quot;:\&quot;object\&quot;,\&quot;properties\&quot;:{&quot; SYSTEM_PARAMETERS &quot;},\&quot;additionalProperties\&quot;:false}&quot; // Rejects any parameter. Only valid message is &quot;{}&quot;</span>
<a name="l00058"></a><a class="code" href="JSONUtils_8h.htm#ae3198e0e511a7313ee6d9f4767544946">00058</a> <span class="preprocessor"></span><span class="preprocessor">#define SCHEMA_1(param)                         &quot;{\&quot;type\&quot;:\&quot;object\&quot;,\&quot;properties\&quot;:{&quot; param &quot;,&quot; SYSTEM_PARAMETERS &quot;},\&quot;additionalProperties\&quot;:false}&quot; // Ex: SCHEMA_1(REQUIRED(age,integer))</span>
<a name="l00059"></a><a class="code" href="JSONUtils_8h.htm#a09aab1030e7a40acbdecd807666fa936">00059</a> <span class="preprocessor"></span><span class="preprocessor">#define SCHEMA_2(p1, p2)                        &quot;{\&quot;type\&quot;:\&quot;object\&quot;,\&quot;properties\&quot;:{&quot; p1 &quot;,&quot; p2 &quot;,&quot; SYSTEM_PARAMETERS &quot;},\&quot;additionalProperties\&quot;:false}&quot; // Ex: SCHEMA_2(REQUIRED(age,integer),OPTIONAL(nickname,string)</span>
<a name="l00060"></a><a class="code" href="JSONUtils_8h.htm#a9c1ca68a3d86a7be4290af50222f4dbb">00060</a> <span class="preprocessor"></span><span class="preprocessor">#define SCHEMA_3(p1, p2, p3)                    &quot;{\&quot;type\&quot;:\&quot;object\&quot;,\&quot;properties\&quot;:{&quot; p1 &quot;,&quot; p2 &quot;,&quot; p3 &quot;,&quot; SYSTEM_PARAMETERS &quot;},\&quot;additionalProperties\&quot;:false}&quot;</span>
<a name="l00061"></a><a class="code" href="JSONUtils_8h.htm#ad1ba3eaac53941b7f5a5588954db73d0">00061</a> <span class="preprocessor"></span><span class="preprocessor">#define SCHEMA_4(p1, p2, p3, p4)                &quot;{\&quot;type\&quot;:\&quot;object\&quot;,\&quot;properties\&quot;:{&quot; p1 &quot;,&quot; p2 &quot;,&quot; p3 &quot;,&quot; p4 &quot;,&quot; SYSTEM_PARAMETERS &quot;},\&quot;additionalProperties\&quot;:false}&quot;</span>
<a name="l00062"></a><a class="code" href="JSONUtils_8h.htm#a5b3aa8eeefc20ed07c2717b3f5dd78cb">00062</a> <span class="preprocessor"></span><span class="preprocessor">#define SCHEMA_5(p1, p2, p3, p4, p5)            &quot;{\&quot;type\&quot;:\&quot;object\&quot;,\&quot;properties\&quot;:{&quot; p1 &quot;,&quot; p2 &quot;,&quot; p3 &quot;,&quot; p4 &quot;,&quot; p5 &quot;,&quot; SYSTEM_PARAMETERS &quot;},\&quot;additionalProperties\&quot;:false}&quot;</span>
<a name="l00063"></a><a class="code" href="JSONUtils_8h.htm#aac2566bbbc9b8c66ca1b1ebbff755743">00063</a> <span class="preprocessor"></span><span class="preprocessor">#define SCHEMA_6(p1, p2, p3, p4, p5, p6)        &quot;{\&quot;type\&quot;:\&quot;object\&quot;,\&quot;properties\&quot;:{&quot; p1 &quot;,&quot; p2 &quot;,&quot; p3 &quot;,&quot; p4 &quot;,&quot; p5 &quot;,&quot; p6 &quot;,&quot; SYSTEM_PARAMETERS &quot;},\&quot;additionalProperties\&quot;:false}&quot;</span>
<a name="l00064"></a><a class="code" href="JSONUtils_8h.htm#a0f7b686a0c02d5777d9e3c4b69c1a063">00064</a> <span class="preprocessor"></span><span class="preprocessor">#define SCHEMA_7(p1, p2, p3, p4, p5, p6, p7)    &quot;{\&quot;type\&quot;:\&quot;object\&quot;,\&quot;properties\&quot;:{&quot; p1 &quot;,&quot; p2 &quot;,&quot; p3 &quot;,&quot; p4 &quot;,&quot; p5 &quot;,&quot; p6 &quot;,&quot; p7 &quot;,&quot; SYSTEM_PARAMETERS &quot;},\&quot;additionalProperties\&quot;:false}&quot;</span>
<a name="l00065"></a><a class="code" href="JSONUtils_8h.htm#ae75b9f48ef27464b17aaf4178ee06640">00065</a> <span class="preprocessor"></span><span class="preprocessor">#define SCHEMA_8(p1, p2, p3, p4, p5, p6, p7, p8)&quot;{\&quot;type\&quot;:\&quot;object\&quot;,\&quot;properties\&quot;:{&quot; p1 &quot;,&quot; p2 &quot;,&quot; p3 &quot;,&quot; p4 &quot;,&quot; p5 &quot;,&quot; p6 &quot;,&quot; p7 &quot;,&quot; p8 &quot;,&quot; SYSTEM_PARAMETERS &quot;},\&quot;additionalProperties\&quot;:false}&quot;</span>
<a name="l00066"></a>00066 <span class="preprocessor"></span>
<a name="l00067"></a>00067 
<a name="l00068"></a>00068 <span class="comment">// Macros to use in place of the parameters in the SCHEMA_xxx macros above</span>
<a name="l00069"></a><a class="code" href="JSONUtils_8h.htm#ac9a88686bde67ac4853cf2dc8eed2466">00069</a> <span class="preprocessor">#define REQUIRED(name, type) &quot;\&quot;&quot; #name &quot;\&quot;:{\&quot;type\&quot;:\&quot;&quot; #type &quot;\&quot;}&quot;</span>
<a name="l00070"></a><a class="code" href="JSONUtils_8h.htm#a1b5e51d0278b2045e7c55af152d0d6a5">00070</a> <span class="preprocessor"></span><span class="preprocessor">#define OPTIONAL(name, type) &quot;\&quot;&quot; #name &quot;\&quot;:{\&quot;type\&quot;:\&quot;&quot; #type &quot;\&quot;,\&quot;optional\&quot;:true}&quot;</span>
<a name="l00071"></a>00071 <span class="preprocessor"></span>
<a name="l00072"></a>00072 <span class="comment">// Build a Union Schema</span>
<a name="l00073"></a><a class="code" href="JSONUtils_8h.htm#a6fc215ba2ceebbd895a2ed35218d6cd8">00073</a> <span class="preprocessor">#define REQUIRED_UNION_2(name, type1, type2) &quot;\&quot;&quot; #name &quot;\&quot;:{\&quot;type\&quot;:[{\&quot;type\&quot;:\&quot;&quot; #type1 &quot;\&quot;},{\&quot;type\&quot;:\&quot;&quot; #type2 &quot;\&quot;}]}&quot;</span>
<a name="l00074"></a>00074 <span class="preprocessor"></span>
<a name="l00075"></a>00075 <span class="comment">// Build an Object Schema as a const char * string</span>
<a name="l00076"></a><a class="code" href="JSONUtils_8h.htm#a5173ecad4ecb3cc3dea34d256de3b72b">00076</a> <span class="preprocessor">#define NAKED_OBJECT_EMPTY(objName)                                          &quot;\&quot;&quot; #objName &quot;\&quot;:{\&quot;type\&quot;:\&quot;object\&quot;,\&quot;properties\&quot;:{&quot; SYSTEM_PARAMETERS &quot;},\&quot;additionalProperties\&quot;:false}&quot;</span>
<a name="l00077"></a><a class="code" href="JSONUtils_8h.htm#a695d2c5ad913ce636152554ecea8932c">00077</a> <span class="preprocessor"></span><span class="preprocessor">#define OBJECT_EMPTY(objName)                                               &quot;{\&quot;&quot; #objName &quot;\&quot;:{\&quot;type\&quot;:\&quot;object\&quot;,\&quot;properties\&quot;:{&quot; SYSTEM_PARAMETERS &quot;},\&quot;additionalProperties\&quot;:false}}&quot;</span>
<a name="l00078"></a>00078 <span class="preprocessor"></span>
<a name="l00079"></a><a class="code" href="JSONUtils_8h.htm#a7badba201cf68d094af825c4dab53809">00079</a> <span class="preprocessor">#define NAKED_OBJECT_REQUIRED_1(objName, p1, type1)                          &quot;\&quot;&quot; #objName &quot;\&quot;:{\&quot;type\&quot;:\&quot;object\&quot;,\&quot;properties\&quot;:{&quot; REQUIRED(p1, type1) &quot;,&quot; SYSTEM_PARAMETERS &quot;},\&quot;additionalProperties\&quot;:false}&quot;</span>
<a name="l00080"></a><a class="code" href="JSONUtils_8h.htm#ac85f3bea48278e9e61918932eddf3eb2">00080</a> <span class="preprocessor"></span><span class="preprocessor">#define OBJECT_REQUIRED_1(objName, p1, type1)                               &quot;{\&quot;&quot; #objName &quot;\&quot;:{\&quot;type\&quot;:\&quot;object\&quot;,\&quot;properties\&quot;:{&quot; REQUIRED(p1, type1) &quot;,&quot; SYSTEM_PARAMETERS &quot;},\&quot;additionalProperties\&quot;:false}}&quot;</span>
<a name="l00081"></a>00081 <span class="preprocessor"></span>
<a name="l00082"></a><a class="code" href="JSONUtils_8h.htm#aa0545f9f6ecfee147faaed6ebb4dbde4">00082</a> <span class="preprocessor">#define NAKED_OBJECT_OPTIONAL_1(objName, p1, type1)                          &quot;\&quot;&quot; #objName &quot;\&quot;:{\&quot;type\&quot;:\&quot;object\&quot;,\&quot;properties\&quot;:{&quot; OPTIONAL(p1, type1) &quot;,&quot; SYSTEM_PARAMETERS &quot;},\&quot;additionalProperties\&quot;:false}&quot;</span>
<a name="l00083"></a><a class="code" href="JSONUtils_8h.htm#aa57b0470a552e5b167c83f519fc0f9a9">00083</a> <span class="preprocessor"></span><span class="preprocessor">#define OBJECT_OPTIONAL_1(objName, p1, type1)                               &quot;{\&quot;&quot; #objName &quot;\&quot;:{\&quot;type\&quot;:\&quot;object\&quot;,\&quot;properties\&quot;:{&quot; OPTIONAL(p1, type1) &quot;,&quot; SYSTEM_PARAMETERS &quot;},\&quot;additionalProperties\&quot;:false}}&quot;</span>
<a name="l00084"></a>00084 <span class="preprocessor"></span>
<a name="l00085"></a><a class="code" href="JSONUtils_8h.htm#ac8ae2e0b20cdfd9f85208396bfa99fe0">00085</a> <span class="preprocessor">#define NAKED_OBJECT_REQUIRED_2(objName, p1, type1, p2, type2)               &quot;\&quot;&quot; #objName &quot;\&quot;:{\&quot;type\&quot;:\&quot;object\&quot;,\&quot;properties\&quot;:{&quot; REQUIRED(p1, type1) &quot;,&quot; REQUIRED(p2, type2) &quot;,&quot; SYSTEM_PARAMETERS &quot;},\&quot;additionalProperties\&quot;:false}&quot;</span>
<a name="l00086"></a><a class="code" href="JSONUtils_8h.htm#af90660595fb6e8fe98daf7a76e77f503">00086</a> <span class="preprocessor"></span><span class="preprocessor">#define OBJECT_REQUIRED_2(objName, p1, type1, p2, type2)                    &quot;{\&quot;&quot; #objName &quot;\&quot;:{\&quot;type\&quot;:\&quot;object\&quot;,\&quot;properties\&quot;:{&quot; REQUIRED(p1, type1) &quot;,&quot; REQUIRED(p2, type2) &quot;,&quot; SYSTEM_PARAMETERS &quot;},\&quot;additionalProperties\&quot;:false}}&quot;</span>
<a name="l00087"></a>00087 <span class="preprocessor"></span>
<a name="l00088"></a><a class="code" href="JSONUtils_8h.htm#afb6f4cd262a83a62e1dc01409de97b69">00088</a> <span class="preprocessor">#define NAKED_OBJECT_OPTIONAL_2(objName, p1, type1, p2, type2)               &quot;\&quot;&quot; #objName &quot;\&quot;:{\&quot;type\&quot;:\&quot;object\&quot;,\&quot;properties\&quot;:{&quot; OPTIONAL(p1, type1) &quot;,&quot; OPTIONAL(p2, type2) &quot;,&quot; SYSTEM_PARAMETERS &quot;},\&quot;additionalProperties\&quot;:false}&quot;</span>
<a name="l00089"></a><a class="code" href="JSONUtils_8h.htm#abf34d971fe5cf0d3b0eeca8dbf29cabe">00089</a> <span class="preprocessor"></span><span class="preprocessor">#define OBJECT_OPTIONAL_2(objName, p1, type1, p2, type2)                    &quot;{\&quot;&quot; #objName &quot;\&quot;:{\&quot;type\&quot;:\&quot;object\&quot;,\&quot;properties\&quot;:{&quot; OPTIONAL(p1, type1) &quot;,&quot; OPTIONAL(p2, type2) &quot;,&quot; SYSTEM_PARAMETERS &quot;},\&quot;additionalProperties\&quot;:false}}&quot;</span>
<a name="l00090"></a>00090 <span class="preprocessor"></span>
<a name="l00091"></a><a class="code" href="JSONUtils_8h.htm#a6c924c32ba0636f72d8ad766ce235399">00091</a> <span class="preprocessor">#define NAKED_OBJECT_REQUIRED_3(objName, p1, type1, p2, type2, p3, type3)    &quot;\&quot;&quot; #objName &quot;\&quot;:{\&quot;type\&quot;:\&quot;object\&quot;,\&quot;properties\&quot;:{&quot; REQUIRED(p1, type1) &quot;,&quot; REQUIRED(p2, type2) &quot;,&quot; REQUIRED(p3, type3) &quot;,&quot; SYSTEM_PARAMETERS &quot;},\&quot;additionalProperties\&quot;:false}&quot;</span>
<a name="l00092"></a><a class="code" href="JSONUtils_8h.htm#ab2c4e18f2548a7b3ab65716cecf57411">00092</a> <span class="preprocessor"></span><span class="preprocessor">#define OBJECT_REQUIRED_3(objName, p1, type1, p2, type2, p3, type3)         &quot;{\&quot;&quot; #objName &quot;\&quot;:{\&quot;type\&quot;:\&quot;object\&quot;,\&quot;properties\&quot;:{&quot; REQUIRED(p1, type1) &quot;,&quot; REQUIRED(p2, type2) &quot;,&quot; REQUIRED(p3, type3) &quot;,&quot; SYSTEM_PARAMETERS &quot;},\&quot;additionalProperties\&quot;:false}}&quot;</span>
<a name="l00093"></a>00093 <span class="preprocessor"></span>
<a name="l00094"></a><a class="code" href="JSONUtils_8h.htm#a99d915979fa99a6003c44ea66f124f34">00094</a> <span class="preprocessor">#define NAKED_OBJECT_OPTIONAL_3(objName, p1, type1, p2, type2, p3, type3)    &quot;\&quot;&quot; #objName &quot;\&quot;:{\&quot;type\&quot;:\&quot;object\&quot;,\&quot;properties\&quot;:{&quot; OPTIONAL(p1, type1) &quot;,&quot; OPTIONAL(p2, type2) &quot;,&quot; OPTIONAL(p3, type3) &quot;,&quot; SYSTEM_PARAMETERS &quot;},\&quot;additionalProperties\&quot;:false}&quot;</span>
<a name="l00095"></a><a class="code" href="JSONUtils_8h.htm#a05887a0d4e5daff5d990f6288de7bb6e">00095</a> <span class="preprocessor"></span><span class="preprocessor">#define OBJECT_OPTIONAL_3(objName, p1, type1, p2, type2, p3, type3)         &quot;{\&quot;&quot; #objName &quot;\&quot;:{\&quot;type\&quot;:\&quot;object\&quot;,\&quot;properties\&quot;:{&quot; OPTIONAL(p1, type1) &quot;,&quot; OPTIONAL(p2, type2) &quot;,&quot; OPTIONAL(p3, type3) &quot;,&quot; SYSTEM_PARAMETERS &quot;},\&quot;additionalProperties\&quot;:false}}&quot;</span>
<a name="l00096"></a>00096 <span class="preprocessor"></span>
<a name="l00097"></a>00097 <span class="comment">// Deprecated Macro comments</span>
<a name="l00098"></a><a class="code" href="JSONUtils_8h.htm#a7022b1ee592cae5c8fda21dcdbab66c5">00098</a> <span class="preprocessor">#define DEPRECATED_SERVICE_MSG() g_critical(&quot;THIS METHOD IS DEPRECATED. PLEASE REVISIT THE CODE.&quot;)</span>
<a name="l00099"></a>00099 <span class="preprocessor"></span>
<a name="l00100"></a><a class="code" href="classJsonValue.htm">00100</a> <span class="keyword">class </span><a class="code" href="classJsonValue.htm">JsonValue</a>
<a name="l00101"></a>00101 {
<a name="l00102"></a>00102 <span class="keyword">public</span>:
<a name="l00103"></a><a class="code" href="classJsonValue.htm#a103648097f53e1784c7beb6d68eac224">00103</a>         <a class="code" href="classJsonValue.htm#a103648097f53e1784c7beb6d68eac224">JsonValue</a>(<span class="keyword">const</span> pbnjson::JValue &amp; value) : mValue(value) {}
<a name="l00104"></a>00104 
<a name="l00105"></a><a class="code" href="classJsonValue.htm#aa8e912547e6752be6f9c5c95d8f9f6e9">00105</a>         pbnjson::JValue &amp;               <span class="keyword">get</span>()                                                                           { <span class="keywordflow">return</span> mValue; }
<a name="l00106"></a>00106 
<a name="l00107"></a><a class="code" href="classJsonValue.htm#a8df01e2c2b04ed035a7e89ffa51032ee">00107</a>         <span class="keywordtype">bool</span>                                    <span class="keyword">get</span>(<span class="keyword">const</span> <span class="keywordtype">char</span> * name, std::string &amp; str)       { <span class="keywordflow">return</span> mValue[name].asString(str) == CONV_OK; }
<a name="l00108"></a><a class="code" href="classJsonValue.htm#af34bfad99671cffc11ddd44cb4485ef7">00108</a>         <span class="keywordtype">bool</span>                                    <span class="keyword">get</span>(<span class="keyword">const</span> <span class="keywordtype">char</span> * name, <span class="keywordtype">bool</span> &amp; boolean)          { <span class="keywordflow">return</span> mValue[name].asBool(<span class="keywordtype">boolean</span>) == CONV_OK; }
<a name="l00109"></a><a class="code" href="classJsonValue.htm#a1f52466e4cbf89fcb1cf959f8f3aba0a">00109</a>         <span class="keyword">template</span> &lt;<span class="keyword">class</span> T&gt; <span class="keywordtype">bool</span> <span class="keyword">get</span>(<span class="keyword">const</span> <span class="keywordtype">char</span> * name, T &amp; number)                      { <span class="keywordflow">return</span> mValue[name].asNumber&lt;T&gt;(number) == CONV_OK; }
<a name="l00110"></a><a class="code" href="classJsonValue.htm#a2c832c7ba7bd662db17c9548fd33fe53">00110</a>         pbnjson::JValue                 <span class="keyword">get</span>(<span class="keyword">const</span> <span class="keywordtype">char</span> * name)                                          { <span class="keywordflow">return</span> mValue[name]; }
<a name="l00111"></a>00111 
<a name="l00112"></a>00112 <span class="keyword">private</span>:
<a name="l00113"></a>00113         pbnjson::JValue mValue;
<a name="l00114"></a>00114 };
<a name="l00115"></a>00115 
<a name="l00116"></a>00116 <span class="comment">/*</span>
<a name="l00117"></a>00117 <span class="comment"> * Helper class to parse a json message using a schema (if specified)</span>
<a name="l00118"></a>00118 <span class="comment"> */</span>
<a name="l00119"></a><a class="code" href="classJsonMessageParser.htm">00119</a> <span class="keyword">class </span><a class="code" href="classJsonMessageParser.htm">JsonMessageParser</a>
<a name="l00120"></a>00120 {
<a name="l00121"></a>00121 <span class="keyword">public</span>:
<a name="l00122"></a><a class="code" href="classJsonMessageParser.htm#a7110021d9e1ee5b4fcacf67f6cd1832e">00122</a>         <a class="code" href="classJsonMessageParser.htm#a7110021d9e1ee5b4fcacf67f6cd1832e">JsonMessageParser</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> * json, <span class="keyword">const</span> <span class="keywordtype">char</span> * schema) : mJson(json), mSchema(schema) {}
<a name="l00123"></a>00123 
<a name="l00124"></a>00124         <span class="keywordtype">bool</span>                                    <a class="code" href="classJsonMessageParser.htm#afe2d83c1fa1a5ab1eb09021ab0c2dcff">parse</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> * callerFunction);
<a name="l00125"></a><a class="code" href="classJsonMessageParser.htm#af0618920e70bd86c333ec8254f83a0c8">00125</a>         pbnjson::JValue                 <span class="keyword">get</span>()                                                                           { <span class="keywordflow">return</span> mParser.getDom(); }
<a name="l00126"></a>00126 
<a name="l00127"></a>00127         <span class="comment">// convenience functions to get a parameter directly.</span>
<a name="l00128"></a><a class="code" href="classJsonMessageParser.htm#ad4de7e3537f9fb3d72abd0946749030e">00128</a>         <span class="keywordtype">bool</span>                                    <span class="keyword">get</span>(<span class="keyword">const</span> <span class="keywordtype">char</span> * name, std::string &amp; str)       { <span class="keywordflow">return</span> <span class="keyword">get</span>()[name].asString(str) == CONV_OK; }
<a name="l00129"></a><a class="code" href="classJsonMessageParser.htm#a49234d16e8708d5d3fd368f1a45f256d">00129</a>         <span class="keywordtype">bool</span>                                    <span class="keyword">get</span>(<span class="keyword">const</span> <span class="keywordtype">char</span> * name, <span class="keywordtype">bool</span> &amp; boolean)          { <span class="keywordflow">return</span> <span class="keyword">get</span>()[name].asBool(<span class="keywordtype">boolean</span>) == CONV_OK; }
<a name="l00130"></a><a class="code" href="classJsonMessageParser.htm#a451830816ad0fa84c9905154da774f6a">00130</a>         <span class="keyword">template</span> &lt;<span class="keyword">class</span> T&gt; <span class="keywordtype">bool</span> <span class="keyword">get</span>(<span class="keyword">const</span> <span class="keywordtype">char</span> * name, T &amp; number)                      { <span class="keywordflow">return</span> <span class="keyword">get</span>()[name].asNumber&lt;T&gt;(number) == CONV_OK; }
<a name="l00131"></a><a class="code" href="classJsonMessageParser.htm#a0fcfc23df30564e9a5fbed8724772cad">00131</a>         pbnjson::JValue                 <span class="keyword">get</span>(<span class="keyword">const</span> <span class="keywordtype">char</span> * name)                                          { <span class="keywordflow">return</span> <span class="keyword">get</span>()[name]; }
<a name="l00132"></a>00132 
<a name="l00133"></a>00133 <span class="keyword">private</span>:
<a name="l00134"></a>00134         <span class="keyword">const</span> <span class="keywordtype">char</span> *                            mJson;
<a name="l00135"></a>00135         pbnjson::JSchemaFragment        mSchema;
<a name="l00136"></a>00136         pbnjson::JDomParser                     mParser;
<a name="l00137"></a>00137 };
<a name="l00138"></a>00138 
<a name="l00139"></a>00139 
<a name="l00143"></a><a class="code" href="JSONUtils_8h.htm#a772387f16a971dd87a68dc5cd2b6e5bb">00143</a> <span class="keyword">enum</span> <a class="code" href="JSONUtils_8h.htm#a772387f16a971dd87a68dc5cd2b6e5bb">ESchemaErrorOptions</a>
<a name="l00144"></a>00144 {
<a name="l00145"></a><a class="code" href="JSONUtils_8h.htm#a772387f16a971dd87a68dc5cd2b6e5bbaafdf0a49a3ba04a39258177861e8f8d5">00145</a>     <a class="code" href="JSONUtils_8h.htm#a772387f16a971dd87a68dc5cd2b6e5bbaafdf0a49a3ba04a39258177861e8f8d5">EIgnore</a> = 0,            
<a name="l00146"></a><a class="code" href="JSONUtils_8h.htm#a772387f16a971dd87a68dc5cd2b6e5bba7d1a78385d87439790e5bd8f30257ca3">00146</a>     <a class="code" href="JSONUtils_8h.htm#a772387f16a971dd87a68dc5cd2b6e5bba7d1a78385d87439790e5bd8f30257ca3">EValidateAndContinue</a>,   
<a name="l00147"></a><a class="code" href="JSONUtils_8h.htm#a772387f16a971dd87a68dc5cd2b6e5bba2c117cdcc6f1316f3b5dba1371421b5d">00147</a>     <a class="code" href="JSONUtils_8h.htm#a772387f16a971dd87a68dc5cd2b6e5bba2c117cdcc6f1316f3b5dba1371421b5d">EValidateAndError</a>,      
<a name="l00148"></a><a class="code" href="JSONUtils_8h.htm#a772387f16a971dd87a68dc5cd2b6e5bba4f62a418435b63050a93c8560e086615">00148</a>     <a class="code" href="JSONUtils_8h.htm#a772387f16a971dd87a68dc5cd2b6e5bba4f62a418435b63050a93c8560e086615">EDefault</a>                
<a name="l00149"></a>00149 };
<a name="l00150"></a>00150 
<a name="l00151"></a>00151 <span class="comment">/*</span>
<a name="l00152"></a>00152 <span class="comment"> * Small wrapper around LSError. User is responsible for calling Print or Free after the error has been set.</span>
<a name="l00153"></a>00153 <span class="comment"> */</span>
<a name="l00154"></a><a class="code" href="structCLSError.htm">00154</a> <span class="keyword">struct </span><a class="code" href="structCLSError.htm">CLSError</a> : <span class="keyword">public</span> <a class="code" href="classLSError.htm">LSError</a>
<a name="l00155"></a>00155 {
<a name="l00156"></a><a class="code" href="structCLSError.htm#acca9aa0e74f2796cf4318a80a28a7dfc">00156</a>     <a class="code" href="structCLSError.htm#acca9aa0e74f2796cf4318a80a28a7dfc">CLSError</a>()
<a name="l00157"></a>00157     {
<a name="l00158"></a>00158         LSErrorInit(<span class="keyword">this</span>);
<a name="l00159"></a>00159     }
<a name="l00160"></a>00160     <span class="keywordtype">void</span> <a class="code" href="structCLSError.htm#a83265840eb4d3af2e71a30445c50a573">Print</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> * where, <span class="keywordtype">int</span> line, GLogLevelFlags logLevel = G_LOG_LEVEL_WARNING);
<a name="l00161"></a><a class="code" href="structCLSError.htm#a865e2878f8286422e4c292d779d5d0d7">00161</a>     <span class="keywordtype">void</span> <a class="code" href="structCLSError.htm#a865e2878f8286422e4c292d779d5d0d7">Free</a>()
<a name="l00162"></a>00162     {
<a name="l00163"></a>00163         LSErrorFree(<span class="keyword">this</span>);
<a name="l00164"></a>00164     }
<a name="l00165"></a>00165 };
<a name="l00166"></a>00166 
<a name="l00167"></a>00167 <span class="comment">/*</span>
<a name="l00168"></a>00168 <span class="comment"> * Helper class to parse json messages coming from an LS service using pbnjson</span>
<a name="l00169"></a>00169 <span class="comment"> */</span>
<a name="l00170"></a><a class="code" href="classLSMessageJsonParser.htm">00170</a> <span class="keyword">class </span><a class="code" href="classLSMessageJsonParser.htm">LSMessageJsonParser</a>
<a name="l00171"></a>00171 {
<a name="l00172"></a>00172 <span class="keyword">public</span>:
<a name="l00173"></a>00173     <span class="comment">// Default using any specific schema. Will simply validate that the message is a valid json message.</span>
<a name="l00174"></a>00174     <a class="code" href="classLSMessageJsonParser.htm#add07d58ef777f939a6c85f740256e75d">LSMessageJsonParser</a>(LSMessage * message, <span class="keyword">const</span> <span class="keywordtype">char</span> * schema);
<a name="l00175"></a>00175 
<a name="l00183"></a>00183     <span class="keywordtype">bool</span>                    <a class="code" href="classLSMessageJsonParser.htm#ada324fa1b1caba5e6daf893e2848481f" title="Parse the message using the schema passed in constructor.">parse</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> * callerFunction, LSHandle * sender = 0, <a class="code" href="JSONUtils_8h.htm#a772387f16a971dd87a68dc5cd2b6e5bb">ESchemaErrorOptions</a> errOption = <a class="code" href="JSONUtils_8h.htm#a772387f16a971dd87a68dc5cd2b6e5bbaafdf0a49a3ba04a39258177861e8f8d5">EIgnore</a>);
<a name="l00184"></a>00184 
<a name="l00189"></a>00189     std::string <a class="code" href="classLSMessageJsonParser.htm#aba5d525ac4dfbd05673031030ba090b4" title="function parses the message and creates a string with category &amp; method appended to it...">getMsgCategoryMethod</a>();
<a name="l00190"></a>00190 
<a name="l00195"></a>00195     std::string <a class="code" href="classLSMessageJsonParser.htm#aa2ec5ec61b9db984d9c56a70fa727fc8" title="function retrieves the sender name from the message">getSender</a>();
<a name="l00196"></a>00196 
<a name="l00197"></a><a class="code" href="classLSMessageJsonParser.htm#adf37dd24fba41083df1ad2ec75740e73">00197</a>     pbnjson::JValue         <span class="keyword">get</span>() { <span class="keywordflow">return</span> mParser.getDom(); }
<a name="l00198"></a><a class="code" href="classLSMessageJsonParser.htm#a06e70bb04bf2fcced69bc45d76e0037d">00198</a>     <span class="keyword">const</span> <span class="keywordtype">char</span> *            <a class="code" href="classLSMessageJsonParser.htm#a06e70bb04bf2fcced69bc45d76e0037d">getPayload</a>()    { <span class="keywordflow">return</span> LSMessageGetPayload(mMessage); }
<a name="l00199"></a>00199 
<a name="l00200"></a>00200     <span class="comment">// convenience functions to get a parameter directly.</span>
<a name="l00201"></a><a class="code" href="classLSMessageJsonParser.htm#ab4bf2c1b5c8a911920fbb102a478e3c3">00201</a>     <span class="keywordtype">bool</span>                    <span class="keyword">get</span>(<span class="keyword">const</span> <span class="keywordtype">char</span> * name, std::string &amp; str)   { <span class="keywordflow">return</span> <span class="keyword">get</span>()[name].asString(str) == CONV_OK; }
<a name="l00202"></a><a class="code" href="classLSMessageJsonParser.htm#a8d05cce9b63a5f54a2a52897613a9a12">00202</a>     <span class="keywordtype">bool</span>                    <span class="keyword">get</span>(<span class="keyword">const</span> <span class="keywordtype">char</span> * name, <span class="keywordtype">bool</span> &amp; boolean)      { <span class="keywordflow">return</span> <span class="keyword">get</span>()[name].asBool(<span class="keywordtype">boolean</span>) == CONV_OK; }
<a name="l00203"></a><a class="code" href="classLSMessageJsonParser.htm#a132f50ec3c0c2fd0fc88ede385d20c80">00203</a>     <span class="keyword">template</span> &lt;<span class="keyword">class</span> T&gt; <span class="keywordtype">bool</span> <span class="keyword">get</span>(<span class="keyword">const</span> <span class="keywordtype">char</span> * name, T &amp; number)          { <span class="keywordflow">return</span> <span class="keyword">get</span>()[name].asNumber&lt;T&gt;(number) == CONV_OK; }
<a name="l00204"></a>00204 
<a name="l00205"></a>00205 <span class="keyword">private</span>:
<a name="l00206"></a>00206     LSMessage *                 mMessage;
<a name="l00207"></a>00207     <span class="keyword">const</span> <span class="keywordtype">char</span> *                mSchemaText;
<a name="l00208"></a>00208     pbnjson::JSchemaFragment    mSchema;
<a name="l00209"></a>00209     pbnjson::JDomParser         mParser;
<a name="l00210"></a>00210 };
<a name="l00211"></a>00211 
<a name="l00219"></a><a class="code" href="JSONUtils_8h.htm#a70492ed2f7cecd98bbf5571d01b48e34">00219</a> <span class="preprocessor">#define VALIDATE_SCHEMA_AND_RETURN_OPTION(lsHandle, message, schema, schErrOption) {\</span>
<a name="l00220"></a>00220 <span class="preprocessor">                                                                                        LSMessageJsonParser jsonParser(message, schema);                                                        \</span>
<a name="l00221"></a>00221 <span class="preprocessor">                                                                                                                                                                                                \</span>
<a name="l00222"></a>00222 <span class="preprocessor">                                                                                        if (EDefault == schErrOption)                                                                           \</span>
<a name="l00223"></a>00223 <span class="preprocessor">                                                                                            schErrOption = static_cast&lt;ESchemaErrorOptions&gt;(Settings::LunaSettings()-&gt;schemaValidationOption);  \</span>
<a name="l00224"></a>00224 <span class="preprocessor">                                                                                                                                                                                                \</span>
<a name="l00225"></a>00225 <span class="preprocessor">                                                                                        if (!jsonParser.parse(__FUNCTION__, lsHandle, schErrOption))                                            \</span>
<a name="l00226"></a>00226 <span class="preprocessor">                                                                                            return true;                                                                                        \</span>
<a name="l00227"></a>00227 <span class="preprocessor">                                                                                    }</span>
<a name="l00228"></a>00228 <span class="preprocessor"></span>
<a name="l00229"></a><a class="code" href="JSONUtils_8h.htm#a8e9e42d4f39337dd960acf0ba8afabfb">00229</a> <span class="preprocessor">#define VALIDATE_SCHEMA_AND_RETURN(lsHandle, message, schema)   {\</span>
<a name="l00230"></a>00230 <span class="preprocessor">                                                                    ESchemaErrorOptions schErrOption = EDefault;                                \</span>
<a name="l00231"></a>00231 <span class="preprocessor">                                                                    VALIDATE_SCHEMA_AND_RETURN_OPTION(lsHandle, message, schema, schErrOption); \</span>
<a name="l00232"></a>00232 <span class="preprocessor">                                                                 }</span>
<a name="l00233"></a>00233 <span class="preprocessor"></span>
<a name="l00237"></a><a class="code" href="JSONUtils_8h.htm#a4f57615a6f475072a42de539596f892f">00237</a> <span class="preprocessor">#define SUBSCRIBE_SCHEMA_RETURN(lsHandle, message)   VALIDATE_SCHEMA_AND_RETURN(lsHandle, message, SCHEMA_1(OPTIONAL(subscribe, boolean)))</span>
<a name="l00238"></a>00238 <span class="preprocessor"></span>
<a name="l00242"></a><a class="code" href="JSONUtils_8h.htm#afb415bde087d955231130ad8e70c646a">00242</a> <span class="preprocessor">#define EMPTY_SCHEMA_RETURN(lsHandle, message)    VALIDATE_SCHEMA_AND_RETURN(lsHandle, message, SCHEMA_ANY)</span>
<a name="l00243"></a>00243 <span class="preprocessor"></span>
<a name="l00244"></a>00244 <span class="comment">// build a standard reply returnValue &amp; errorCode/errorText if defined</span>
<a name="l00245"></a>00245 pbnjson::JValue <a class="code" href="JSONUtils_8cpp.htm#a1afc2b455587ecaea3f87c3455664eb2">createJsonReply</a>(<span class="keywordtype">bool</span> returnValue = <span class="keyword">true</span>, <span class="keywordtype">int</span> errorCode = 0, <span class="keyword">const</span> <span class="keywordtype">char</span> * errorText = 0);
<a name="l00246"></a>00246 
<a name="l00247"></a>00247 <span class="comment">// build a standard json reply string without the overhead of using json schema</span>
<a name="l00248"></a>00248 std::string <a class="code" href="JSONUtils_8cpp.htm#af549c060d3d3a360583945efa66f6270">createJsonReplyString</a>(<span class="keywordtype">bool</span> returnValue = <span class="keyword">true</span>, <span class="keywordtype">int</span> errorCode = 0, <span class="keyword">const</span> <span class="keywordtype">char</span> * errorText = 0);
<a name="l00249"></a>00249 
<a name="l00250"></a>00250 <span class="comment">// serialize a reply</span>
<a name="l00251"></a>00251 std::string <a class="code" href="JSONUtils_8cpp.htm#a73c5b260103af05f304ea35b90573aef">jsonToString</a>(pbnjson::JValue &amp; reply, <span class="keyword">const</span> <span class="keywordtype">char</span> * schema = <a class="code" href="JSONUtils_8h.htm#a9062eff57280b1a3ddccc33c94138dfe">SCHEMA_ANY</a>);
<a name="l00252"></a>00252 
<a name="l00253"></a>00253 <span class="preprocessor">#endif // JSONUTILS_H</span>
</pre></div></div><!-- contents -->
</div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Properties</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Defines</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="JSONUtils_8h.htm">JSONUtils.h</a>      </li>

    <li class="footer">Generated on Fri Oct 5 2012 19:52:25 for LunaSysMgr by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.6.1 </li>
   </ul>
 </div>


</body>
</html>
