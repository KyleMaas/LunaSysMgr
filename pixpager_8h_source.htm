<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>LunaSysMgr: pixpager.h Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>

</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">LunaSysMgr
   
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
      <li><a href="dirs.htm"><span>Directories</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.htm"><span>File&#160;List</span></a></li>
      <li><a href="globals.htm"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('pixpager_8h.htm','');
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">pixpager.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="pixpager_8h.htm">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/* @@@LICENSE</span>
<a name="l00002"></a>00002 <span class="comment">*</span>
<a name="l00003"></a>00003 <span class="comment">*      Copyright (c) 2010-2012 Hewlett-Packard Development Company, L.P.</span>
<a name="l00004"></a>00004 <span class="comment">*</span>
<a name="l00005"></a>00005 <span class="comment">* Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span>
<a name="l00006"></a>00006 <span class="comment">* you may not use this file except in compliance with the License.</span>
<a name="l00007"></a>00007 <span class="comment">* You may obtain a copy of the License at</span>
<a name="l00008"></a>00008 <span class="comment">*</span>
<a name="l00009"></a>00009 <span class="comment">* http://www.apache.org/licenses/LICENSE-2.0</span>
<a name="l00010"></a>00010 <span class="comment">*</span>
<a name="l00011"></a>00011 <span class="comment">* Unless required by applicable law or agreed to in writing, software</span>
<a name="l00012"></a>00012 <span class="comment">* distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span>
<a name="l00013"></a>00013 <span class="comment">* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span>
<a name="l00014"></a>00014 <span class="comment">* See the License for the specific language governing permissions and</span>
<a name="l00015"></a>00015 <span class="comment">* limitations under the License.</span>
<a name="l00016"></a>00016 <span class="comment">*</span>
<a name="l00017"></a>00017 <span class="comment">* LICENSE@@@ */</span>
<a name="l00018"></a>00018 
<a name="l00019"></a>00019 
<a name="l00020"></a>00020 
<a name="l00021"></a>00021  <span class="comment">/*</span>
<a name="l00022"></a>00022 <span class="comment"> *      This is a simple implementation of what is known colloquially as a &quot;pixmap atlas&quot;</span>
<a name="l00023"></a>00023 <span class="comment"> *      It also manages something similar to the QPixmapCache, except it operates on PixmapObjects instead</span>
<a name="l00024"></a>00024 <span class="comment"> *      (see pixmapobject.h/cpp)</span>
<a name="l00025"></a>00025 <span class="comment"> *      The general idea is that these operate on two levels. Small pixmaps are aggregated into &quot;atlas&quot; pages</span>
<a name="l00026"></a>00026 <span class="comment"> *      so that they can be accessed faster. The atlas pages along with larger pixmaps that won&#39;t fit onto atlas pages</span>
<a name="l00027"></a>00027 <span class="comment"> *      are cached into a pixmap cache</span>
<a name="l00028"></a>00028 <span class="comment"> *</span>
<a name="l00029"></a>00029 <span class="comment"> *              a word on the atlas pages:</span>
<a name="l00030"></a>00030 <span class="comment"> *                      Atlases were written up by many others (Nvidia most prominently) as a way to contain small, tile or icon -type</span>
<a name="l00031"></a>00031 <span class="comment"> *                      pixmaps in a larger pixmap which could be held in (gpu) memory. This way, fragment shaders and textures don&#39;t need</span>
<a name="l00032"></a>00032 <span class="comment"> *                      to be swapped in and out of memory; One simply provides the coordinate in the big texture of the smaller texture</span>
<a name="l00033"></a>00033 <span class="comment"> *                      desired. This can be expressed very efficiently in the shader program as just a texture mapping matrix</span>
<a name="l00034"></a>00034 <span class="comment"> *</span>
<a name="l00035"></a>00035 <span class="comment"> *                      In this implementation, I&#39;ll use the same basic idea with a few tweaks. First, because my atlas is geared towards</span>
<a name="l00036"></a>00036 <span class="comment"> *                      basically just storing icons and things of that nature, and never larger items, it can have some constraints. Most</span>
<a name="l00037"></a>00037 <span class="comment"> *                      icons are either 16x16,32x32,48x48,64x64,128x128,or 256x256. These can then be partitioned into separate pages so that</span>
<a name="l00038"></a>00038 <span class="comment"> *                      the icons can be packed within w/ minimal waste of space. So e.g. one page is designated the &quot;32 page&quot; and only</span>
<a name="l00039"></a>00039 <span class="comment"> *                      holds 32x32 icons, and these can all be packed neatly into row-columns since they&#39;re the same, square size.</span>
<a name="l00040"></a>00040 <span class="comment"> *                      Each page that is an atlas page has a directory member that is a hash keyed on the individual icon&#39;s uid,</span>
<a name="l00041"></a>00041 <span class="comment"> *                      and holds a value that&#39;s a rectangle R and a size S. The R is the coordinate rect inside the pixmap of that page</span>
<a name="l00042"></a>00042 <span class="comment"> *                      (i.e. the whole atlas page with all the icons inside it) that describes where the icon actually is, and S is the</span>
<a name="l00043"></a>00043 <span class="comment"> *                      size of the *original* icon, before it was placed inside the atlas page. The reason for S is that under a certain</span>
<a name="l00044"></a>00044 <span class="comment"> *                      optimization scenario, an icon that is just slightly different in size from the size of the icons that a particular</span>
<a name="l00045"></a>00045 <span class="comment"> *                      atlas page supports, then the icon will be scaled up/down to match the size. When it is retrieved, this has to be</span>
<a name="l00046"></a>00046 <span class="comment"> *                      reversed, so the original size is needed. e.g. a 30x30 icon could be stored in a 32x32-designated page.</span>
<a name="l00047"></a>00047 <span class="comment"> *                      If the scaling factor is small (especially if it&#39;s a scale-up), then the negative visual effects will be minimal</span>
<a name="l00048"></a>00048 <span class="comment"> *</span>
<a name="l00049"></a>00049 <span class="comment"> *              NOT THREAD SAFE! among other things, the most blatant problem is that getPixmap()&#39;s returned QPixmap must remain</span>
<a name="l00050"></a>00050 <span class="comment"> *              valid throughout the function that made the call. This will not be guaranteed with multiple threads, as a cache purge</span>
<a name="l00051"></a>00051 <span class="comment"> *              triggered by another thread could wipe out that QPixmap</span>
<a name="l00052"></a>00052 <span class="comment"> */</span>
<a name="l00053"></a>00053 
<a name="l00054"></a>00054 <span class="preprocessor">#ifndef PIXPAGER_H_</span>
<a name="l00055"></a>00055 <span class="preprocessor"></span><span class="preprocessor">#define PIXPAGER_H_</span>
<a name="l00056"></a>00056 <span class="preprocessor"></span>
<a name="l00057"></a>00057 <span class="preprocessor">#include &lt;QObject&gt;</span>
<a name="l00058"></a>00058 <span class="preprocessor">#include &lt;QPointer&gt;</span>
<a name="l00059"></a>00059 <span class="preprocessor">#include &lt;QUuid&gt;</span>
<a name="l00060"></a>00060 <span class="preprocessor">#include &lt;QRect&gt;</span>
<a name="l00061"></a>00061 <span class="preprocessor">#include &quot;<a class="code" href="dimensionsglobal_8h.htm">dimensionsglobal.h</a>&quot;</span>
<a name="l00062"></a>00062 <span class="preprocessor">#include &lt;QHash&gt;</span>
<a name="l00063"></a>00063 <span class="preprocessor">#include &lt;QMap&gt;</span>
<a name="l00064"></a>00064 <span class="preprocessor">#include &lt;QPair&gt;</span>
<a name="l00065"></a>00065 <span class="preprocessor">#include &lt;QList&gt;</span>
<a name="l00066"></a>00066 
<a name="l00068"></a>00068 
<a name="l00069"></a>00069 <span class="keyword">class </span><a class="code" href="classPixPager.htm">PixPager</a>;
<a name="l00070"></a>00070 <span class="keyword">class </span><a class="code" href="classPixmapObject.htm">PixmapObject</a>;
<a name="l00071"></a>00071 <span class="keyword">class </span>QPixmap;
<a name="l00072"></a>00072 
<a name="l00073"></a>00073 <span class="comment">/*</span>
<a name="l00074"></a>00074 <span class="comment"> * PixPagerPage is not meant to be used externally; it&#39;s for PixPager use only</span>
<a name="l00075"></a>00075 <span class="comment"> *</span>
<a name="l00076"></a>00076 <span class="comment"> * PixPagerPage shouldn&#39;t do anything &#39;smart&#39; on its own. It&#39;s simply to contain data for</span>
<a name="l00077"></a>00077 <span class="comment"> * PixPager to manage, and to notify pixpager when stuff happens (like the pixmap deleted by someone else;</span>
<a name="l00078"></a>00078 <span class="comment"> * which should be kept to a minimum with proper pixpager usage)</span>
<a name="l00079"></a>00079 <span class="comment"> *</span>
<a name="l00080"></a>00080 <span class="comment"> */</span>
<a name="l00081"></a>00081 
<a name="l00082"></a><a class="code" href="classPixPagerPage.htm">00082</a> <span class="keyword">class </span><a class="code" href="classPixPagerPage.htm">PixPagerPage</a> : <span class="keyword">public</span> <a class="code" href="classQObject.htm">QObject</a>
<a name="l00083"></a>00083 {
<a name="l00084"></a>00084         Q_OBJECT
<a name="l00085"></a>00085 <span class="keyword">public</span>:
<a name="l00086"></a>00086 
<a name="l00087"></a><a class="code" href="classPixPagerPage_1_1PixmapRects.htm">00087</a>         <span class="keyword">class </span><a class="code" href="classPixPagerPage_1_1PixmapRects.htm">PixmapRects</a>
<a name="l00088"></a>00088         {
<a name="l00089"></a>00089         <span class="keyword">public</span>:
<a name="l00090"></a><a class="code" href="classPixPagerPage_1_1PixmapRects.htm#a199668ec73e437575e48f53483350623">00090</a>                 <a class="code" href="classPixPagerPage_1_1PixmapRects.htm#a199668ec73e437575e48f53483350623">PixmapRects</a>() {}
<a name="l00091"></a><a class="code" href="classPixPagerPage_1_1PixmapRects.htm#aa06bc7bbb0ecb70cc164624c7fa27243">00091</a>                 <a class="code" href="classPixPagerPage_1_1PixmapRects.htm#a199668ec73e437575e48f53483350623">PixmapRects</a>(<span class="keyword">const</span> QRect&amp; r,<span class="keyword">const</span> QSize&amp; s)
<a name="l00092"></a>00092                 : <a class="code" href="classPixPagerPage_1_1PixmapRects.htm#affb4ba9cf8eabef64775bdd0b19a31de">coordinateRect</a>(r) , <a class="code" href="classPixPagerPage_1_1PixmapRects.htm#a781a36977c327f2b8df512ca1634b1d6">originalSize</a>(s) {}
<a name="l00093"></a><a class="code" href="classPixPagerPage_1_1PixmapRects.htm#affb4ba9cf8eabef64775bdd0b19a31de">00093</a>                 QRect <a class="code" href="classPixPagerPage_1_1PixmapRects.htm#affb4ba9cf8eabef64775bdd0b19a31de">coordinateRect</a>;
<a name="l00094"></a><a class="code" href="classPixPagerPage_1_1PixmapRects.htm#a781a36977c327f2b8df512ca1634b1d6">00094</a>                 QSize <a class="code" href="classPixPagerPage_1_1PixmapRects.htm#a781a36977c327f2b8df512ca1634b1d6">originalSize</a>;             <span class="comment">//will be different than the size of the coordinateRect if the pixmap was</span>
<a name="l00095"></a>00095                                                                 <span class="comment">//scaled to fit into the atlas page (see explanation of atlas pages at the</span>
<a name="l00096"></a>00096                                                                 <span class="comment">//top of this file)</span>
<a name="l00097"></a>00097         };
<a name="l00098"></a>00098 
<a name="l00099"></a>00099         <a class="code" href="classPixPagerPage.htm#a4182ecc0680e68499d9bb9516d3c0d19">PixPagerPage</a>(<a class="code" href="classPixPager.htm">PixPager</a> * p_pager);
<a name="l00100"></a>00100         <span class="keyword">virtual</span> <a class="code" href="classPixPagerPage.htm#a49d17d031589a13b18b99cb6e0a1c1d6">~PixPagerPage</a>();
<a name="l00101"></a>00101 
<a name="l00102"></a><a class="code" href="classPixPagerPage.htm#afbd5695620d7758bcc0a4caa8722d2d6">00102</a>         QPointer&lt;PixPager&gt; <a class="code" href="classPixPagerPage.htm#afbd5695620d7758bcc0a4caa8722d2d6">m_pager</a>;
<a name="l00103"></a><a class="code" href="classPixPagerPage.htm#a58aa30610d40389b9f5fb58b2fa1b81e">00103</a>         QPointer&lt;PixmapObject&gt; <a class="code" href="classPixPagerPage.htm#a58aa30610d40389b9f5fb58b2fa1b81e">m_data</a>;
<a name="l00104"></a><a class="code" href="classPixPagerPage.htm#ad92f1ebb21b386f06e2ad7606f920b2d">00104</a>         <span class="keywordtype">bool</span>    <a class="code" href="classPixPagerPage.htm#ad92f1ebb21b386f06e2ad7606f920b2d">m_pinned</a>;
<a name="l00105"></a><a class="code" href="classPixPagerPage.htm#a521de56b082e9fe846fcc864c67017e7">00105</a>         quint32 <a class="code" href="classPixPagerPage.htm#a521de56b082e9fe846fcc864c67017e7">m_sizeInBytes</a>;
<a name="l00106"></a>00106 
<a name="l00107"></a><a class="code" href="classPixPagerPage.htm#a753b2631a7c2cbf3711fd90792dbee92">00107</a>         quint32 <a class="code" href="classPixPagerPage.htm#a753b2631a7c2cbf3711fd90792dbee92">m_accessCounter</a>;
<a name="l00108"></a><a class="code" href="classPixPagerPage.htm#ac59bb500e646dcdd08b2a55650b1140b">00108</a>         qreal <a class="code" href="classPixPagerPage.htm#ac59bb500e646dcdd08b2a55650b1140b">m_accessFrequency</a>;                                <span class="comment">//a proportion of accesses to this page vs the total of accesses for all pages</span>
<a name="l00109"></a>00109 
<a name="l00110"></a><a class="code" href="classPixPagerPage.htm#a12293b65eaab504ab5f032db5db10934">00110</a>         <span class="keywordtype">bool</span> <a class="code" href="classPixPagerPage.htm#a12293b65eaab504ab5f032db5db10934">m_initiatedDelete</a>;
<a name="l00111"></a>00111 
<a name="l00112"></a>00112 <span class="keyword">public</span> Q_SLOTS:
<a name="l00113"></a>00113 
<a name="l00114"></a>00114         <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classPixPagerPage.htm#ab3c8221999425a8581f51be2953c22a1">slotPixmapObjectDeleted</a>();
<a name="l00115"></a>00115 
<a name="l00116"></a>00116 };
<a name="l00117"></a>00117 
<a name="l00118"></a><a class="code" href="classPixPagerAtlasPage.htm">00118</a> <span class="keyword">class </span><a class="code" href="classPixPagerAtlasPage.htm">PixPagerAtlasPage</a> : <span class="keyword">public</span> <a class="code" href="classPixPagerPage.htm">PixPagerPage</a>
<a name="l00119"></a>00119 {
<a name="l00120"></a>00120         Q_OBJECT
<a name="l00121"></a>00121 <span class="keyword">public</span>:
<a name="l00122"></a>00122 
<a name="l00123"></a>00123         <a class="code" href="classPixPagerAtlasPage.htm#a8b006c713a984712ff7f440559aa51df">PixPagerAtlasPage</a>(<a class="code" href="classPixPager.htm">PixPager</a> * p_pager,quint32 sizeDesignation,QHash&lt;QUuid,PixmapRects&gt; * p_directory = 0);
<a name="l00124"></a>00124         <span class="keyword">virtual</span> <a class="code" href="classPixPagerAtlasPage.htm#a72c6ebd32ca952d7a8da7d9244012bbc">~PixPagerAtlasPage</a>();
<a name="l00125"></a>00125 
<a name="l00126"></a>00126         <span class="comment">//NOTE: the way to determine the occupancy (and thus free space) of this atlas page is:</span>
<a name="l00127"></a>00127         <span class="comment">// free cells = m_rows * m_columns - m_p_directory-&gt;size()</span>
<a name="l00128"></a><a class="code" href="classPixPagerAtlasPage.htm#a72ade6f27af4df83b126f6392c86f912">00128</a>         quint32 <a class="code" href="classPixPagerAtlasPage.htm#a72ade6f27af4df83b126f6392c86f912">freeSpace</a>()<span class="keyword"> const</span>
<a name="l00129"></a>00129 <span class="keyword">        </span>{
<a name="l00130"></a>00130                 <span class="keywordflow">return</span> (<a class="code" href="classPixPagerAtlasPage.htm#a66122dd98ca30cc020612c7c7ed1bf41">m_rows</a> * <a class="code" href="classPixPagerAtlasPage.htm#a7df0e49e37fba533d0ebbdbfc7651054">m_columns</a> - <a class="code" href="classPixPagerAtlasPage.htm#af5f461c90ad79ee71eb7185ecbb00191">m_directory</a>.size());
<a name="l00131"></a>00131         }
<a name="l00132"></a><a class="code" href="classPixPagerAtlasPage.htm#a167dc3d7106ad1d440b490241e82c7f3">00132</a>         qreal <a class="code" href="classPixPagerAtlasPage.htm#a167dc3d7106ad1d440b490241e82c7f3">occupancyRate</a>()<span class="keyword"> const</span>
<a name="l00133"></a>00133 <span class="keyword">        </span>{
<a name="l00134"></a>00134                 <span class="keywordflow">if</span> ((quint32)(<a class="code" href="classPixPagerAtlasPage.htm#af5f461c90ad79ee71eb7185ecbb00191">m_directory</a>.size()) == <a class="code" href="classPixPagerAtlasPage.htm#a66122dd98ca30cc020612c7c7ed1bf41">m_rows</a>*<a class="code" href="classPixPagerAtlasPage.htm#a7df0e49e37fba533d0ebbdbfc7651054">m_columns</a>)
<a name="l00135"></a>00135                         <span class="keywordflow">return</span> 1.0;             <span class="comment">//make sure that below doesn&#39;t return something dumb like 0.99999999....</span>
<a name="l00136"></a>00136                 <span class="keywordflow">return</span> (qreal)(<a class="code" href="classPixPagerAtlasPage.htm#af5f461c90ad79ee71eb7185ecbb00191">m_directory</a>.size())/(qreal)(<a class="code" href="classPixPagerAtlasPage.htm#a66122dd98ca30cc020612c7c7ed1bf41">m_rows</a>*<a class="code" href="classPixPagerAtlasPage.htm#a7df0e49e37fba533d0ebbdbfc7651054">m_columns</a>);
<a name="l00137"></a>00137         }
<a name="l00138"></a>00138 
<a name="l00139"></a><a class="code" href="classPixPagerAtlasPage.htm#aaf6a1f208444b2ce7b6bff8c760f1eb5">00139</a>         <span class="keywordtype">bool</span> <a class="code" href="classPixPagerAtlasPage.htm#aaf6a1f208444b2ce7b6bff8c760f1eb5">getFromFreelist</a>(QPair&lt;quint32,quint32&gt;&amp; r_location)
<a name="l00140"></a>00140         {
<a name="l00141"></a>00141                 <span class="keywordflow">if</span> (<a class="code" href="classPixPagerAtlasPage.htm#a4e12c20d19e88c395f81d4ffe6b726de">m_freeList</a>.empty())
<a name="l00142"></a>00142                         <span class="keywordflow">return</span> <span class="keyword">false</span>;
<a name="l00143"></a>00143                 r_location = <a class="code" href="classPixPagerAtlasPage.htm#a4e12c20d19e88c395f81d4ffe6b726de">m_freeList</a>.takeFirst();
<a name="l00144"></a>00144                 <span class="keywordflow">return</span> <span class="keyword">true</span>;
<a name="l00145"></a>00145         }
<a name="l00146"></a><a class="code" href="classPixPagerAtlasPage.htm#a2dd0a2d3a81d60339cc32d3d282fa4e2">00146</a>         <span class="keywordtype">bool</span> <a class="code" href="classPixPagerAtlasPage.htm#a2dd0a2d3a81d60339cc32d3d282fa4e2">unoccupiedLocation</a>(QPair&lt;quint32,quint32&gt;&amp; r_location)
<a name="l00147"></a>00147         {
<a name="l00148"></a>00148                 <span class="keywordflow">if</span> (<a class="code" href="classPixPagerAtlasPage.htm#a9488a7cda6a8a475641ada320ad36624">m_lastPositionAllocated</a> == <a class="code" href="classPixPagerAtlasPage.htm#a54140d9d5430f4fa41a503442ac00b9d">INVALID_LOCATION</a>)
<a name="l00149"></a>00149                         <span class="keywordflow">return</span> <a class="code" href="classPixPagerAtlasPage.htm#aaf6a1f208444b2ce7b6bff8c760f1eb5">getFromFreelist</a>(r_location);
<a name="l00150"></a>00150                 <span class="comment">//go sequentially</span>
<a name="l00151"></a>00151                 <span class="keywordflow">if</span> ((<a class="code" href="classPixPagerAtlasPage.htm#a9488a7cda6a8a475641ada320ad36624">m_lastPositionAllocated</a>.first == <a class="code" href="classPixPagerAtlasPage.htm#a7df0e49e37fba533d0ebbdbfc7651054">m_columns</a>-1) &amp;&amp; (<a class="code" href="classPixPagerAtlasPage.htm#a9488a7cda6a8a475641ada320ad36624">m_lastPositionAllocated</a>.second == <a class="code" href="classPixPagerAtlasPage.htm#a66122dd98ca30cc020612c7c7ed1bf41">m_rows</a>-1))
<a name="l00152"></a>00152                         <span class="keywordflow">return</span> <a class="code" href="classPixPagerAtlasPage.htm#aaf6a1f208444b2ce7b6bff8c760f1eb5">getFromFreelist</a>(r_location);
<a name="l00153"></a>00153                 <span class="keywordflow">else</span> <span class="keywordflow">if</span> (<a class="code" href="classPixPagerAtlasPage.htm#a9488a7cda6a8a475641ada320ad36624">m_lastPositionAllocated</a>.first == <a class="code" href="classPixPagerAtlasPage.htm#a7df0e49e37fba533d0ebbdbfc7651054">m_columns</a>-1)
<a name="l00154"></a>00154                 {
<a name="l00155"></a>00155                         <span class="comment">//next row, col=0</span>
<a name="l00156"></a>00156                         r_location = QPair&lt;quint32,quint32&gt;(0,<a class="code" href="classPixPagerAtlasPage.htm#a9488a7cda6a8a475641ada320ad36624">m_lastPositionAllocated</a>.second+1);
<a name="l00157"></a>00157                 }
<a name="l00158"></a>00158                 <span class="keywordflow">else</span>
<a name="l00159"></a>00159                 {
<a name="l00160"></a>00160                         <span class="comment">//next column, same row</span>
<a name="l00161"></a>00161                         r_location = QPair&lt;quint32,quint32&gt;(<a class="code" href="classPixPagerAtlasPage.htm#a9488a7cda6a8a475641ada320ad36624">m_lastPositionAllocated</a>.first+1,<a class="code" href="classPixPagerAtlasPage.htm#a9488a7cda6a8a475641ada320ad36624">m_lastPositionAllocated</a>.second);
<a name="l00162"></a>00162                 }
<a name="l00163"></a>00163                 <span class="keywordflow">return</span> <span class="keyword">true</span>;
<a name="l00164"></a>00164         }
<a name="l00165"></a>00165 
<a name="l00166"></a>00166         QRect <a class="code" href="classPixPagerAtlasPage.htm#a1a960e82ad529feb7a0dd708c2baaefd">targetRectForGridCoordinates</a>(<span class="keyword">const</span> QPair&lt;quint32,quint32&gt;&amp; gridCoordinates) <span class="keyword">const</span>;
<a name="l00167"></a>00167 
<a name="l00168"></a><a class="code" href="classPixPagerAtlasPage.htm#af5f461c90ad79ee71eb7185ecbb00191">00168</a>         QHash&lt;QUuid,PixmapRects&gt; <a class="code" href="classPixPagerAtlasPage.htm#af5f461c90ad79ee71eb7185ecbb00191">m_directory</a>;           <span class="comment">//keeps the locations of the contained</span>
<a name="l00169"></a>00169                                                                                                                         <span class="comment">//mini-pm&#39;s keyed on their uids null if the page isn&#39;t an atlas</span>
<a name="l00170"></a><a class="code" href="classPixPagerAtlasPage.htm#ab1210cf672c48dadf6944b751ce12d61">00170</a>         quint32 <a class="code" href="classPixPagerAtlasPage.htm#ab1210cf672c48dadf6944b751ce12d61">m_pixmapSqSize</a>;                 <span class="comment">//the size designation for this atlas page...32 -&gt; 32x32 sq. pixmaps</span>
<a name="l00171"></a>00171                                                                                 <span class="comment">//this is also the classId passed back to the add functions</span>
<a name="l00172"></a><a class="code" href="classPixPagerAtlasPage.htm#a4e12c20d19e88c395f81d4ffe6b726de">00172</a>         QList&lt;QPair&lt;quint32,quint32&gt; &gt; <a class="code" href="classPixPagerAtlasPage.htm#a4e12c20d19e88c395f81d4ffe6b726de">m_freeList</a>;
<a name="l00173"></a>00173 
<a name="l00174"></a><a class="code" href="classPixPagerAtlasPage.htm#a66122dd98ca30cc020612c7c7ed1bf41">00174</a>         quint32 <a class="code" href="classPixPagerAtlasPage.htm#a66122dd98ca30cc020612c7c7ed1bf41">m_rows</a>;
<a name="l00175"></a><a class="code" href="classPixPagerAtlasPage.htm#a7df0e49e37fba533d0ebbdbfc7651054">00175</a>         quint32 <a class="code" href="classPixPagerAtlasPage.htm#a7df0e49e37fba533d0ebbdbfc7651054">m_columns</a>;
<a name="l00176"></a><a class="code" href="classPixPagerAtlasPage.htm#ab37bc9c2bd26b0713fa3e86326cfad8f">00176</a>         quint32 <a class="code" href="classPixPagerAtlasPage.htm#ab37bc9c2bd26b0713fa3e86326cfad8f">m_xLeadingPixelSpace</a>;
<a name="l00177"></a><a class="code" href="classPixPagerAtlasPage.htm#af35682683291a80c19f91f6109e9e510">00177</a>         quint32 <a class="code" href="classPixPagerAtlasPage.htm#af35682683291a80c19f91f6109e9e510">m_yLeadingPixelSpace</a>;
<a name="l00178"></a><a class="code" href="classPixPagerAtlasPage.htm#ae1f56c4e6ae2ca3e9c904f2b0338a615">00178</a>         quint32 <a class="code" href="classPixPagerAtlasPage.htm#ae1f56c4e6ae2ca3e9c904f2b0338a615">m_xTrailingPixelSpace</a>;
<a name="l00179"></a><a class="code" href="classPixPagerAtlasPage.htm#ade00c93352318eec0304fb2ba9ee109a">00179</a>         quint32 <a class="code" href="classPixPagerAtlasPage.htm#ade00c93352318eec0304fb2ba9ee109a">m_yTrailingPixelSpace</a>;
<a name="l00180"></a><a class="code" href="classPixPagerAtlasPage.htm#ac856499733553de8b7b6e516baed02ed">00180</a>         quint32 <a class="code" href="classPixPagerAtlasPage.htm#ac856499733553de8b7b6e516baed02ed">m_interRowPixelSpace</a>;
<a name="l00181"></a><a class="code" href="classPixPagerAtlasPage.htm#aa09f7b488646a680fda43569d6ca9c82">00181</a>         quint32 <a class="code" href="classPixPagerAtlasPage.htm#aa09f7b488646a680fda43569d6ca9c82">m_interColPixelSpace</a>;
<a name="l00182"></a><a class="code" href="classPixPagerAtlasPage.htm#a9488a7cda6a8a475641ada320ad36624">00182</a>         QPair&lt;quint32,quint32&gt; <a class="code" href="classPixPagerAtlasPage.htm#a9488a7cda6a8a475641ada320ad36624">m_lastPositionAllocated</a>;
<a name="l00183"></a><a class="code" href="classPixPagerAtlasPage.htm#a54140d9d5430f4fa41a503442ac00b9d">00183</a>         <span class="keyword">static</span> QPair&lt;quint32,quint32&gt; <a class="code" href="classPixPagerAtlasPage.htm#a54140d9d5430f4fa41a503442ac00b9d">INVALID_LOCATION</a>;
<a name="l00184"></a>00184 };
<a name="l00185"></a>00185 
<a name="l00186"></a><a class="code" href="namespacePageOpsReturnCode.htm">00186</a> <span class="keyword">namespace </span>PageOpsReturnCode
<a name="l00187"></a>00187 {
<a name="l00188"></a><a class="code" href="namespacePageOpsReturnCode.htm#afb0a3a841d44716f059fa212597f55f4">00188</a>         <span class="keyword">enum</span> <a class="code" href="namespacePageOpsReturnCode.htm#afb0a3a841d44716f059fa212597f55f4">Enum</a>
<a name="l00189"></a>00189         {
<a name="l00190"></a><a class="code" href="namespacePageOpsReturnCode.htm#afb0a3a841d44716f059fa212597f55f4a7db7cc2c39a2e73a924998427ece393a">00190</a>                 <a class="code" href="namespacePageOpsReturnCode.htm#afb0a3a841d44716f059fa212597f55f4a7db7cc2c39a2e73a924998427ece393a">OK</a>,
<a name="l00191"></a><a class="code" href="namespacePageOpsReturnCode.htm#afb0a3a841d44716f059fa212597f55f4aa50a0ea91e7ade8a3b751333e6e29402">00191</a>                 <a class="code" href="namespacePageOpsReturnCode.htm#afb0a3a841d44716f059fa212597f55f4aa50a0ea91e7ade8a3b751333e6e29402">InvalidParameters</a>,
<a name="l00192"></a><a class="code" href="namespacePageOpsReturnCode.htm#afb0a3a841d44716f059fa212597f55f4a49af2b4972ed5a8d912b42fdb42f2da6">00192</a>                 <a class="code" href="namespacePageOpsReturnCode.htm#afb0a3a841d44716f059fa212597f55f4a49af2b4972ed5a8d912b42fdb42f2da6">PageSizeExceedsMaxTextureSize</a>,
<a name="l00193"></a><a class="code" href="namespacePageOpsReturnCode.htm#afb0a3a841d44716f059fa212597f55f4a7adb89bbcbd4f156d2e1a23147d05806">00193</a>                 <a class="code" href="namespacePageOpsReturnCode.htm#afb0a3a841d44716f059fa212597f55f4a7adb89bbcbd4f156d2e1a23147d05806">PageSizeExceedsMaxCacheSize</a>
<a name="l00194"></a>00194         };
<a name="l00195"></a>00195 }
<a name="l00196"></a>00196 
<a name="l00197"></a><a class="code" href="classPixPager.htm">00197</a> <span class="keyword">class </span><a class="code" href="classPixPager.htm">PixPager</a> : <span class="keyword">public</span> <a class="code" href="classQObject.htm">QObject</a>
<a name="l00198"></a>00198 {
<a name="l00199"></a>00199         Q_OBJECT
<a name="l00200"></a>00200 
<a name="l00201"></a>00201 <span class="keyword">public</span>:
<a name="l00202"></a>00202         <a class="code" href="classPixPager.htm#a246c5d432f51697c4449eed19ab8d019">PixPager</a>();
<a name="l00203"></a>00203         <span class="keyword">virtual</span> <a class="code" href="classPixPager.htm#aa460769e9a538f643c53234de94bc487">~PixPager</a>();
<a name="l00204"></a>00204 
<a name="l00205"></a>00205         <span class="comment">//general function; will lookup both atlas and non-atlas based uids</span>
<a name="l00206"></a>00206         <a class="code" href="classPixmapObject.htm">PixmapObject</a> * <a class="code" href="classPixPager.htm#a60d1a1627b987b7940d2f9415dc0b157">getPixmap</a>(<span class="keyword">const</span> QUuid&amp; uid,QRect&amp; r_coordRect,QSize&amp; r_originalSize);
<a name="l00207"></a>00207 
<a name="l00208"></a>00208         <span class="comment">//returns a uid as a handle, which will not be valid if the add failed</span>
<a name="l00209"></a>00209         <span class="comment">// * pinPage will make sure that the page in question in never expunged from the cache.</span>
<a name="l00210"></a>00210         QUuid <a class="code" href="classPixPager.htm#a3075cb6ae30f03e8a778e336e3a32bee">addPixmap</a>(QPixmap * p_pixmap,<span class="keywordtype">bool</span> pinPage=<span class="keyword">false</span>);
<a name="l00211"></a>00211 
<a name="l00212"></a>00212         <span class="comment">/*</span>
<a name="l00213"></a>00213 <span class="comment">         *</span>
<a name="l00214"></a>00214 <span class="comment">         * allowScale will try and scale the pixmap up or down to fit on an existing atlas page. The allowed scale amounts</span>
<a name="l00215"></a>00215 <span class="comment">         * are in the gfxsettings file. It will try to scale up first, because it&#39;s usually less lossy when it is scaled back</span>
<a name="l00216"></a>00216 <span class="comment">         * down later to return it to normal</span>
<a name="l00217"></a>00217 <span class="comment">         * allowPageCreation will allow a new atlas page to be created if none is found to fit this pixmap (even w/ scaling,</span>
<a name="l00218"></a>00218 <span class="comment">         * if it was allowed). If it is false, and a page can&#39;t be found, then the add will fail</span>
<a name="l00219"></a>00219 <span class="comment">         *</span>
<a name="l00220"></a>00220 <span class="comment">         * if both settings are true, a scaling will be tried, followed by the creation of a page</span>
<a name="l00221"></a>00221 <span class="comment">         *</span>
<a name="l00222"></a>00222 <span class="comment">         * by default, atlas pages are always pinned and will never be expunged by automatic replacement means,</span>
<a name="l00223"></a>00223 <span class="comment">         * so use allowPageCreation carefully</span>
<a name="l00224"></a>00224 <span class="comment">         */</span>
<a name="l00225"></a>00225         QUuid <a class="code" href="classPixPager.htm#aa2ccb1a2e94d384de7ef97ebc804511b">addPixmapToAtlasPage</a>(QPixmap * p_pixmap,<span class="keywordtype">bool</span> allowScale=<span class="keyword">true</span>,<span class="keywordtype">bool</span> allowPageCreation=<span class="keyword">false</span>);
<a name="l00226"></a>00226 
<a name="l00227"></a><a class="code" href="classPixPager.htm#abfea6d5902fba1350fbbfd286a06d342">00227</a>         <span class="keyword">friend</span> <span class="keyword">class </span><a class="code" href="classPixPagerPage.htm">PixPagerPage</a>;
<a name="l00228"></a><a class="code" href="classPixPager.htm#a86a3dbe83a20991d2c60bf4374223804">00228</a>         <span class="keyword">friend</span> <span class="keyword">class </span><a class="code" href="classPixPagerDebugger.htm">PixPagerDebugger</a>;
<a name="l00229"></a>00229 
<a name="l00230"></a>00230 <span class="keyword">private</span>:
<a name="l00231"></a>00231 
<a name="l00232"></a>00232         <span class="keywordtype">void</span> _pagePixmapDeleted(<a class="code" href="classPixPagerPage.htm">PixPagerPage</a> * p_page);
<a name="l00233"></a>00233         <span class="comment">//returns # of pages expunged</span>
<a name="l00234"></a>00234         quint32  _findAndExpunge(quint32 minSize);
<a name="l00235"></a>00235         <span class="keywordtype">void</span> _deleteRegularPage(<a class="code" href="classPixPagerPage.htm">PixPagerPage</a> * p_page);
<a name="l00236"></a>00236         <span class="comment">// try and figure out if the pixmap can be &quot;squarified&quot; to an existing atlas page size requirement</span>
<a name="l00237"></a>00237         <span class="comment">//              given the current atlas page size designations and the allowed scale factors in the gfxsettings</span>
<a name="l00238"></a>00238         <span class="comment">//              file. If yes, the new square size is returned (i.e. the quint returned is the length of a side</span>
<a name="l00239"></a>00239         <span class="comment">//              of the square.</span>
<a name="l00240"></a>00240         <span class="comment">//              If no, then just the existing size is returned</span>
<a name="l00241"></a>00241         quint32 _determineSquareSize(QPixmap * p_pixmap,<span class="keywordtype">bool</span> allowScale) <span class="keyword">const</span>;
<a name="l00242"></a>00242         quint32 _determineSquareSizeFromRectPixmap(QPixmap * p_pixmap,<span class="keywordtype">bool</span> allowScale) <span class="keyword">const</span>;
<a name="l00243"></a>00243         quint32 _forceSquarify(QPixmap * p_pixmap,<span class="keywordtype">bool</span> maxRect=<span class="keyword">false</span>) <span class="keyword">const</span>;
<a name="l00244"></a>00244 
<a name="l00245"></a>00245         <span class="keyword">static</span> <span class="keywordtype">bool</span> _isSquarePix(QPixmap * p_pixmap);
<a name="l00246"></a>00246 
<a name="l00247"></a>00247         <a class="code" href="namespacePageOpsReturnCode.htm#afb0a3a841d44716f059fa212597f55f4">PageOpsReturnCode::Enum</a> _addAtlasPixmapEntry(<a class="code" href="classPixPagerAtlasPage.htm">PixPagerAtlasPage</a>&amp; page,QPixmap * p_pixmap,quint32 sqSize,<span class="keyword">const</span> QPair&lt;quint32,quint32&gt;&amp; targetGridLocation,
<a name="l00248"></a>00248                                                                                                 QUuid&amp; r_insertedPixmapUid);
<a name="l00249"></a>00249         <a class="code" href="namespacePageOpsReturnCode.htm#afb0a3a841d44716f059fa212597f55f4">PageOpsReturnCode::Enum</a> _createAndAddAtlasPageWithInitialEntry(QPixmap * p_pixmap,quint32 sqSize,quint32 initialRows,quint32 initialColumns,
<a name="l00250"></a>00250                                                                                                                                         QUuid&amp; r_pageUid,QUuid&amp; r_insertedPixmapUid,<span class="keywordtype">bool</span> allowExpunge=<span class="keyword">true</span>);
<a name="l00251"></a>00251         <a class="code" href="namespacePageOpsReturnCode.htm#afb0a3a841d44716f059fa212597f55f4">PageOpsReturnCode::Enum</a> _copyAndExpandAtlasPage(<a class="code" href="classPixPagerAtlasPage.htm">PixPagerAtlasPage</a> * p_atlasPage,quint32 numRows,
<a name="l00252"></a>00252                                                                                                         quint32 numColumns,<span class="keywordtype">bool</span> makeSquarePage=<span class="keyword">false</span>,QPair&lt;quint32,quint32&gt; * r_p_nextAvailableLocation=0);
<a name="l00253"></a>00253         <span class="keyword">static</span> quint32 nextpwr2(quint32 t);
<a name="l00254"></a>00254 
<a name="l00255"></a>00255         <span class="keyword">inline</span> quint32 _spaceRemaining()<span class="keyword"> const</span>
<a name="l00256"></a>00256 <span class="keyword">        </span>{ <span class="keywordflow">return</span> (m_maxSizeInBytes &lt;= m_currentSizeInBytes ? 0 : (m_maxSizeInBytes - m_currentSizeInBytes)); }
<a name="l00257"></a>00257         <span class="keyword">inline</span> quint32 _expungeAmountForMinsize(quint32 minSize)<span class="keyword"> const</span>
<a name="l00258"></a>00258 <span class="keyword">        </span>{
<a name="l00259"></a>00259                 <span class="comment">//since maxSizeInBytes is not a hard limit (it can be exceeded slightly on a temporary basis), max - current = s , s &lt; 0 is possible</span>
<a name="l00260"></a>00260                 <span class="comment">//this convenience function will take that negative s and add it to minSize so that the minimal amount that needs to be</span>
<a name="l00261"></a>00261                 <span class="comment">//expunged to allocate a minSize page is returned</span>
<a name="l00262"></a>00262                 <span class="keywordflow">return</span> ((m_maxSizeInBytes &lt;= m_currentSizeInBytes) ? (minSize+(m_currentSizeInBytes-m_maxSizeInBytes))
<a name="l00263"></a>00263                                 : ((m_maxSizeInBytes-m_currentSizeInBytes &gt;= minSize) ? 0
<a name="l00264"></a>00264                                                 :(minSize - (m_maxSizeInBytes-m_currentSizeInBytes))));
<a name="l00265"></a>00265         }
<a name="l00266"></a>00266 
<a name="l00267"></a>00267         quint32 m_maxSizeInBytes;
<a name="l00268"></a>00268         quint32 m_currentSizeInBytes;
<a name="l00269"></a>00269         quint32 m_accessCounter;                <span class="comment">//getPixmap access for all pages</span>
<a name="l00270"></a>00270 
<a name="l00271"></a>00271         <span class="comment">//keyed by the size of the small pixmaps within ...so 64 -&gt; 64x64 pixmaps</span>
<a name="l00272"></a>00272         <span class="comment">//alias hashes, so they don&#39;t own the pixpagerpages</span>
<a name="l00273"></a>00273         <span class="comment">// there may be multiple entries with the same size (using insertMulti)</span>
<a name="l00274"></a>00274         QMap&lt;quint32,PixPagerPage *&gt; m_atlasPages_alias;
<a name="l00275"></a>00275         QHash&lt;QUuid,PixPagerPage *&gt; m_atlasPagesByIndividualUids_alias;         <span class="comment">//key: the little pixmap inside the atlas&#39;s uid,</span>
<a name="l00276"></a>00276                                                                                                                                                 <span class="comment">//value: the pixpagerpage that contains the atlas for it</span>
<a name="l00277"></a>00277 
<a name="l00278"></a>00278         <span class="comment">//this one owns the pages</span>
<a name="l00279"></a>00279         QHash&lt;QUuid,PixPagerPage *&gt; m_pageCache;
<a name="l00280"></a>00280 
<a name="l00281"></a>00281 };
<a name="l00282"></a>00282 
<a name="l00283"></a>00283 <span class="preprocessor">#endif </span><span class="comment">/* PIXPAGER_H_ */</span>
</pre></div></div><!-- contents -->
</div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Properties</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Defines</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="pixpager_8h.htm">pixpager.h</a>      </li>

    <li class="footer">Generated on Sun Oct 21 2012 15:07:38 for LunaSysMgr by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.6.1 </li>
   </ul>
 </div>


</body>
</html>
