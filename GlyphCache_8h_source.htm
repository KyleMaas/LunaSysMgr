<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>LunaSysMgr: GlyphCache.h Source File</title>

<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>

</head>
<body>
<div id="top"><!-- do not remove this div! -->


<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  
  
  <td style="padding-left: 0.5em;">
   <div id="projectname">LunaSysMgr
   
   </div>
   
  </td>
  
  
  
 </tr>
 </tbody>
</table>
</div>

<!-- Generated by Doxygen 1.7.6.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
      <li><a href="dirs.htm"><span>Directories</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.htm"><span>File&#160;List</span></a></li>
      <li><a href="globals.htm"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('GlyphCache_8h.htm','');
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">GlyphCache.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="GlyphCache_8h.htm">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/* @@@LICENSE</span>
<a name="l00002"></a>00002 <span class="comment">*</span>
<a name="l00003"></a>00003 <span class="comment">*      Copyright (c) 2011-2012 Hewlett-Packard Development Company, L.P.</span>
<a name="l00004"></a>00004 <span class="comment">*</span>
<a name="l00005"></a>00005 <span class="comment">* Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</span>
<a name="l00006"></a>00006 <span class="comment">* you may not use this file except in compliance with the License.</span>
<a name="l00007"></a>00007 <span class="comment">* You may obtain a copy of the License at</span>
<a name="l00008"></a>00008 <span class="comment">*</span>
<a name="l00009"></a>00009 <span class="comment">* http://www.apache.org/licenses/LICENSE-2.0</span>
<a name="l00010"></a>00010 <span class="comment">*</span>
<a name="l00011"></a>00011 <span class="comment">* Unless required by applicable law or agreed to in writing, software</span>
<a name="l00012"></a>00012 <span class="comment">* distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span>
<a name="l00013"></a>00013 <span class="comment">* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span>
<a name="l00014"></a>00014 <span class="comment">* See the License for the specific language governing permissions and</span>
<a name="l00015"></a>00015 <span class="comment">* limitations under the License.</span>
<a name="l00016"></a>00016 <span class="comment">*</span>
<a name="l00017"></a>00017 <span class="comment">* LICENSE@@@ */</span>
<a name="l00018"></a>00018 
<a name="l00019"></a>00019 
<a name="l00020"></a>00020 
<a name="l00021"></a>00021 
<a name="l00022"></a>00022 <span class="preprocessor">#ifndef GLYPHCACHE_H</span>
<a name="l00023"></a>00023 <span class="preprocessor"></span><span class="preprocessor">#define GLYPHCACHE_H</span>
<a name="l00024"></a>00024 <span class="preprocessor"></span>
<a name="l00025"></a>00025 <span class="preprocessor">#include &lt;qpainter.h&gt;</span>
<a name="l00026"></a>00026 <span class="preprocessor">#include &lt;map&gt;</span>
<a name="l00027"></a>00027 <span class="preprocessor">#include &lt;vector&gt;</span>
<a name="l00028"></a>00028 <span class="preprocessor">#include &quot;<a class="code" href="Logging_8h.htm">Logging.h</a>&quot;</span>
<a name="l00029"></a>00029 <span class="preprocessor">#include &quot;<a class="code" href="VirtualKeyboard_8h.htm">VirtualKeyboard.h</a>&quot;</span>    <span class="comment">// for debug options</span>
<a name="l00030"></a>00030 
<a name="l00031"></a>00031 <span class="keywordtype">void</span> <a class="code" href="GlyphCache_8cpp.htm#a44edfd0c7d8320392bd99b991ac2a261">initPixmapFragment</a>(QPainter::PixmapFragment &amp; fragment, <span class="keyword">const</span> QPointF &amp; topLeft, <span class="keyword">const</span> QRectF &amp; source);
<a name="l00032"></a>00032 <span class="keywordtype">void</span> <a class="code" href="GlyphCache_8cpp.htm#a44edfd0c7d8320392bd99b991ac2a261">initPixmapFragment</a>(QPainter::PixmapFragment &amp; fragment, <span class="keyword">const</span> QRectF &amp; dest, <span class="keyword">const</span> QRectF &amp; source);
<a name="l00033"></a>00033 
<a name="l00034"></a><a class="code" href="classGlyphCache.htm">00034</a> <span class="keyword">template</span> &lt;<span class="keyword">class</span> T&gt; <span class="keyword">class </span><a class="code" href="classGlyphCache.htm">GlyphCache</a> {
<a name="l00035"></a>00035 
<a name="l00036"></a>00036 <span class="keyword">public</span>:
<a name="l00037"></a><a class="code" href="structGlyphCache_1_1Line.htm">00037</a>         <span class="keyword">struct </span><a class="code" href="structGlyphCache_1_1Line.htm">Line</a> {
<a name="l00038"></a><a class="code" href="structGlyphCache_1_1Line.htm#a3f807afee9d78515de64843ebd657c07">00038</a>                 <a class="code" href="structGlyphCache_1_1Line.htm#a3f807afee9d78515de64843ebd657c07">Line</a>(<span class="keywordtype">int</span> height = 0, <span class="keywordtype">int</span> width = 0) : <a class="code" href="structGlyphCache_1_1Line.htm#a1fd5c5332608c88b615cf30928ab4524">m_height</a>(height), <a class="code" href="structGlyphCache_1_1Line.htm#a07e772ab18a3f1275199d32a7925073e">m_usedWidth</a>(width) {}
<a name="l00039"></a><a class="code" href="structGlyphCache_1_1Line.htm#a1fd5c5332608c88b615cf30928ab4524">00039</a>                 <span class="keywordtype">int</span>     <a class="code" href="structGlyphCache_1_1Line.htm#a1fd5c5332608c88b615cf30928ab4524">m_height</a>;
<a name="l00040"></a><a class="code" href="structGlyphCache_1_1Line.htm#a07e772ab18a3f1275199d32a7925073e">00040</a>                 <span class="keywordtype">int</span> <a class="code" href="structGlyphCache_1_1Line.htm#a07e772ab18a3f1275199d32a7925073e">m_usedWidth</a>;
<a name="l00041"></a>00041         };
<a name="l00042"></a>00042 
<a name="l00043"></a><a class="code" href="classGlyphCache.htm#a60c001ac2d2c6f8d74b6153e5d216a1b">00043</a>         <span class="keyword">typedef</span> std::map&lt;T, QRect&gt; <a class="code" href="classGlyphCache.htm#a60c001ac2d2c6f8d74b6153e5d216a1b">GlyphMap</a>;
<a name="l00044"></a>00044 
<a name="l00045"></a><a class="code" href="classGlyphCache.htm#ace169957bd759b11cd0e1db45399ab3f">00045</a>         QPixmap &amp;               <a class="code" href="classGlyphCache.htm#ace169957bd759b11cd0e1db45399ab3f">pixmap</a>()                                                { <span class="keywordflow">return</span> m_pixmap; }
<a name="l00046"></a><a class="code" href="classGlyphCache.htm#abf6816988bf3b51eb9d63ac2fd2fd8fa">00046</a>         QRect *                 <a class="code" href="classGlyphCache.htm#abf6816988bf3b51eb9d63ac2fd2fd8fa">lookup</a>(<span class="keyword">const</span> T &amp; ref)                   <span class="comment">// return NULL if the ref isn&#39;t present in the cache</span>
<a name="l00047"></a>00047         {
<a name="l00048"></a>00048                 <span class="keyword">typename</span> GlyphMap::iterator iter = m_cache.find(ref);
<a name="l00049"></a>00049                 <span class="keywordflow">if</span> (iter != m_cache.end())
<a name="l00050"></a>00050                         <span class="keywordflow">return</span> &amp;(iter-&gt;second);
<a name="l00051"></a>00051                 <span class="keywordflow">return</span> NULL;
<a name="l00052"></a>00052         }
<a name="l00053"></a>00053 
<a name="l00054"></a><a class="code" href="classGlyphCache.htm#ac0ba8f6acb45fd2da9a0647f42e25c60">00054</a>         QRect &amp;                 <span class="keyword">get</span>(<span class="keyword">const</span> T &amp; ref)                              <span class="comment">// never returns NULL, but the QRect may be invalid</span>
<a name="l00055"></a>00055         {
<a name="l00056"></a>00056                 <span class="keywordflow">return</span> m_cache[ref];
<a name="l00057"></a>00057         }
<a name="l00058"></a>00058 
<a name="l00059"></a><a class="code" href="classGlyphCache.htm#a83b59a1ffcdfc69f21d71ed1ecc135e9">00059</a>         <span class="keywordtype">bool</span>                    <a class="code" href="classGlyphCache.htm#a83b59a1ffcdfc69f21d71ed1ecc135e9">allocate</a>(<span class="keyword">const</span> QSize &amp; size, QRect &amp; rect)
<a name="l00060"></a>00060         {
<a name="l00061"></a>00061                 <span class="keywordtype">int</span> usedHeight = 0;
<a name="l00062"></a>00062                 <span class="keyword">typename</span> std::vector&lt;Line&gt;::iterator bestMatch = m_lines.end();
<a name="l00063"></a>00063                 <span class="keywordtype">int</span>     bestMatchUsedHeight = 0;
<a name="l00064"></a>00064                 <span class="keywordflow">for</span> (<span class="keyword">typename</span> std::vector&lt;Line&gt;::iterator line = m_lines.begin(); line != m_lines.end(); ++line)
<a name="l00065"></a>00065                 {
<a name="l00066"></a>00066                         <span class="keywordflow">if</span> (line-&gt;m_height &gt;= size.height() &amp;&amp; line-&gt;m_usedWidth + size.width() &lt;= m_pixmap.width())
<a name="l00067"></a>00067                         {
<a name="l00068"></a>00068                                 <span class="keywordflow">if</span> (line-&gt;m_height == size.height())    <span class="comment">// exact height: no need to look any further</span>
<a name="l00069"></a>00069                                         <span class="keywordflow">return</span> useLine(line-&gt;m_usedWidth, usedHeight, size, rect);
<a name="l00070"></a>00070                                 <span class="keywordflow">if</span> (bestMatch == m_lines.end() || bestMatch-&gt;m_height &gt; line-&gt;m_height)
<a name="l00071"></a>00071                                         bestMatch = line, bestMatchUsedHeight = usedHeight;
<a name="l00072"></a>00072                         }
<a name="l00073"></a>00073                         usedHeight += line-&gt;m_height;
<a name="l00074"></a>00074                 }
<a name="l00075"></a>00075                 <span class="comment">// is the best match good enough?</span>
<a name="l00076"></a>00076                 <span class="keywordflow">if</span> (bestMatch != m_lines.end() &amp;&amp; bestMatch-&gt;m_height &lt;= size.height() * 12 / 10)
<a name="l00077"></a>00077                         <span class="keywordflow">return</span> useLine(bestMatch-&gt;m_usedWidth, bestMatchUsedHeight, size, rect);
<a name="l00078"></a>00078                 <span class="comment">// best match not good enough, let&#39;s create a new line if possible</span>
<a name="l00079"></a>00079                 <span class="keywordflow">if</span> (usedHeight + size.height() &lt;= m_pixmap.height() &amp;&amp; size.width() &lt;= m_pixmap.width())
<a name="l00080"></a>00080                 {
<a name="l00081"></a>00081                         m_lines.push_back(Line(size.height()));
<a name="l00082"></a>00082                         <span class="keywordflow">return</span> useLine(m_lines.back().m_usedWidth, usedHeight, size, rect);
<a name="l00083"></a>00083                 }
<a name="l00084"></a>00084                 <span class="comment">// can the last line be grown verticaly using the last unused pixels to fit in?...</span>
<a name="l00085"></a>00085                 <span class="keywordflow">if</span> (m_lines.size() &gt; 0)
<a name="l00086"></a>00086                 {
<a name="l00087"></a>00087                         Line &amp; lastLine = m_lines.back();
<a name="l00088"></a>00088                         usedHeight -= lastLine.m_height;
<a name="l00089"></a>00089                         <span class="keywordflow">if</span> (usedHeight + size.height() &lt;= m_pixmap.height() &amp;&amp; lastLine.m_usedWidth + size.width() &lt;= m_pixmap.width())
<a name="l00090"></a>00090                         {
<a name="l00091"></a>00091                                 lastLine.m_height = size.height();
<a name="l00092"></a>00092                                 <span class="keywordflow">return</span> useLine(lastLine.m_usedWidth, usedHeight, size, rect);
<a name="l00093"></a>00093                         }
<a name="l00094"></a>00094                 }
<a name="l00095"></a>00095                 <span class="comment">// best match is the only match, let&#39;s use it no matter how bad it is...</span>
<a name="l00096"></a>00096                 <span class="keywordflow">if</span> (bestMatch != m_lines.end())
<a name="l00097"></a>00097                         <span class="keywordflow">return</span> useLine(bestMatch-&gt;m_usedWidth, bestMatchUsedHeight, size, rect);
<a name="l00098"></a>00098                 m_full = <span class="keyword">true</span>;
<a name="l00099"></a>00099                 <span class="keywordflow">return</span> <span class="keyword">false</span>;
<a name="l00100"></a>00100         }
<a name="l00101"></a><a class="code" href="classGlyphCache.htm#acb37abe53ced07e6eca245cf632fd1a7">00101</a>         <span class="keywordtype">bool</span>            <a class="code" href="classGlyphCache.htm#acb37abe53ced07e6eca245cf632fd1a7">isFull</a>()<span class="keyword"> const                                          </span>{ <span class="keywordflow">return</span> m_full; }
<a name="l00102"></a>00102 
<a name="l00103"></a><a class="code" href="classGlyphCache.htm#ab54ac66ba884fdfbc1a61aafcf4cd2d9">00103</a>         <a class="code" href="classGlyphCache.htm#ab54ac66ba884fdfbc1a61aafcf4cd2d9">GlyphCache</a>(<span class="keywordtype">int</span> height, <span class="keywordtype">int</span> lineWidth = 1024) : m_pixmap(lineWidth, height), m_full(false)
<a name="l00104"></a>00104         {
<a name="l00105"></a>00105                 m_pixmap.fill(QColor(0, 0, 0, 0));
<a name="l00106"></a>00106         }
<a name="l00107"></a>00107 
<a name="l00108"></a>00108 <span class="keyword">private</span>:
<a name="l00109"></a>00109         QPixmap                         m_pixmap;
<a name="l00110"></a>00110         std::vector&lt;Line&gt;       m_lines;
<a name="l00111"></a>00111         <a class="code" href="classGlyphCache.htm#a60c001ac2d2c6f8d74b6153e5d216a1b">GlyphMap</a>                        m_cache;
<a name="l00112"></a>00112         <span class="keywordtype">bool</span>                            m_full;
<a name="l00113"></a>00113 
<a name="l00114"></a>00114         <span class="comment">// utility method to set the rect to the right values &amp; update the line&#39;s used width</span>
<a name="l00115"></a>00115         <span class="keyword">inline</span> <span class="keywordtype">bool</span>     useLine(<span class="keywordtype">int</span> &amp; lineUsedWidth, <span class="keywordtype">int</span> top, <span class="keyword">const</span> QSize &amp; size, QRect &amp; rect)
<a name="l00116"></a>00116         {
<a name="l00117"></a>00117                 rect.setRect(lineUsedWidth, top, size.width(), size.height());
<a name="l00118"></a>00118                 lineUsedWidth += size.width();
<a name="l00119"></a>00119                 <span class="keywordflow">return</span> <span class="keyword">true</span>;
<a name="l00120"></a>00120         }
<a name="l00121"></a>00121 };
<a name="l00122"></a>00122 
<a name="l00123"></a><a class="code" href="structDirectRenderer.htm">00123</a> <span class="keyword">template</span> &lt;<span class="keyword">class</span> T&gt; <span class="keyword">struct </span><a class="code" href="structDirectRenderer.htm">DirectRenderer</a> {
<a name="l00124"></a>00124         <span class="comment">// &quot;real&quot; operations that perform the real thing without using the cache, and drawing in the painter object.</span>
<a name="l00125"></a>00125         <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="structDirectRenderer.htm#a4c368009cfd2396acadc6f188742c555">boundingRect</a>(<span class="keyword">const</span> QRect &amp; location, <span class="keyword">const</span> T &amp; textSpec, QFont &amp; font, <span class="keywordtype">int</span> flags, QRect &amp; outBoundingRect) = 0;
<a name="l00126"></a>00126         <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="structDirectRenderer.htm#a96c4f70be3bb382386ba188752e6745a">renderNow</a>(QPainter &amp; painter, <span class="keyword">const</span> QRect &amp; location, <span class="keyword">const</span> T &amp; textSpec, <span class="keywordtype">int</span> flags) = 0;
<a name="l00127"></a>00127 };
<a name="l00128"></a>00128 
<a name="l00129"></a><a class="code" href="classGlyphRenderer.htm">00129</a> <span class="keyword">template</span> &lt;<span class="keyword">class</span> T&gt; <span class="keyword">class </span><a class="code" href="classGlyphRenderer.htm">GlyphRenderer</a> {
<a name="l00130"></a>00130 <span class="keyword">public</span>:
<a name="l00131"></a><a class="code" href="classGlyphRenderer.htm#aa07d77c5d1ef0f254d0177e0cb6ddec8">00131</a>         <a class="code" href="classGlyphRenderer.htm#aa07d77c5d1ef0f254d0177e0cb6ddec8">GlyphRenderer</a>(<a class="code" href="classGlyphCache.htm">GlyphCache&lt;T&gt;</a> &amp; glyphCache, <a class="code" href="structDirectRenderer.htm">DirectRenderer&lt;T&gt;</a> &amp; directRenderer) :
<a name="l00132"></a>00132                 <a class="code" href="classGlyphRenderer.htm#a2338962a9a96a31606112e9ee5534acf">m_glyphCache</a>(glyphCache), <a class="code" href="classGlyphRenderer.htm#a4577710223b77de80b38792a2ed17e02">m_directRenderer</a>(directRenderer) {}
<a name="l00133"></a>00133 
<a name="l00134"></a>00134         <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classGlyphRenderer.htm#a9d5bf90d57aecbfd110ba7695521bf33">render</a>(<span class="keyword">const</span> QRect &amp; location, <span class="keyword">const</span> T &amp; textSpec, QFont &amp; font, <span class="keywordtype">int</span> flags = Qt::AlignCenter) = 0;
<a name="l00135"></a><a class="code" href="classGlyphRenderer.htm#a026e18efd2d6a60682221c0ce8a429fb">00135</a>         <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classGlyphRenderer.htm#a026e18efd2d6a60682221c0ce8a429fb">renderNow</a>(<span class="keyword">const</span> QRect &amp; location, <span class="keyword">const</span> T &amp; textSpec, QFont &amp; font, <span class="keywordtype">int</span> flags = Qt::AlignCenter)           {} <span class="comment">// doesn&#39;t always make sense...</span>
<a name="l00136"></a><a class="code" href="classGlyphRenderer.htm#a5543a0fbc2ab7104f8319ad707b6994e">00136</a>         <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classGlyphRenderer.htm#a5543a0fbc2ab7104f8319ad707b6994e">flush</a>() {}
<a name="l00137"></a>00137 
<a name="l00138"></a>00138 <span class="keyword">protected</span>:
<a name="l00139"></a><a class="code" href="classGlyphRenderer.htm#a2338962a9a96a31606112e9ee5534acf">00139</a>         <a class="code" href="classGlyphCache.htm">GlyphCache&lt;T&gt;</a> &amp;         <a class="code" href="classGlyphRenderer.htm#a2338962a9a96a31606112e9ee5534acf">m_glyphCache</a>;
<a name="l00140"></a><a class="code" href="classGlyphRenderer.htm#a4577710223b77de80b38792a2ed17e02">00140</a>         <a class="code" href="structDirectRenderer.htm">DirectRenderer&lt;T&gt;</a> &amp;     <a class="code" href="classGlyphRenderer.htm#a4577710223b77de80b38792a2ed17e02">m_directRenderer</a>;
<a name="l00141"></a>00141 };
<a name="l00142"></a>00142 
<a name="l00143"></a>00143 <span class="comment">// GlyphRenderer that only populates the cache &amp; doesn&#39;t render anything &quot;for real&quot; besides that.</span>
<a name="l00144"></a><a class="code" href="classGlyphCachePopulator.htm">00144</a> <span class="keyword">template</span> &lt;<span class="keyword">class</span> T&gt; <span class="keyword">class </span><a class="code" href="classGlyphCachePopulator.htm">GlyphCachePopulator</a> : <span class="keyword">public</span> <a class="code" href="classGlyphRenderer.htm">GlyphRenderer</a>&lt;T&gt; {
<a name="l00145"></a>00145 <span class="keyword">public</span>:
<a name="l00146"></a><a class="code" href="classGlyphCachePopulator.htm#a9ec2dde90c92b3e2a2d88ff6a1f7add5">00146</a>         <a class="code" href="classGlyphCachePopulator.htm#a9ec2dde90c92b3e2a2d88ff6a1f7add5">GlyphCachePopulator</a>(<a class="code" href="classGlyphCache.htm">GlyphCache&lt;T&gt;</a> &amp; glyphCache, <a class="code" href="structDirectRenderer.htm">DirectRenderer&lt;T&gt;</a> &amp; directRenderer) : <a class="code" href="classGlyphRenderer.htm">GlyphRenderer</a>&lt;T&gt;(glyphCache, directRenderer), m_painter(&amp;glyphCache.pixmap())
<a name="l00147"></a>00147         {
<a name="l00148"></a>00148                 m_painter.setRenderHints(QPainter::SmoothPixmapTransform | QPainter::HighQualityAntialiasing | QPainter::TextAntialiasing, <span class="keyword">true</span>);
<a name="l00149"></a>00149                 m_painter.setCompositionMode(QPainter::CompositionMode_SourceOver);
<a name="l00150"></a>00150         }
<a name="l00151"></a><a class="code" href="classGlyphCachePopulator.htm#a3685aa2996b0758d7451685cb4c2bc27">00151</a>         <span class="keywordtype">void</span> <a class="code" href="classGlyphCachePopulator.htm#a3685aa2996b0758d7451685cb4c2bc27">render</a>(<span class="keyword">const</span> QRect &amp; location, <span class="keyword">const</span> T &amp; textSpec, QFont &amp; font, <span class="keywordtype">int</span> flags = Qt::AlignCenter)
<a name="l00152"></a>00152         {
<a name="l00153"></a>00153                 QRect &amp; ref = <a class="code" href="classGlyphRenderer.htm">GlyphRenderer&lt;T&gt;::m_glyphCache</a>.get(textSpec);
<a name="l00154"></a>00154                 <span class="keywordflow">if</span> (!ref.isValid())
<a name="l00155"></a>00155                 {
<a name="l00156"></a>00156                         QRect   boundingRect;
<a name="l00157"></a>00157                         textSpec.applyFontSettings(font);
<a name="l00158"></a>00158                         <a class="code" href="classGlyphRenderer.htm">GlyphRenderer&lt;T&gt;::m_directRenderer</a>.boundingRect(location, textSpec, font, flags, boundingRect);
<a name="l00159"></a>00159                         <span class="keywordflow">if</span> (<a class="code" href="classGlyphRenderer.htm">GlyphRenderer&lt;T&gt;::m_glyphCache</a>.allocate(boundingRect.size(), ref) &amp;&amp; <a class="code" href="Logging_8h.htm#a966dfff60ed31702599c822321f9484c" title="Test macro that will make a critical log entry if the test fails.">VERIFY</a>(boundingRect.size() == ref.size()))
<a name="l00160"></a>00160                         {
<a name="l00161"></a>00161                                 m_painter.setFont(font);
<a name="l00162"></a>00162                                 QRect           paintRect(ref.topLeft() + location.topLeft() - boundingRect.topLeft(), location.size());
<a name="l00163"></a>00163 <span class="preprocessor">#if VKB_SHOW_GLYPH_REGIONS</span>
<a name="l00164"></a>00164 <span class="preprocessor"></span>                                m_painter.fillRect(ref, QColor(rand() % 255, rand() % 255, rand() % 255, 255));
<a name="l00165"></a>00165 <span class="preprocessor">#endif</span>
<a name="l00166"></a>00166 <span class="preprocessor"></span>                                <a class="code" href="classGlyphRenderer.htm">GlyphRenderer&lt;T&gt;::m_directRenderer</a>.<a class="code" href="classGlyphRenderer.htm#a026e18efd2d6a60682221c0ce8a429fb">renderNow</a>(m_painter, paintRect, textSpec, flags);
<a name="l00167"></a>00167                                 <span class="keywordflow">return</span>;
<a name="l00168"></a>00168                         }
<a name="l00169"></a>00169                         g_warning(<span class="stringliteral">&quot;GlyphCachePopulator::render: could not cache %s...&quot;</span>, textSpec.description().toUtf8().data());
<a name="l00170"></a>00170                 }
<a name="l00171"></a>00171         }
<a name="l00172"></a>00172 
<a name="l00173"></a>00173 <span class="keyword">private</span>:
<a name="l00174"></a>00174         QPainter        m_painter;
<a name="l00175"></a>00175 };
<a name="l00176"></a>00176 
<a name="l00177"></a>00177 <span class="comment">// GlyphRenderer that will render from the cache if possible, caching if necessary &amp; possible...</span>
<a name="l00178"></a><a class="code" href="classCachedGlyphRenderer.htm">00178</a> <span class="keyword">template</span> &lt;<span class="keyword">class</span> T&gt; <span class="keyword">class </span><a class="code" href="classCachedGlyphRenderer.htm">CachedGlyphRenderer</a> : <span class="keyword">public</span> <a class="code" href="classGlyphRenderer.htm">GlyphRenderer</a>&lt;T&gt; {
<a name="l00179"></a>00179 <span class="keyword">public</span>:
<a name="l00180"></a><a class="code" href="classCachedGlyphRenderer.htm#aad93d40d12de053936e68e948b059e4b">00180</a>         <a class="code" href="classCachedGlyphRenderer.htm#aad93d40d12de053936e68e948b059e4b">CachedGlyphRenderer</a>(QPainter &amp; painter, <a class="code" href="classGlyphCache.htm">GlyphCache&lt;T&gt;</a> &amp; glyphCache, <a class="code" href="structDirectRenderer.htm">DirectRenderer&lt;T&gt;</a> &amp; directRenderer, <span class="keywordtype">int</span> expectedFragmentCount) : <a class="code" href="classGlyphRenderer.htm">GlyphRenderer</a>&lt;T&gt;(glyphCache, directRenderer), m_painter(painter), m_cacheMissCount(0)
<a name="l00181"></a>00181         {
<a name="l00182"></a>00182                 m_fragments.reserve(expectedFragmentCount);
<a name="l00183"></a>00183         }
<a name="l00184"></a><a class="code" href="classCachedGlyphRenderer.htm#afc1457665ff1426a1438ace7e1ce01d7">00184</a>         <a class="code" href="classCachedGlyphRenderer.htm#afc1457665ff1426a1438ace7e1ce01d7">~CachedGlyphRenderer</a>()
<a name="l00185"></a>00185         {
<a name="l00186"></a>00186                 <a class="code" href="classCachedGlyphRenderer.htm#af074b42e077bdd56c9647266824719f0">flush</a>();
<a name="l00187"></a>00187         }
<a name="l00188"></a>00188 
<a name="l00189"></a><a class="code" href="classCachedGlyphRenderer.htm#a762001b71480038e30bb6c1473d446f5">00189</a>         <span class="keywordtype">void</span> <a class="code" href="classCachedGlyphRenderer.htm#a762001b71480038e30bb6c1473d446f5">render</a>(<span class="keyword">const</span> QRect &amp; location, <span class="keyword">const</span> T &amp; textSpec, QFont &amp; font, <span class="keywordtype">int</span> flags = Qt::AlignCenter)
<a name="l00190"></a>00190         {
<a name="l00191"></a>00191 <span class="preprocessor">#if VKB_ENABLE_GLYPH_CACHE</span>
<a name="l00192"></a>00192 <span class="preprocessor"></span>                QRect * ref = <a class="code" href="classGlyphRenderer.htm">GlyphRenderer&lt;T&gt;::m_glyphCache</a>.lookup(textSpec);
<a name="l00193"></a>00193                 <span class="keywordflow">if</span> (ref &amp;&amp; <a class="code" href="Logging_8h.htm#a966dfff60ed31702599c822321f9484c" title="Test macro that will make a critical log entry if the test fails.">VERIFY</a>(ref-&gt;isValid()))
<a name="l00194"></a>00194                 {
<a name="l00195"></a>00195                         <span class="keywordtype">int</span> x = location.left();
<a name="l00196"></a>00196                         <span class="keywordtype">int</span> y = location.top();
<a name="l00197"></a>00197                         <span class="keywordflow">if</span> (flags &amp; Qt::AlignHCenter)
<a name="l00198"></a>00198                                 x += (location.width() - ref-&gt;width()) / 2;
<a name="l00199"></a>00199                         <span class="keywordflow">else</span> <span class="keywordflow">if</span> (flags &amp; Qt::AlignRight)
<a name="l00200"></a>00200                                 x += location.width() - ref-&gt;width();
<a name="l00201"></a>00201                         <span class="keywordflow">if</span> (flags &amp; Qt::AlignVCenter)
<a name="l00202"></a>00202                                 y += (location.height() - ref-&gt;height()) / 2;
<a name="l00203"></a>00203                         <span class="keywordflow">else</span> <span class="keywordflow">if</span> (flags &amp; Qt::AlignBottom)
<a name="l00204"></a>00204                                 y += location.height() - ref-&gt;height();
<a name="l00205"></a>00205                         QPainter::PixmapFragment        fragment;
<a name="l00206"></a>00206                         <a class="code" href="GlyphCache_8cpp.htm#a44edfd0c7d8320392bd99b991ac2a261">initPixmapFragment</a>(fragment, QPoint(x, y), *ref);
<a name="l00207"></a>00207                         <span class="keywordflow">if</span> (m_fragments.size() &gt;= m_fragments.capacity())
<a name="l00208"></a>00208                                 <a class="code" href="classCachedGlyphRenderer.htm#af074b42e077bdd56c9647266824719f0">flush</a>();
<a name="l00209"></a>00209                         m_fragments.push_back(fragment);
<a name="l00210"></a>00210                         <span class="keywordflow">return</span>;
<a name="l00211"></a>00211                 }
<a name="l00212"></a>00212                 ++m_cacheMissCount;
<a name="l00213"></a>00213 <span class="preprocessor">#ifdef TARGET_DESKTOP</span>
<a name="l00214"></a>00214 <span class="preprocessor"></span>                g_warning(<span class="stringliteral">&quot;CachedGlyphRenderer::render: direct rendering of %s, size=%d, bold=%d...&quot;</span>, textSpec.description().toUtf8().data(), font.pixelSize(), <a class="code" href="classint.htm">int</a>(font.bold()));
<a name="l00215"></a>00215 <span class="preprocessor">#endif</span>
<a name="l00216"></a>00216 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
<a name="l00217"></a>00217 <span class="preprocessor"></span>                <span class="comment">// last resort: direct draw on screen...</span>
<a name="l00218"></a>00218                 textSpec.applyFontSettings(font);
<a name="l00219"></a>00219                 m_painter.setFont(font);
<a name="l00220"></a>00220                 <a class="code" href="classGlyphRenderer.htm">GlyphRenderer&lt;T&gt;::m_directRenderer</a>.<a class="code" href="classGlyphRenderer.htm#a026e18efd2d6a60682221c0ce8a429fb">renderNow</a>(m_painter, location, textSpec, flags);
<a name="l00221"></a>00221         }
<a name="l00222"></a><a class="code" href="classCachedGlyphRenderer.htm#aae82724c2ae21561c82a90a001fca1aa">00222</a>         <span class="keywordtype">void</span> <a class="code" href="classCachedGlyphRenderer.htm#aae82724c2ae21561c82a90a001fca1aa">renderNow</a>(<span class="keyword">const</span> QRect &amp; location, <span class="keyword">const</span> T &amp; textSpec, QFont &amp; font, <span class="keywordtype">int</span> flags = Qt::AlignCenter)
<a name="l00223"></a>00223         {
<a name="l00224"></a>00224                 textSpec.applyFontSettings(font);
<a name="l00225"></a>00225                 m_painter.setFont(font);
<a name="l00226"></a>00226                 <a class="code" href="classGlyphRenderer.htm">GlyphRenderer&lt;T&gt;::m_directRenderer</a>.<a class="code" href="classGlyphRenderer.htm#a026e18efd2d6a60682221c0ce8a429fb">renderNow</a>(m_painter, location, textSpec, flags);
<a name="l00227"></a>00227         }
<a name="l00228"></a>00228 
<a name="l00229"></a><a class="code" href="classCachedGlyphRenderer.htm#af074b42e077bdd56c9647266824719f0">00229</a>         <span class="keywordtype">void</span> <a class="code" href="classCachedGlyphRenderer.htm#af074b42e077bdd56c9647266824719f0">flush</a>()
<a name="l00230"></a>00230         {
<a name="l00231"></a>00231                 <span class="keywordflow">if</span> (m_fragments.size() &gt; 0)
<a name="l00232"></a>00232                 {
<a name="l00233"></a>00233                         m_painter.drawPixmapFragments(&amp;m_fragments[0], m_fragments.size(), <a class="code" href="classGlyphRenderer.htm">GlyphRenderer&lt;T&gt;::m_glyphCache</a>.pixmap());
<a name="l00234"></a>00234                         m_fragments.resize(0);
<a name="l00235"></a>00235                 }
<a name="l00236"></a>00236         }
<a name="l00237"></a><a class="code" href="classCachedGlyphRenderer.htm#a36ff28bd4416cf4a6ab04812671a6a3e">00237</a>         <span class="keywordtype">int</span> <a class="code" href="classCachedGlyphRenderer.htm#a36ff28bd4416cf4a6ab04812671a6a3e">getCacheMissCount</a>()<span class="keyword"> const                   </span>{ <span class="keywordflow">return</span> m_cacheMissCount; }
<a name="l00238"></a>00238 
<a name="l00239"></a>00239 <span class="keyword">private</span>:
<a name="l00240"></a>00240         QPainter &amp;                                                              m_painter;
<a name="l00241"></a>00241         std::vector&lt;QPainter::PixmapFragment&gt;   m_fragments;
<a name="l00242"></a>00242         <span class="keywordtype">int</span>                                                                             m_cacheMissCount;
<a name="l00243"></a>00243 };
<a name="l00244"></a>00244 
<a name="l00245"></a>00245 
<a name="l00246"></a>00246 <span class="comment">/*</span>
<a name="l00247"></a>00247 <span class="comment">  Direct renderer that prints the same text twice using two colors and one pixel vertical offset.</span>
<a name="l00248"></a>00248 <span class="comment">  Requirement:</span>
<a name="l00249"></a>00249 <span class="comment">    class T must have the following members:</span>
<a name="l00250"></a>00250 <span class="comment">        QString m_string: the text</span>
<a name="l00251"></a>00251 <span class="comment">        QColor  m_frontColor: color of the text in front (above)</span>
<a name="l00252"></a>00252 <span class="comment">        QColor  m_backColor: color of the text in the back &amp; below by 1 pixel</span>
<a name="l00253"></a>00253 <span class="comment">*/</span>
<a name="l00254"></a>00254 
<a name="l00255"></a><a class="code" href="classDoubleDrawRendererT.htm">00255</a> <span class="keyword">template</span> &lt;<span class="keyword">class</span> T&gt; <span class="keyword">class </span><a class="code" href="classDoubleDrawRendererT.htm">DoubleDrawRendererT</a> : <span class="keyword">public</span> <a class="code" href="structDirectRenderer.htm">DirectRenderer</a>&lt;T&gt; {
<a name="l00256"></a>00256 <span class="keyword">public</span>:
<a name="l00257"></a><a class="code" href="classDoubleDrawRendererT.htm#aacd04ff27be8fd8abab7cb5b40a3e640">00257</a>     <span class="keywordtype">void</span> <a class="code" href="classDoubleDrawRendererT.htm#aacd04ff27be8fd8abab7cb5b40a3e640">boundingRect</a>(<span class="keyword">const</span> QRect &amp; location, <span class="keyword">const</span> T &amp; textSpec, QFont &amp; font, <span class="keywordtype">int</span> flags, QRect &amp; outBoundingRect)
<a name="l00258"></a>00258     {
<a name="l00259"></a>00259         <span class="comment">// some letters need more space left or right... rather that resize everything, just handle these special cases.</span>
<a name="l00260"></a>00260         outBoundingRect = QFontMetrics(font).boundingRect(location, flags, textSpec.m_string);
<a name="l00261"></a>00261         <span class="keywordflow">if</span> (textSpec.m_string.size() &gt; 0)
<a name="l00262"></a>00262         {
<a name="l00263"></a>00263             <span class="comment">// enlarge to the left?</span>
<a name="l00264"></a>00264             <span class="keywordtype">int</span> left = textSpec.m_string[0].unicode();
<a name="l00265"></a>00265             <span class="keywordflow">if</span> (left == <span class="charliteral">&#39;j&#39;</span> || left == Qt::Key_Idiaeresis <span class="comment">/* Ï */</span>)
<a name="l00266"></a>00266                 outBoundingRect.setLeft(outBoundingRect.left() - 1);
<a name="l00267"></a>00267             <span class="comment">// enlarge to the right?</span>
<a name="l00268"></a>00268             <span class="keywordtype">int</span> right = textSpec.m_string[textSpec.m_string.size() - 1].unicode();
<a name="l00269"></a>00269             <span class="keywordflow">if</span> (right == <span class="charliteral">&#39;F&#39;</span> || right == <span class="charliteral">&#39;X&#39;</span> || right == 0x152 <span class="comment">/* Œ */</span> || right == 0xef <span class="comment">/* ï */</span> || right == 0xed <span class="comment">/* í */</span> || right == 0x142 <span class="comment">/* ł */</span>)
<a name="l00270"></a>00270                 outBoundingRect.setRight(outBoundingRect.right() + 1);
<a name="l00271"></a>00271         }
<a name="l00272"></a>00272         <span class="keywordflow">if</span> (textSpec.m_backColor != textSpec.m_frontColor)
<a name="l00273"></a>00273             outBoundingRect.setBottom(outBoundingRect.bottom() + 1);
<a name="l00274"></a>00274     }
<a name="l00275"></a><a class="code" href="classDoubleDrawRendererT.htm#ab7adc32306e6b0b542266f04f4073594">00275</a>     <span class="keywordtype">void</span> <a class="code" href="classDoubleDrawRendererT.htm#ab7adc32306e6b0b542266f04f4073594">renderNow</a>(QPainter &amp; painter, <span class="keyword">const</span> QRect &amp; r, <span class="keyword">const</span> T &amp; textSpec, <span class="keywordtype">int</span> flags = Qt::AlignCenter)
<a name="l00276"></a>00276     {
<a name="l00277"></a>00277         <span class="keywordflow">if</span> (textSpec.m_backColor != textSpec.m_frontColor)
<a name="l00278"></a>00278         {
<a name="l00279"></a>00279             QRect rect(r);
<a name="l00280"></a>00280             rect.setTop(rect.top() + 1);    <span class="comment">// draw back, one pixel below. Don&#39;t move the bottom: the rect was the frame for both glyphs.</span>
<a name="l00281"></a>00281             painter.setPen(textSpec.m_backColor);
<a name="l00282"></a>00282             painter.drawText(rect, flags | Qt::TextDontClip, textSpec.m_string);
<a name="l00283"></a>00283             painter.setPen(textSpec.m_frontColor);
<a name="l00284"></a>00284             rect.adjust(0, -1, 0, -1);      <span class="comment">// draw front, one pixel above. Move both top &amp; bottom this time.</span>
<a name="l00285"></a>00285             painter.drawText(rect, flags | Qt::TextDontClip, textSpec.m_string);
<a name="l00286"></a>00286         }
<a name="l00287"></a>00287         <span class="keywordflow">else</span>
<a name="l00288"></a>00288         {
<a name="l00289"></a>00289             painter.setPen(textSpec.m_frontColor);
<a name="l00290"></a>00290             painter.drawText(r, flags | Qt::TextDontClip, textSpec.m_string);
<a name="l00291"></a>00291         }
<a name="l00292"></a>00292     }
<a name="l00293"></a>00293 };
<a name="l00294"></a>00294 
<a name="l00295"></a>00295 <span class="preprocessor">#endif // GLYPHCACHE_H</span>
</pre></div></div><!-- contents -->
</div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Properties</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Defines</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="GlyphCache_8h.htm">GlyphCache.h</a>      </li>

    <li class="footer">Generated on Tue Oct 2 2012 22:43:57 for LunaSysMgr by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.6.1 </li>
   </ul>
 </div>


</body>
</html>
